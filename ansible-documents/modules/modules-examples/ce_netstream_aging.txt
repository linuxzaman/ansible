EXAMPLES:

- name: netstream aging module test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: Configure netstream ip timeout active interval , the interval is 40 minutes.
    ce_netstream_aging:
      timeout_interval: 40
      type: ip
      timeout_type: active
      state: present
      provider: "{{ cli }}"

  - name: Configure netstream vxlan timeout active interval , the interval is 40 minutes.
    ce_netstream_aging:
      timeout_interval: 40
      type: vxlan
      timeout_type: active
      active_state: present
      provider: "{{ cli }}"

  - name: Delete netstream ip timeout active interval , set the ip timeout interval to 30 minutes.
    ce_netstream_aging:
      type: ip
      timeout_type: active
      state: absent
      provider: "{{ cli }}"

  - name: Delete netstream vxlan timeout active interval , set the vxlan timeout interval to 30 minutes.
    ce_netstream_aging:
      type: vxlan
      timeout_type: active
      state: absent
      provider: "{{ cli }}"

  - name: Enable netstream ip tcp session timeout.
    ce_netstream_aging:
      type: ip
      timeout_type: tcp-session
      state: present
      provider: "{{ cli }}"

  - name: Enable netstream vxlan tcp session timeout.
    ce_netstream_aging:
      type: vxlan
      timeout_type: tcp-session
      state: present
      provider: "{{ cli }}"

  - name: Disable netstream ip tcp session timeout.
    ce_netstream_aging:
      type: ip
      timeout_type: tcp-session
      state: absent
      provider: "{{ cli }}"

  - name: Disable netstream vxlan tcp session timeout.
    ce_netstream_aging:
      type: vxlan
      timeout_type: tcp-session
      state: absent
      provider: "{{ cli }}"


RETURN VALUES:

proposed:
    description: k/v pairs of parameters passed into module
    returned: verbose mode
    type: dict
    sample: {"timeout_interval": "40",
             "type": "ip",
             "state": "absent",
             "timeout_type": active}
existing:
    description: k/v pairs of existing configuration
    returned: verbose mode
    type: dict
    sample: {"active_timeout": [
            {
                "ip": "40",
                "vxlan": 30
            }
        ],
        "inactive_timeout": [
            {
                "ip": 30,
                "vxlan": 30
            }
        ],
        "tcp_timeout": [
            {
                "ip": "disable",
                "vxlan": "disable"
            }
        ]}
end_state:
    description: k/v pairs of configuration after module execution
    returned: verbose mode
    type: dict
    sample: {"active_timeout": [
            {
                "ip": 30,
                "vxlan": 30
            }
        ],
        "inactive_timeout": [
            {
                "ip": 30,
                "vxlan": 30
            }
        ],
        "tcp_timeout": [
            {
                "ip": "disable",
                "vxlan": "disable"
            }
        ]}
updates:
    description: commands sent to the device
    returned: always
    type: list
    sample: ["undo netstream timeout ip active 40"]
changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true

