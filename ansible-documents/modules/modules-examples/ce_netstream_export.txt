EXAMPLES:

- name: netstream export module test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: Configures the source address for the exported packets carrying IPv4 flow statistics.
    ce_netstream_export:
      type: ip
      source_ip: 192.8.2.2
      provider: "{{ cli }}"

  - name: Configures the source IP address for the exported packets carrying VXLAN flexible flow statistics.
    ce_netstream_export:
      type: vxlan
      source_ip: 192.8.2.3
      provider: "{{ cli }}"

  - name: Configures the destination IP address and destination UDP port number for the exported packets carrying IPv4 flow statistics.
    ce_netstream_export:
      type: ip
      host_ip: 192.8.2.4
      host_port: 25
      host_vpn: test
      provider: "{{ cli }}"

  - name: Configures the destination IP address and destination UDP port number for the exported packets carrying VXLAN flexible flow statistics.
    ce_netstream_export:
      type: vxlan
      host_ip: 192.8.2.5
      host_port: 26
      host_vpn: test
      provider: "{{ cli }}"

  - name: Configures the version number of the exported packets carrying IPv4 flow statistics.
    ce_netstream_export:
      type: ip
      version: 9
      as_option: origin
      bgp_nexthop: enable
      provider: "{{ cli }}"

  - name: Configures the version for the exported packets carrying VXLAN flexible flow statistics.
    ce_netstream_export:
      type: vxlan
      version: 9
      provider: "{{ cli }}"


RETURN VALUES:

proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {
                "as_option": "origin",
                "bgp_nexthop": "enable",
                "host_ip": "192.8.5.6",
                "host_port": "26",
                "host_vpn": "test",
                "source_ip": "192.8.2.5",
                "state": "present",
                "type": "ip",
                "version": "9"
            }
existing:
    description: k/v pairs of existing attributes on the device
    returned: always
    type: dict
    sample: {
                "as_option": null,
                "bgp_nexthop": "disable",
                "host_ip": null,
                "host_port": null,
                "host_vpn": null,
                "source_ip": null,
                "type": "ip",
                "version": null
            }
end_state:
    description: k/v pairs of end attributes on the device
    returned: always
    type: dict
    sample: {
                "as_option": "origin",
                "bgp_nexthop": "enable",
                "host_ip": "192.8.5.6",
                "host_port": "26",
                "host_vpn": "test",
                "source_ip": "192.8.2.5",
                "type": "ip",
                "version": "9"
            }
updates:
    description: command list sent to the device
    returned: always
    type: list
    sample: [
                "netstream export ip source 192.8.2.5",
                "netstream export ip host 192.8.5.6 26 vpn-instance test",
                "netstream export ip version 9 origin-as bgp-nexthop"
            ]
changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true

