EXAMPLES:

- name: create a target pool
  gcp_compute_target_pool:
    name: test_object
    region: us-west1
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

backupPool:
  description:
  - This field is applicable only when the containing target pool is serving a forwarding
    rule as the primary pool, and its failoverRatio field is properly set to a value
    between [0, 1].
  - 'backupPool and failoverRatio together define the fallback behavior of the primary
    target pool: if the ratio of the healthy instances in the primary pool is at or
    below failoverRatio, traffic arriving at the load-balanced IP will be directed
    to the backup pool.'
  - In case where failoverRatio and backupPool are not set, or all the instances in
    the backup pool are unhealthy, the traffic will be directed back to the primary
    pool in the "force" mode, where traffic will be spread to the healthy instances
    with the best effort, or to all instances when no instance is healthy.
  returned: success
  type: dict
creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
description:
  description:
  - An optional description of this resource.
  returned: success
  type: str
failoverRatio:
  description:
  - This field is applicable only when the containing target pool is serving a forwarding
    rule as the primary pool (i.e., not as a backup pool to some other target pool).
    The value of the field must be in [0, 1].
  - 'If set, backupPool must also be set. They together define the fallback behavior
    of the primary target pool: if the ratio of the healthy instances in the primary
    pool is at or below this number, traffic arriving at the load-balanced IP will
    be directed to the backup pool.'
  - In case where failoverRatio is not set or all the instances in the backup pool
    are unhealthy, the traffic will be directed back to the primary pool in the "force"
    mode, where traffic will be spread to the healthy instances with the best effort,
    or to all instances when no instance is healthy.
  returned: success
  type: str
healthCheck:
  description:
  - A reference to a HttpHealthCheck resource.
  - A member instance in this pool is considered healthy if and only if the health
    checks pass. If not specified it means all member instances will be considered
    healthy at all times.
  returned: success
  type: dict
id:
  description:
  - The unique identifier for the resource.
  returned: success
  type: int
instances:
  description:
  - A list of virtual machine instances serving this pool.
  - They must live in zones contained in the same region as this pool.
  returned: success
  type: list
name:
  description:
  - Name of the resource. Provided by the client when the resource is created. The
    name must be 1-63 characters long, and comply with RFC1035. Specifically, the
    name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str
sessionAffinity:
  description:
  - 'Session affinity option. Must be one of these values: - NONE: Connections from
    the same client IP may go to any instance in the pool.'
  - "- CLIENT_IP: Connections from the same client IP will go to the same instance
    in the pool while that instance remains healthy."
  - "- CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol
    will go to the same instance in the pool while that instance remains healthy."
  returned: success
  type: str
region:
  description:
  - The region where the target pool resides.
  returned: success
  type: str

