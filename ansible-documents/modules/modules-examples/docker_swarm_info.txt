EXAMPLES:

- name: Get info on Docker Swarm
  docker_swarm_info:
  ignore_errors: yes
  register: result

- name: Inform about basic flags
  debug:
    msg: |
      Was able to talk to docker daemon: {{ result.can_talk_to_docker }}
      Docker in Swarm mode: {{ result.docker_swarm_active }}
      This is a Manager node: {{ result.docker_swarm_manager }}

- block:

- name: Get info on Docker Swarm and list of registered nodes
  docker_swarm_info:
    nodes: yes
  register: result

- name: Get info on Docker Swarm and extended list of registered nodes
  docker_swarm_info:
    nodes: yes
    verbose_output: yes
  register: result

- name: Get info on Docker Swarm and filtered list of registered nodes
  docker_swarm_info:
    nodes: yes
    nodes_filter:
      name: mynode
  register: result

- debug:
    var: result.swarm_facts

- name: Get the swarm unlock key
  docker_swarm_info:
    unlock_key: yes
  register: result

- debug:
    var: result.swarm_unlock_key


RETURN VALUES:

can_talk_to_docker:
    description:
      - Will be C(true) if the module can talk to the docker daemon.
    returned: both on success and on error
    type: bool
docker_swarm_active:
    description:
      - Will be C(true) if the module can talk to the docker daemon,
        and the docker daemon is in Swarm mode.
    returned: both on success and on error
    type: bool
docker_swarm_manager:
    description:
      - Will be C(true) if the module can talk to the docker daemon,
        the docker daemon is in Swarm mode, and the current node is
        a manager node.
      - Only if this one is C(true), the module will not fail.
    returned: both on success and on error
    type: bool
swarm_facts:
    description:
      - Facts representing the basic state of the docker Swarm cluster.
      - Contains tokens to connect to the Swarm
    returned: always
    type: dict
swarm_unlock_key:
    description:
      - Contains the key needed to unlock the swarm.
    returned: When I(unlock_key) is C(true).
    type: str
nodes:
    description:
      - List of dict objects containing the basic information about each volume.
        Keys matches the C(docker node ls) output unless I(verbose_output=yes).
        See description for I(verbose_output).
    returned: When I(nodes) is C(yes)
    type: list
services:
    description:
      - List of dict objects containing the basic information about each volume.
        Keys matches the C(docker service ls) output unless I(verbose_output=yes).
        See description for I(verbose_output).
    returned: When I(services) is C(yes)
    type: list
tasks:
    description:
      - List of dict objects containing the basic information about each volume.
        Keys matches the C(docker service ps) output unless I(verbose_output=yes).
        See description for I(verbose_output).
    returned: When I(tasks) is C(yes)
    type: list


