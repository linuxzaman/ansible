EXAMPLES:

- name: " a dataset facts"
  gcp_bigquery_dataset_facts:
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: facts


RETURN VALUES:

items:
  description: List of items
  returned: always
  type: complex
  contains:
    name:
      description:
      - Dataset name.
      returned: success
      type: str
    access:
      description:
      - Access controls on the bucket.
      returned: success
      type: complex
      contains:
        domain:
          description:
          - A domain to grant access to. Any users signed in with the domain specified
            will be granted the specified access .
          returned: success
          type: str
        groupByEmail:
          description:
          - An email address of a Google Group to grant access to.
          returned: success
          type: str
        role:
          description:
          - Describes the rights granted to the user specified by the other member
            of the access object .
          returned: success
          type: str
        specialGroup:
          description:
          - A special group to grant access to.
          returned: success
          type: str
        userByEmail:
          description:
          - 'An email address of a user to grant access to. For example: fred@example.com
            .'
          returned: success
          type: str
        view:
          description:
          - A view from a different dataset to grant access to. Queries executed against
            that view will have read access to tables in this dataset. The role field
            is not required when this field is set. If that view is updated by any
            user, access to the view needs to be granted again via an update operation.
          returned: success
          type: complex
          contains:
            datasetId:
              description:
              - The ID of the dataset containing this table.
              returned: success
              type: str
            projectId:
              description:
              - The ID of the project containing this table.
              returned: success
              type: str
            tableId:
              description:
              - The ID of the table. The ID must contain only letters (a-z, A-Z),
                numbers (0-9), or underscores. The maximum length is 1,024 characters.
              returned: success
              type: str
    creationTime:
      description:
      - The time when this dataset was created, in milliseconds since the epoch.
      returned: success
      type: int
    datasetReference:
      description:
      - A reference that identifies the dataset.
      returned: success
      type: complex
      contains:
        datasetId:
          description:
          - A unique ID for this dataset, without the project name. The ID must contain
            only letters (a-z, A-Z), numbers (0-9), or underscores. The maximum length
            is 1,024 characters.
          returned: success
          type: str
        projectId:
          description:
          - The ID of the project containing this dataset.
          returned: success
          type: str
    defaultTableExpirationMs:
      description:
      - The default lifetime of all tables in the dataset, in milliseconds .
      returned: success
      type: int
    description:
      description:
      - A user-friendly description of the dataset.
      returned: success
      type: str
    friendlyName:
      description:
      - A descriptive name for the dataset.
      returned: success
      type: str
    id:
      description:
      - The fully-qualified unique name of the dataset in the format projectId:datasetId.
        The dataset name without the project name is given in the datasetId field
        .
      returned: success
      type: str
    labels:
      description:
      - The labels associated with this dataset. You can use these to organize and
        group your datasets .
      returned: success
      type: dict
    lastModifiedTime:
      description:
      - The date when this dataset or any of its tables was last modified, in milliseconds
        since the epoch.
      returned: success
      type: int
    location:
      description:
      - The geographic location where the dataset should reside. Possible values include
        EU and US. The default value is US.
      returned: success
      type: str

