EXAMPLES:

# Instantiate a new service
- one_service:
    template_id: 90
  register: result

# Print service properties
- debug:
    msg: result

# Instantiate a new service with specified service_name, service group and mode
- one_service:
    template_name: 'app1_template'
    service_name: 'app1'
    group_id: 1
    mode: '660'

# Instantiate a new service with template_id and pass custom_attrs dict
- one_service:
    template_id: 90
    custom_attrs:
      public_network_id: 21
      private_network_id: 26

# Instiate a new service 'foo' if the service doesn't already exist, otherwise do nothing
- one_service:
    template_id: 53
    service_name: 'foo'
    unique: yes

# Delete a service by ID
- one_service:
    service_id: 153
    state: absent

# Get service info
- one_service:
    service_id: 153
  register: service_info

# Change service owner, group and mode
- one_service:
    service_name: 'app2'
    owner_id: 34
    group_id: 113
    mode: '600'

# Instantiate service and wait for it to become RUNNING
-  one_service:
    template_id: 43
    service_name: 'foo1'

# Wait service to become RUNNING
- one_service:
    service_id: 112
    wait: yes

# Change role cardinality
- one_service:
    service_id: 153
    role: bar
    cardinality: 5

# Change role cardinality and wait for it to be applied
- one_service:
    service_id: 112
    role: foo
    cardinality: 7
    wait: yes


RETURN VALUES:

service_id:
    description: service id
    type: int
    returned: success
    sample: 153
service_name:
    description: service name
    type: str
    returned: success
    sample: app1
group_id:
    description: service's group id
    type: int
    returned: success
    sample: 1
group_name:
    description: service's group name
    type: str
    returned: success
    sample: one-users
owner_id:
    description: service's owner id
    type: int
    returned: success
    sample: 143
owner_name:
    description: service's owner name
    type: str
    returned: success
    sample: ansible-test
state:
    description: state of service instance
    type: str
    returned: success
    sample: RUNNING
mode:
    description: service's mode
    type: int
    returned: success
    sample: 660
roles:
    description: list of dictionaries of roles, each role is described by name, cardinality, state and nodes ids
    type: list
    returned: success
    sample: '[{"cardinality": 1,"name": "foo","state": "RUNNING","ids": [ 123, 456 ]},
              {"cardinality": 2,"name": "bar","state": "RUNNING", "ids": [ 452, 567, 746 ]}]'

