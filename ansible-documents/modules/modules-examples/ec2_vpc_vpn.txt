EXAMPLES:

# Note: None of these examples set aws_access_key, aws_secret_key, or region.
# It is assumed that their matching environment variables are set.

- name: create a VPN connection
  ec2_vpc_vpn:
    state: present
    vpn_gateway_id: vgw-XXXXXXXX
    customer_gateway_id: cgw-XXXXXXXX

- name: modify VPN connection tags
  ec2_vpc_vpn:
    state: present
    vpn_connection_id: vpn-XXXXXXXX
    tags:
      Name: ansible-tag-1
      Other: ansible-tag-2

- name: delete a connection
  ec2_vpc_vpn:
    vpn_connection_id: vpn-XXXXXXXX
    state: absent

- name: modify VPN tags (identifying VPN by filters)
  ec2_vpc_vpn:
    state: present
    filters:
      cidr: 194.168.1.0/24
      tag-keys:
        - Ansible
        - Other
    tags:
      New: Tag
    purge_tags: true
    static_only: true

- name: set up VPN with tunnel options utilizing 'TunnelInsideCidr' only
  ec2_vpc_vpn:
    state: present
    filters:
      vpn: vpn-XXXXXXXX
    static_only: true
    tunnel_options:
      -
        TunnelInsideCidr: '169.254.100.1/30'
      -
        TunnelInsideCidr: '169.254.100.5/30'

- name: add routes and remove any preexisting ones
  ec2_vpc_vpn:
    state: present
    filters:
      vpn: vpn-XXXXXXXX
    routes:
      - 195.168.2.0/24
      - 196.168.2.0/24
    purge_routes: true

- name: remove all routes
  ec2_vpc_vpn:
    state: present
    vpn_connection_id: vpn-XXXXXXXX
    routes: []
    purge_routes: true

- name: delete a VPN identified by filters
  ec2_vpc_vpn:
    state: absent
    filters:
      tags:
        Ansible: Tag


RETURN VALUES:

changed:
  description: If the VPN connection has changed.
  type: bool
  returned: always
  sample:
    changed: true
customer_gateway_configuration:
  description: The configuration of the VPN connection.
  returned: I(state=present)
  type: str
customer_gateway_id:
  description: The customer gateway connected via the connection.
  type: str
  returned: I(state=present)
  sample:
    customer_gateway_id: cgw-1220c87b
vpn_gateway_id:
  description: The virtual private gateway connected via the connection.
  type: str
  returned: I(state=present)
  sample:
    vpn_gateway_id: vgw-cb0ae2a2
options:
  description: The VPN connection options (currently only containing static_routes_only).
  type: complex
  returned: I(state=present)
  contains:
    static_routes_only:
      description: If the VPN connection only allows static routes.
      returned: I(state=present)
      type: str
      sample:
        static_routes_only: true
routes:
  description: The routes of the VPN connection.
  type: list
  returned: I(state=present)
  sample:
    routes: [{
              'destination_cidr_block': '192.168.1.0/24',
              'state': 'available'
            }]
state:
  description: The status of the VPN connection.
  type: str
  returned: I(state=present)
  sample:
    state: available
tags:
  description: The tags associated with the connection.
  type: dict
  returned: I(state=present)
  sample:
    tags:
      name: ansible-test
      other: tag
type:
  description: The type of VPN connection (currently only ipsec.1 is available).
  type: str
  returned: I(state=present)
  sample:
    type: "ipsec.1"
vgw_telemetry:
  type: list
  returned: I(state=present)
  description: The telemetry for the VPN tunnel.
  sample:
    vgw_telemetry: [{
                     'outside_ip_address': 'string',
                     'status': 'up',
                     'last_status_change': datetime(2015, 1, 1),
                     'status_message': 'string',
                     'accepted_route_count': 123
                    }]
vpn_connection_id:
  description: The identifier for the VPN connection.
  type: str
  returned: I(state=present)
  sample:
    vpn_connection_id: vpn-781e0e19

