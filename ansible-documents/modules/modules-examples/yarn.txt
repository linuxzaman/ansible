EXAMPLES:

- name: Install "imagemin" node.js package.
  yarn:
    name: imagemin
    path: /app/location

- name: Install "imagemin" node.js package on version 5.3.1
  yarn:
    name: imagemin
    version: '5.3.1'
    path: /app/location

- name: Install "imagemin" node.js package globally.
  yarn:
    name: imagemin
    global: yes

- name: Remove the globally-installed package "imagemin".
  yarn:
    name: imagemin
    global: yes
    state: absent

- name: Install "imagemin" node.js package from custom registry.
  yarn:
    name: imagemin
    registry: 'http://registry.mysite.com'

- name: Install packages based on package.json.
  yarn:
    path: /app/location

- name: Update all packages in package.json to their latest version.
  yarn:
    path: /app/location
    state: latest


RETURN VALUES:

changed:
    description: Whether Yarn changed any package data
    returned: always
    type: bool
    sample: true
msg:
    description: Provides an error message if Yarn syntax was incorrect
    returned: failure
    type: str
    sample: "Package must be explicitly named when uninstalling."
invocation:
    description: Parameters and values used during execution
    returned: success
    type: dict
    sample: {
            "module_args": {
                "executable": null,
                "globally": false,
                "ignore_scripts": false,
                "name": null,
                "path": "/some/path/folder",
                "production": false,
                "registry": null,
                "state": "present",
                "version": null
            }
        }
out:
    description: Output generated from Yarn with emojis removed.
    returned: always
    type: str
    sample: "yarn add v0.16.1[1/4] Resolving packages...[2/4] Fetching packages...[3/4] Linking dependencies...[4/4]
    Building fresh packages...success Saved lockfile.success Saved 1 new dependency..left-pad@1.1.3 Done in 0.59s."

