> OS_SUBNET    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/openstack/os_subnet.py)

        Add or Remove a subnet to an OpenStack network

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- allocation_pool_end
        From the subnet pool the last IP that should be assigned to the virtual machines.
        [Default: (null)]

- allocation_pool_start
        From the subnet pool the starting address from which the IP should be allocated.
        [Default: (null)]

- api_timeout
        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests
        library.
        [Default: (null)]
        type: int

- auth
        Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password' plugin, this
        would contain `auth_url', `username', `password', `project_name' and any information about domains (for example,
        `os_user_domain_name' or `os_project_domain_name') if the cloud supports them. For other plugins, this param will need to contain
        whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_*
        environment variables are present.
        [Default: (null)]
        type: dict

- auth_type
        Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be
        indicated here and the contents of the `auth' parameter should be updated accordingly.
        [Default: (null)]
        type: str

- availability_zone
        Ignored. Present for backwards compatibility
        [Default: (null)]

- ca_cert
        A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
        (Aliases: cacert)[Default: (null)]
        type: str

- cidr
        The CIDR representation of the subnet that should be assigned to the subnet. Required when `state' is 'present' and a subnetpool
        is not specified.
        [Default: (null)]

- client_cert
        A path to a client certificate to use as part of the SSL transaction.
        (Aliases: cert)[Default: (null)]
        type: str

- client_key
        A path to a client key to use as part of the SSL transaction.
        (Aliases: key)[Default: (null)]
        type: str

- cloud
        Named cloud or cloud config to operate against. If `cloud' is a string, it references a named cloud config as defined in an
        OpenStack clouds.yaml file. Provides default values for `auth' and `auth_type'. This parameter is not needed if `auth' is
        provided or if OpenStack OS_* environment variables are present. If `cloud' is a dict, it contains a complete cloud configuration
        like would be in a section of clouds.yaml.
        [Default: (null)]
        type: raw

- dns_nameservers
        List of DNS nameservers for this subnet.
        [Default: (null)]

- enable_dhcp
        Whether DHCP should be enabled for this subnet.
        [Default: yes]
        type: bool

- extra_specs
        Dictionary with extra key/value pairs passed to the API
        [Default: {}]
        version_added: 2.7

- gateway_ip
        The ip that would be assigned to the gateway for this subnet
        [Default: (null)]

- host_routes
        A list of host route dictionaries for the subnet.
        [Default: (null)]

- interface
        Endpoint URL type to fetch from the service catalog.
        (Aliases: endpoint_type)(Choices: admin, internal, public)[Default: public]
        type: str
        version_added: 2.3

- ip_version
        The IP version of the subnet 4 or 6
        [Default: 4]

- ipv6_address_mode
        IPv6 address mode
        (Choices: dhcpv6-stateful, dhcpv6-stateless, slaac)[Default: (null)]

- ipv6_ra_mode
        IPv6 router advertisement mode
        (Choices: dhcpv6-stateful, dhcpv6-stateless, slaac)[Default: (null)]

= name
        The name of the subnet that should be created. Although Neutron allows for non-unique subnet names, this module enforces subnet
        name uniqueness.


- network_name
        Name of the network to which the subnet should be attached
        Required when `state' is 'present'
        [Default: (null)]

- no_gateway_ip
        The gateway IP would not be assigned for this subnet
        [Default: no]
        type: bool
        version_added: 2.2

- project
        Project name or ID containing the subnet (name admin-only)
        [Default: (null)]
        version_added: 2.1

- region_name
        Name of the region.
        [Default: (null)]
        type: str

- state
        Indicate desired state of the resource
        (Choices: present, absent)[Default: present]

- timeout
        How long should ansible wait for the requested resource.
        [Default: 180]
        type: int

- use_default_subnetpool
        Use the default subnetpool for `ip_version' to obtain a CIDR.
        [Default: no]
        type: bool

- validate_certs
        Whether or not SSL API requests should be verified.
        Before Ansible 2.3 this defaulted to `yes'.
        (Aliases: verify)[Default: False]
        type: bool

- wait
        Should ansible wait until the requested resource is complete.
        [Default: True]
        type: bool


NOTES:
      * The standard OpenStack environment variables, such as `OS_USERNAME' may be used instead of providing explicit values.
      * Auth information is driven by openstacksdk, which means that values can come from a yaml config file in
        /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment
        variables, then finally by explicit parameters in plays. More information can be found at
        https://docs.openstack.org/openstacksdk/


REQUIREMENTS:  openstacksdk, python >= 2.7

AUTHOR: Monty Taylor (@emonty)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create a new (or update an existing) subnet on the specified network
- os_subnet:
    state: present
    network_name: network1
    name: net1subnet
    cidr: 192.168.0.0/24
    dns_nameservers:
       - 8.8.8.7
       - 8.8.8.8
    host_routes:
       - destination: 0.0.0.0/0
         nexthop: 12.34.56.78
       - destination: 192.168.0.0/24
         nexthop: 192.168.0.1

# Delete a subnet
- os_subnet:
    state: absent
    name: net1subnet

# Create an ipv6 stateless subnet
- os_subnet:
    state: present
    name: intv6
    network_name: internal
    ip_version: 6
    cidr: 2db8:1::/64
    dns_nameservers:
        - 2001:4860:4860::8888
        - 2001:4860:4860::8844
    ipv6_ra_mode: dhcpv6-stateless
    ipv6_address_mode: dhcpv6-stateless


