> EXOS_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/exos/exos_config.py)

        Extreme EXOS configurations use a simple flat text file syntax. This module provides an implementation for working with EXOS
        configuration lines in a deterministic way.

  * This module is maintained by The Ansible Community
  * note: This module has a corresponding action plugin.

OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before' this
        allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made. If the `backup_options' value is not given, the backup file is written to the `backup' folder in the playbook
        root directory. If the directory does not exist, it is created.
        [Default: no]
        type: bool

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `yes', if `backup' is set to `no' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exist it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
        
        type: dict
        version_added: 2.8

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the
        opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched
        against the system.
        [Default: (null)]

- defaults
        This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the
        module will get the current config by issuing the command `show running-config all'.
        [Default: no]
        type: bool

- diff_against
        When using the `ansible-playbook --diff' command line argument the module can generate diffs against different sources.
        When this option is configure as `startup', the module will return the diff of the running-config against the startup-config.
        When this option is configured as `intended', the module will return the diff of the running-config against the configuration
        provided in the `intended_config' argument.
        When this option is configured as `running', the module will return the before and after diff of the running-config with respect
        to any changes made to the device configuration.
        (Choices: running, startup, intended)[Default: running]

- diff_ignore_lines
        Use this argument to specify one or more lines that should be ignored during the diff.  This is used for lines in the
        configuration that are automatically updated by the system.  This argument takes a list of regular expressions or exact line
        matches.
        [Default: (null)]

- intended_config
        The `intended_config' provides the master configuration that the node should conform to and is used to check the final running-
        config against.   This argument will not modify any settings on the remote device and is strictly used to check the compliance of
        the current device's configuration against.  When specifying this argument, the task should also modify the `diff_against' value
        and set it to `intended'.
        [Default: (null)]

- lines
        The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in
        the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the
        device config parser.
        (Aliases: commands)[Default: (null)]

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is
        set to `line', commands are matched line by line.  If match is set to `strict', command lines are matched with respect to
        position.  If match is set to `exact', command lines must be an equal match.  Finally, if match is set to `none', the module will
        not attempt to compare the source configuration with the running configuration on the remote device.
        (Choices: line, strict, exact, none)[Default: line]

- replace
        Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to `line' then the
        modified lines are pushed to the device in configuration mode.  If the replace argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct.
        (Choices: line, block)[Default: line]

- running_config
        The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing
        against the contents of source.  There are times when it is not desirable to have the task get the current running-config for
        every task in a playbook.  The `running_config' argument allows the implementer to pass in the configuration to use as the base
        config for comparison.
        (Aliases: config)[Default: (null)]

- save_when
        When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.  Using
        this argument will change that behavior.  If the argument is set to `always', then the running-config will always be copied to
        the startup-config and the `modified' flag will always be set to True.  If the argument is set to `modified', then the running-
        config will only be copied to the startup-config if it has changed since the last save to startup-config.  If the argument is set
        to `never', the running-config will never be copied to the startup-config.  If the argument is set to `changed', then the
        running-config will only be copied to the startup-config if the task has made a change.
        (Choices: always, never, modified, changed)[Default: never]

- src
        Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source
        file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This
        argument is mutually exclusive with `lines'.
        [Default: (null)]


NOTES:
      * Tested against EXOS version 22.6.0b19


AUTHOR: Lance Richardson (@hlrichardson)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: configure SNMP system name
  exos_config:
    lines: configure snmp sysName "{{ inventory_hostname }}"

- name: configure interface settings
  exos_config:
    lines:
      - configure ports 2 description-string "Master Uplink"
    backup: yes

- name: check the running-config against master config
  exos_config:
    diff_against: intended
    intended_config: "{{ lookup('file', 'master.cfg') }}"

- name: check the startup-config against the running-config
  exos_config:
    diff_against: startup
    diff_ignore_lines:
      - ntp clock .*

- name: save running to startup when modified
  exos_config:
    save_when: modified

- name: configurable backup path
  exos_config:
    lines:
      - configure ports 2 description-string "Master Uplink"
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user


RETURN VALUES:

updates:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['switch-attributes hostname foo', 'router ospf', 'area 0']
commands:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['create vlan "foo"', 'configure snmp sysName "x620-red"']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/x870_config.2018-08-08@15:00:21


