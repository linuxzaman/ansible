> NXOS_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nxos/nxos_config.py)

        Cisco NXOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides
        an implementation for working with NXOS configuration sections in a deterministic way.  This module works with either CLI or
        NXAPI transports.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before' this
        allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made. If the `backup_options' value is not given, the backup file is written to the `backup' folder in the playbook
        root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.
        [Default: no]
        type: bool
        version_added: 2.2

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `True', if `backup' is set to `false' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exit it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
        
        type: dict
        version_added: 2.8

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the
        opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched
        against the system.
        [Default: (null)]

- defaults
        The `defaults' argument will influence how the running-config is collected from the device.  When the value is set to true, the
        command used to collect the running-config is append with the all keyword.  When the value is set to false, the command is issued
        without the all keyword
        [Default: no]
        type: bool
        version_added: 2.2

- diff_against
        When using the `ansible-playbook --diff' command line argument the module can generate diffs against different sources.
        When this option is configure as `startup', the module will return the diff of the running-config against the startup-config.
        When this option is configured as `intended', the module will return the diff of the running-config against the configuration
        provided in the `intended_config' argument.
        When this option is configured as `running', the module will return the before and after diff of the running-config with respect
        to any changes made to the device configuration.
        (Choices: startup, intended, running)[Default: startup]
        version_added: 2.4

- diff_ignore_lines
        Use this argument to specify one or more lines that should be ignored during the diff.  This is used for lines in the
        configuration that are automatically updated by the system.  This argument takes a list of regular expressions or exact line
        matches.
        [Default: (null)]
        version_added: 2.4

- intended_config
        The `intended_config' provides the master configuration that the node should conform to and is used to check the final running-
        config against.   This argument will not modify any settings on the remote device and is strictly used to check the compliance of
        the current device's configuration against.  When specifying this argument, the task should also modify the `diff_against' value
        and set it to `intended'.
        [Default: (null)]
        version_added: 2.4

- lines
        The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in
        the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the
        device config parser.
        (Aliases: commands)[Default: (null)]

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is
        set to `line', commands are matched line by line.  If match is set to `strict', command lines are matched with respect to
        position.  If match is set to `exact', command lines must be an equal match.  Finally, if match is set to `none', the module will
        not attempt to compare the source configuration with the running configuration on the remote device.
        (Choices: line, strict, exact, none)[Default: line]

- parents
        The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the
        parents argument is omitted, the commands are checked against the set of top level or global commands.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using NX-API.
        For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
            version_added: 2.5.3
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
            version_added: 2.5.3
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `nxapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `nxapi'.  The port value will default to
              the appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.  This
              argument is only used for the `cli' transport. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE' will
              be used instead.
            type: str
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error. NX-API can be slow to return
              on long-running commands (sh mac, sh bgp, etc).
            type: int
            version_added: '2.3'
          transport:
            choices:
            - cli
            - nxapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.  The
              transport argument supports connectivity to the device over cli (ssh) or nxapi.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: false
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=nxapi',
              otherwise this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the nxapi
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not nxapi, this value is ignored.
            type: bool
        
        type: dict

- replace
        Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to `line' then the
        modified lines are pushed to the device in configuration mode.  If the replace argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct. replace `config' is supported only on Nexus 9K
        device.
        (Choices: line, block, config)[Default: line]

- replace_src
        The `replace_src' argument provides path to the configuration file to load into the remote system. This argument is used to
        replace the entire config with a flat-file. This is used with argument `replace' with value `config'. This is mutually exclusive
        with the `lines' and `src' arguments. This argument is supported on Nexus 9K device. Use `nxos_file_copy' module to copy the flat
        file to remote device and then use the path with this argument.
        [Default: (null)]
        version_added: 2.5

- running_config
        The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing
        against the contents of source.  There are times when it is not desirable to have the task get the current running-config for
        every task in a playbook.  The `running_config' argument allows the implementer to pass in the configuration to use as the base
        config for comparison.
        (Aliases: config)[Default: (null)]
        version_added: 2.4

- save_when
        When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.  Using
        this argument will change that before.  If the argument is set to `always', then the running-config will always be copied to the
        startup-config and the `modified' flag will always be set to True.  If the argument is set to `modified', then the running-config
        will only be copied to the startup-config if it has changed since the last save to startup-config.  If the argument is set to
        `never', the running-config will never be copied to the startup-config.  If the argument is set to `changed', then the running-
        config will only be copied to the startup-config if the task has made a change. `changed' was added in Ansible 2.6.
        (Choices: always, never, modified, changed)[Default: never]
        version_added: 2.4

- src
        The `src' argument provides a path to the configuration file to load into the remote system.  The path can either be a full
        system path to the configuration file if the value starts with / or relative to the root of the implemented role or playbook.
        This argument is mutually exclusive with the `lines' and `parents' arguments.
        [Default: (null)]
        version_added: 2.2


NOTES:
      * Abbreviated commands are NOT idempotent, see L(Network FAQ,../network/user_guide/faq.html#why-do-the-config-modules-always-
        return-changed-true-with-abbreviated-commands).
      * For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

---
- name: configure top level configuration and save it
  nxos_config:
    lines: hostname {{ inventory_hostname }}
    save_when: modified

- name: diff the running-config against a provided config
  nxos_config:
    diff_against: intended
    intended_config: "{{ lookup('file', 'master.cfg') }}"

- nxos_config:
    lines:
      - 10 permit ip 192.0.2.1/32 any log
      - 20 permit ip 192.0.2.2/32 any log
      - 30 permit ip 192.0.2.3/32 any log
      - 40 permit ip 192.0.2.4/32 any log
      - 50 permit ip 192.0.2.5/32 any log
    parents: ip access-list test
    before: no ip access-list test
    match: exact

- nxos_config:
    lines:
      - 10 permit ip 192.0.2.1/32 any log
      - 20 permit ip 192.0.2.2/32 any log
      - 30 permit ip 192.0.2.3/32 any log
      - 40 permit ip 192.0.2.4/32 any log
    parents: ip access-list test
    before: no ip access-list test
    replace: block

- name: replace config with flat file
  nxos_config:
    replace_src: config.txt
    replace: config

- name: for idempotency, use full-form commands
  nxos_config:
    lines:
      # - shut
      - shutdown
    # parents: int eth1/1
    parents: interface Ethernet1/1

- name: configurable backup path
  nxos_config:
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user


RETURN VALUES:

commands:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['hostname foo', 'vlan 1', 'name default']
updates:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['hostname foo', 'vlan 1', 'name default']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/nxos_config.2016-07-16@22:28:34
filename:
  description: The name of the backup file
  returned: when backup is yes and filename is not specified in backup options
  type: str
  sample: nxos_config.2016-07-16@22:28:34
shortname:
  description: The full path to the backup file excluding the timestamp
  returned: when backup is yes and filename is not specified in backup options
  type: str
  sample: /playbooks/ansible/backup/nxos_config
date:
  description: The date extracted from the backup file name
  returned: when backup is yes
  type: str
  sample: "2016-07-16"
time:
  description: The time extracted from the backup file name
  returned: when backup is yes
  type: str
  sample: "22:28:34"

