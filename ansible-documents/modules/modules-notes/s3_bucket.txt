> S3_BUCKET    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/s3_bucket.py)

        Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus and FakeS3

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- ceph
        Enable API compatibility with Ceph. It takes into account the S3 API subset working with Ceph in order to provide the same module
        behaviour where possible.
        [Default: (null)]
        type: bool
        version_added: 2.2

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

- force
        When trying to delete a bucket, delete all keys (including versions and delete markers) in the bucket first (an s3 bucket must be
        empty for a successful deletion)
        [Default: no]
        type: bool

= name
        Name of the s3 bucket


- policy
        The JSON policy as a string.
        [Default: (null)]

- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- requester_pays
        With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data download from
        the bucket.
        [Default: False]
        type: bool

- s3_url
        S3 URL endpoint for usage with DigitalOcean, Ceph, Eucalyptus and fakes3 etc.
        Assumes AWS if not specified.
        For Walrus, use FQDN of the endpoint without scheme nor path.
        (Aliases: S3_URL)[Default: (null)]

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

- state
        Create or remove the s3 bucket
        (Choices: present, absent)[Default: present]

- tags
        tags dict to apply to bucket
        [Default: (null)]

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5

- versioning
        Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended)
        [Default: (null)]
        type: bool


NOTES:
      * If `requestPayment', `policy', `tagging' or `versioning' operations/API aren't implemented by the endpoint, module doesn't
        fail if related parameters `requester_pays', `policy', `tags' or `versioning' are `None'.
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, boto3, python >= 2.6

AUTHOR: Rob White (@wimnat)
        METADATA:
          status:
          - stableinterface
          supported_by: core
        

EXAMPLES:

# Note: These examples do not set authentication details, see the AWS Guide for details.

# Create a simple s3 bucket
- s3_bucket:
    name: mys3bucket

# Create a simple s3 bucket on Ceph Rados Gateway
- s3_bucket:
    name: mys3bucket
    s3_url: http://your-ceph-rados-gateway-server.xxx
    ceph: true

# Remove an s3 bucket and any keys it contains
- s3_bucket:
    name: mys3bucket
    state: absent
    force: yes

# Create a bucket, add a policy from a file, enable requester pays, enable versioning and tag
- s3_bucket:
    name: mys3bucket
    policy: "{{ lookup('file','policy.json') }}"
    requester_pays: yes
    versioning: yes
    tags:
      example: tag1
      another: tag2

# Create a simple DigitalOcean Spaces bucket using their provided regional endpoint
- s3_bucket:
    name: mydobucket
    s3_url: 'https://nyc3.digitaloceanspaces.com'


