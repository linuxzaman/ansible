> DOCKER_IMAGE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/docker/docker_image.py)

        Build, load or pull an image, making the image available for creating containers. Also supports tagging an image into a
        repository and archiving an image to a .tar file. Since Ansible 2.8, it is recommended to explicitly specify the image's source
        (`source=build', `source=load', `source=pull' or `source=local'). This will be required from Ansible 2.12 on.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_version
        The version of the Docker API running on the Docker Host.
        Defaults to the latest version of the API supported by Docker SDK for Python and the docker daemon.
        If the value is not specified in the task, the value of environment variable `DOCKER_API_VERSION' will be used instead. If the
        environment variable is not set, the default value will be used.
        (Aliases: docker_api_version)[Default: auto]
        type: str

- archive_path
        Use with state `present' to archive an image to a .tar file.
        [Default: (null)]
        type: path
        version_added: 2.1

- build
        Specifies options used for building images.
        [Default: (null)]
        suboptions:
          args:
            description:
            - Provide a dictionary of `key:value' build arguments that map to Dockerfile
              ARG directive.
            - Docker expects the value to be a string. For convenience any non-string values
              will be converted to strings.
            - Requires Docker API >= 1.21.
            type: dict
          cache_from:
            description:
            - List of image names to consider as cache source.
            type: list
          container_limits:
            description:
            - A dictionary of limits applied to each container created by the build process.
            suboptions:
              cpusetcpus:
                description:
                - CPUs in which to allow execution, e.g., "0-3", "0,1".
                type: str
              cpushares:
                description:
                - CPU shares (relative weight).
                type: int
              memory:
                description:
                - Set memory limit for build.
                type: int
              memswap:
                description:
                - Total memory (memory + swap), -1 to disable swap.
                type: int
            type: dict
          dockerfile:
            description:
            - Use with state `present' and source `build' to provide an alternate name for
              the Dockerfile to use when building an image.
            - This can also include a relative path (relative to `path').
            type: str
          http_timeout:
            description:
            - Timeout for HTTP requests during the image build operation. Provide a positive
              integer value for the number of seconds.
            type: int
          network:
            description:
            - The network to use for `RUN' build instructions.
            type: str
          nocache:
            default: false
            description:
            - Do not use cache when building an image.
            type: bool
          path:
            description:
            - Use with state 'present' to build an image. Will be the path to a directory
              containing the context and Dockerfile for building an image.
            required: true
            type: path
          pull:
            description:
            - When building an image downloads any updates to the FROM image in Dockerfile.
            - The default is currently `yes'. This will change to `no' in Ansible 2.12.
            type: bool
          rm:
            default: true
            description:
            - Remove intermediate containers after build.
            type: bool
          use_config_proxy:
            description:
            - If set to `yes` and a proxy configuration is specified in the docker client
              configuration (by default `$HOME/.docker/config.json'), the corresponding environment
              variables will be set in the container being built.
            - Needs Docker SDK for Python >= 3.7.0.
            type: bool
        
        type: dict
        version_added: 2.8

- buildargs
        Provide a dictionary of `key:value' build arguments that map to Dockerfile ARG directive.
        Docker expects the value to be a string. For convenience any non-string values will be converted to strings.
        Requires Docker API >= 1.21.
        Please use `build.args' instead. This option will be removed in Ansible 2.12.
        [Default: (null)]
        type: dict
        version_added: 2.2

- ca_cert
        Use a CA certificate when performing server verification by providing the path to a CA certificate file.
        If the value is not specified in the task and the environment variable `DOCKER_CERT_PATH' is set, the file `ca.pem' from the
        directory specified in the environment variable `DOCKER_CERT_PATH' will be used.
        (Aliases: tls_ca_cert, cacert_path)[Default: (null)]
        type: path

- client_cert
        Path to the client's TLS certificate file.
        If the value is not specified in the task and the environment variable `DOCKER_CERT_PATH' is set, the file `cert.pem' from the
        directory specified in the environment variable `DOCKER_CERT_PATH' will be used.
        (Aliases: tls_client_cert, cert_path)[Default: (null)]
        type: path

- client_key
        Path to the client's TLS key file.
        If the value is not specified in the task and the environment variable `DOCKER_CERT_PATH' is set, the file `key.pem' from the
        directory specified in the environment variable `DOCKER_CERT_PATH' will be used.
        (Aliases: tls_client_key, key_path)[Default: (null)]
        type: path

- container_limits
        A dictionary of limits applied to each container created by the build process.
        Please use `build.container_limits' instead. This option will be removed in Ansible 2.12.
        [Default: (null)]
        suboptions:
          cpusetcpus:
            description:
            - CPUs in which to allow execution, e.g., "0-3", "0,1".
            type: str
          cpushares:
            description:
            - CPU shares (relative weight).
            type: int
          memory:
            description:
            - Set memory limit for build.
            type: int
          memswap:
            description:
            - Total memory (memory + swap), -1 to disable swap.
            type: int
        
        type: dict
        version_added: 2.1

- debug
        Debug mode
        [Default: False]
        type: bool

- docker_host
        The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string.
        For example, `tcp://192.0.2.23:2376'. If TLS is used to encrypt the connection, the module will automatically replace `tcp' in
        the connection URL with `https'.
        If the value is not specified in the task, the value of environment variable `DOCKER_HOST' will be used instead. If the
        environment variable is not set, the default value will be used.
        (Aliases: docker_url)[Default: unix://var/run/docker.sock]
        type: str

- dockerfile
        Use with state `present' and source `build' to provide an alternate name for the Dockerfile to use when building an image.
        This can also include a relative path (relative to `path').
        Please use `build.dockerfile' instead. This option will be removed in Ansible 2.12.
        [Default: (null)]
        type: str
        version_added: 2.0

- force
        Use with state `absent' to un-tag and remove all images matching the specified name. Use with state `present' to build, load or
        pull an image when the image already exists. Also use with state `present' to force tagging an image.
        Please stop using this option, and use the more specialized force options `force_source', `force_absent' and `force_tag' instead.
        This option will be removed in Ansible 2.12.
        [Default: (null)]
        type: bool
        version_added: 2.1

- force_absent
        Use with state `absent' to un-tag and remove all images matching the specified name.
        [Default: False]
        type: bool
        version_added: 2.8

- force_source
        Use with state `present' to build, load or pull an image (depending on the value of the `source' option) when the image already
        exists.
        [Default: False]
        type: bool
        version_added: 2.8

- force_tag
        Use with state `present' to force tagging an image.
        [Default: False]
        type: bool
        version_added: 2.8

- http_timeout
        Timeout for HTTP requests during the image build operation. Provide a positive integer value for the number of seconds.
        Please use `build.http_timeout' instead. This option will be removed in Ansible 2.12.
        [Default: (null)]
        type: int
        version_added: 2.1

- load_path
        Use with state `present' to load an image from a .tar file.
        Set `source' to `load' if you want to load the image. The option will be set automatically before Ansible 2.12 if this option is
        used (except if `path' is specified as well, in which case building will take precedence). From Ansible 2.12 on, you have to set
        `source' to `load'.
        [Default: (null)]
        type: path
        version_added: 2.2

= name
        Image name. Name format will be one of: name, repository/name, registry_server:port/name. When pushing or pulling an image the
        name can optionally include the tag by appending ':tag_name'.
        Note that image IDs (hashes) are not supported.

        type: str

- nocache
        Do not use cache when building an image.
        Please use `build.nocache' instead. This option will be removed in Ansible 2.12.
        [Default: False]
        type: bool

- path
        Use with state 'present' to build an image. Will be the path to a directory containing the context and Dockerfile for building an
        image.
        Set `source' to `build' if you want to build the image. The option will be set automatically before Ansible 2.12 if this option
        is used. From Ansible 2.12 on, you have to set `source' to `build'.
        Please use `build.path' instead. This option will be removed in Ansible 2.12.
        (Aliases: build_path)[Default: (null)]
        type: path

- pull
        When building an image downloads any updates to the FROM image in Dockerfile.
        Please use `build.pull' instead. This option will be removed in Ansible 2.12.
        The default is currently `yes'. This will change to `no' in Ansible 2.12.
        [Default: (null)]
        type: bool
        version_added: 2.1

- push
        Push the image to the registry. Specify the registry as part of the `name' or `repository' parameter.
        [Default: False]
        type: bool
        version_added: 2.2

- repository
        Full path to a repository. Use with state `present' to tag the image into the repository. Expects format `repository:tag'. If no
        tag is provided, will use the value of the `tag' parameter or `latest'.
        [Default: (null)]
        type: str
        version_added: 2.1

- rm
        Remove intermediate containers after build.
        Please use `build.rm' instead. This option will be removed in Ansible 2.12.
        [Default: True]
        type: bool
        version_added: 2.1

- source
        Determines where the module will try to retrieve the image from.
        Use `build' to build the image from a `Dockerfile'. `path' must be specified when this value is used.
        Use `load' to load the image from a `.tar' file. `load_path' must be specified when this value is used.
        Use `pull' to pull the image from a registry.
        Use `local' to make sure that the image is already available on the local docker daemon, i.e. do not try to build, pull or load
        the image.
        Before Ansible 2.12, the value of this option will be auto-detected to be backwards compatible, but a warning will be issued if
        it is not explicitly specified. From Ansible 2.12 on, auto-detection will be disabled and this option will be made mandatory.
        (Choices: build, load, pull, local)[Default: (null)]
        type: str
        version_added: 2.8

- ssl_version
        Provide a valid SSL version number. Default value determined by ssl.py module.
        If the value is not specified in the task, the value of environment variable `DOCKER_SSL_VERSION' will be used instead.
        [Default: (null)]
        type: str

- state
        Make assertions about the state of an image.
        When `absent' an image will be removed. Use the force option to un-tag and remove all images matching the provided name.
        When `present' check if an image exists using the provided name and tag. If the image is not found or the force option is used,
        the image will either be pulled, built or loaded, depending on the `source' option.
        By default the image will be pulled from Docker Hub, or the registry specified in the image's name. Note that this will change in
        Ansible 2.12, so to make sure that you are pulling, set `source' to `pull'. To build the image, provide a `path' value set to a
        directory containing a context and Dockerfile, and set `source' to `build'. To load an image, specify `load_path' to provide a
        path to an archive file. To tag an image to a repository, provide a `repository' path. If the name contains a repository path, it
        will be pushed.
        NOTE: `state=build' is DEPRECATED and will be removed in release 2.11. Specifying `build' will behave the same as `present'.
        (Choices: absent, present, build)[Default: present]
        type: str

- tag
        Used to select an image when pulling. Will be added to the image when pushing, tagging or building. Defaults to `latest'.
        If `name' parameter format is `name:tag', then tag value from `name' will take precedence.
        [Default: latest]
        type: str

- timeout
        The maximum amount of time in seconds to wait on a response from the API.
        If the value is not specified in the task, the value of environment variable `DOCKER_TIMEOUT' will be used instead. If the
        environment variable is not set, the default value will be used.
        [Default: 60]
        type: int

- tls
        Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server. Note that if
        `tls_verify' is set to `yes' as well, it will take precedence.
        If the value is not specified in the task, the value of environment variable `DOCKER_TLS' will be used instead. If the
        environment variable is not set, the default value will be used.
        [Default: False]
        type: bool

- tls_hostname
        When verifying the authenticity of the Docker Host server, provide the expected name of the server.
        If the value is not specified in the task, the value of environment variable `DOCKER_TLS_HOSTNAME' will be used instead. If the
        environment variable is not set, the default value will be used.
        [Default: localhost]
        type: str

- use_tls
        DEPRECATED. Whether to use tls to connect to the docker daemon. Set to `encrypt' to use TLS. And set to `verify' to use TLS and
        verify that the server's certificate is valid for the server.
        NOTE: If you specify this option, it will set the value of the `tls' or `tls_verify' parameters if not set to `no'.
        Will be removed in Ansible 2.11.
        (Choices: no, encrypt, verify)[Default: (null)]
        type: str
        version_added: 2.0

- validate_certs
        Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.
        If the value is not specified in the task, the value of environment variable `DOCKER_TLS_VERIFY' will be used instead. If the
        environment variable is not set, the default value will be used.
        (Aliases: tls_verify)[Default: False]
        type: bool


NOTES:
      * Connect to the Docker daemon by providing parameters with each task or by defining environment variables. You can define
        `DOCKER_HOST', `DOCKER_TLS_HOSTNAME', `DOCKER_API_VERSION', `DOCKER_CERT_PATH', `DOCKER_SSL_VERSION', `DOCKER_TLS',
        `DOCKER_TLS_VERIFY' and `DOCKER_TIMEOUT'. If you are using docker machine, run the script shipped with the product that
        sets up the environment. It will set these variables for you. See https://docker-py.readthedocs.io/en/stable/machine/ for
        more details.
      * When connecting to Docker daemon with TLS, you might need to install additional Python packages. For the Docker SDK for
        Python, version 2.4 or newer, this can be done by installing `docker[tls]' with [pip].
      * Note that the Docker SDK for Python only allows to specify the path to the Docker configuration for very few functions. In
        general, it will use `$HOME/.docker/config.json' if the `DOCKER_CONFIG' environment variable is not specified, and use
        `$DOCKER_CONFIG/config.json' otherwise.


REQUIREMENTS:  Docker API >= 1.20, Docker SDK for Python: Please note that the L(docker-py,https://pypi.org/project/docker-py/) Python
        module has been superseded by L(docker,https://pypi.org/project/docker/) (see L(here,https://github.com/docker
        /docker-py/issues/1310) for details). For Python 2.6, `docker-py' must be used. Otherwise, it is recommended to
        install the `docker' Python module. Note that both modules should `not' be installed at the same time. Also note
        that when both modules are installed and one of them is uninstalled, the other might no longer function and a
        reinstall of it is required., L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 1.8.0 (use
        L(docker-py,https://pypi.org/project/docker-py/) for Python 2.6)

AUTHOR: Pavel Antonov (@softzilla), Chris Houseknecht (@chouseknecht)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: pull an image
  docker_image:
    name: pacur/centos-7
    source: pull

- name: Tag and push to docker hub
  docker_image:
    name: pacur/centos-7:56
    repository: dcoppenhagan/myimage:7.56
    push: yes
    source: local

- name: Tag and push to local registry
  docker_image:
    # Image will be centos:7
    name: centos
    # Will be pushed to localhost:5000/centos:7
    repository: localhost:5000/centos
    tag: 7
    push: yes
    source: local

- name: Add tag latest to image
  docker_image:
    name: myimage:7.1.2
    repository: myimage:latest
    source: local

- name: Remove image
  docker_image:
    state: absent
    name: registry.ansible.com/chouseknecht/sinatra
    tag: v1

- name: Build an image and push it to a private repo
  docker_image:
    build:
      path: ./sinatra
    name: registry.ansible.com/chouseknecht/sinatra
    tag: v1
    push: yes
    source: build

- name: Archive image
  docker_image:
    name: registry.ansible.com/chouseknecht/sinatra
    tag: v1
    archive_path: my_sinatra.tar
    source: local

- name: Load image from archive and push to a private registry
  docker_image:
    name: localhost:5000/myimages/sinatra
    tag: v1
    push: yes
    load_path: my_sinatra.tar
    source: load

- name: Build image and with build args
  docker_image:
    name: myimage
    build:
      path: /path/to/build/dir
      args:
        log_volume: /var/log/myapp
        listen_port: 8080
    source: build

- name: Build image using cache source
  docker_image:
    name: myimage:latest
    build:
      path: /path/to/build/dir
      # Use as cache source for building myimage
      cache_from:
        - nginx:latest
        - alpine:3.8
    source: build


RETURN VALUES:

image:
    description: Image inspection results for the affected image.
    returned: success
    type: dict
    sample: {}

