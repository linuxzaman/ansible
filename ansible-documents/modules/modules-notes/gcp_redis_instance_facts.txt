> GCP_REDIS_INSTANCE_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_redis_instance_facts.py)

        Gather facts for GCP Instance

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

= region
        The name of the Redis region of the instance.


- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path


NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: " a instance facts"
  gcp_redis_instance_facts:
    region: us-central1
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: facts


RETURN VALUES:

items:
  description: List of items
  returned: always
  type: complex
  contains:
    alternativeLocationId:
      description:
      - Only applicable to STANDARD_HA tier which protects the instance against zonal
        failures by provisioning it across two zones.
      - If provided, it must be a different zone from the one provided in [locationId].
      returned: success
      type: str
    authorizedNetwork:
      description:
      - The full name of the Google Compute Engine network to which the instance is
        connected. If left unspecified, the default network will be used.
      returned: success
      type: str
    createTime:
      description:
      - The time the instance was created in RFC3339 UTC "Zulu" format, accurate to
        nanoseconds.
      returned: success
      type: str
    currentLocationId:
      description:
      - The current zone where the Redis endpoint is placed.
      - For Basic Tier instances, this will always be the same as the [locationId]
        provided by the user at creation time. For Standard Tier instances, this can
        be either [locationId] or [alternativeLocationId] and can change after a failover
        event.
      returned: success
      type: str
    displayName:
      description:
      - An arbitrary and optional user-provided name for the instance.
      returned: success
      type: str
    host:
      description:
      - Hostname or IP address of the exposed Redis endpoint used by clients to connect
        to the service.
      returned: success
      type: str
    labels:
      description:
      - Resource labels to represent user provided metadata.
      returned: success
      type: dict
    redisConfigs:
      description:
      - Redis configuration parameters, according to U(http://redis.io/topics/config.)
      - 'Please check Memorystore documentation for the list of supported parameters:
        U(https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs)
        .'
      returned: success
      type: dict
    locationId:
      description:
      - The zone where the instance will be provisioned. If not provided, the service
        will choose a zone for the instance. For STANDARD_HA tier, instances will
        be created across two zones for protection against zonal failures. If [alternativeLocationId]
        is also provided, it must be different from [locationId].
      returned: success
      type: str
    name:
      description:
      - The ID of the instance or a fully qualified identifier for the instance. .
      returned: success
      type: str
    memorySizeGb:
      description:
      - Redis memory size in GiB.
      returned: success
      type: int
    port:
      description:
      - The port number of the exposed Redis endpoint.
      returned: success
      type: int
    redisVersion:
      description:
      - The version of Redis software. If not provided, latest supported version will
        be used. Updating the version will perform an upgrade/downgrade to the new
        version. Currently, the supported values are REDIS_3_2 for Redis 3.2.
      returned: success
      type: str
    reservedIpRange:
      description:
      - The CIDR range of internal addresses that are reserved for this instance.
        If not provided, the service will choose an unused /29 block, for example,
        10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with
        existing subnets in an authorized network.
      returned: success
      type: str
    tier:
      description:
      - 'The service tier of the instance. Must be one of these values: - BASIC: standalone
        instance - STANDARD_HA: highly available primary/replica instances .'
      returned: success
      type: str
    region:
      description:
      - The name of the Redis region of the instance.
      returned: success
      type: str

