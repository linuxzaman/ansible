> BIGIP_IAPP_SERVICE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_iapp_service.py)

        Manages TCL iApp services on a BIG-IP. If you are looking for the API that is communicated with on the BIG-IP, the one the is
        used is `/mgmt/tm/sys/application/service/'.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- description
        Description of the iApp service.
        If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload
        that you provide in the `parameters' field.
        [Default: (null)]
        type: str
        version_added: 2.7
        

- device_group
        The device group for the iApp service.
        If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload
        that you provide in the `parameters' field.
        [Default: (null)]
        type: str
        version_added: 2.7
        

- force
        Forces the updating of an iApp service even if the parameters to the service have not changed. This option is of particular
        importance if the iApp template that underlies the service has been updated in-place. This option is equivalent to re-configuring
        the iApp if that template has changed.
        [Default: False]
        type: bool

- metadata
        Metadata associated with the iApp service.
        If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload
        that you provide in the `parameters' field.
        [Default: (null)]
        type: list
        version_added: 2.7
        

= name
        The name of the iApp service that you want to deploy.

        type: str

- parameters
        A hash of all the required template variables for the iApp template. If your parameters are stored in a file (the more common
        scenario) it is recommended you use either the `file' or `template' lookups to supply the expected parameters.
        These parameters typically consist of the `lists', `tables', and `variables' fields.
        [Default: (null)]
        type: dict

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str
        version_added: 2.5
        

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present', ensures that the iApp service is created and running. When `absent', ensures that the iApp service has been
        removed.
        (Choices: present, absent)[Default: present]
        type: str

- strict_updates
        Indicates whether the application service is tied to the template, so when the template is updated, the application service
        changes to reflect the updates.
        When `yes', disallows any updates to the resources that the iApp service has created, if they are not updated directly through
        the iApp.
        When `no', allows updates outside of the iApp.
        If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload
        that you provide in the `parameters' field.
        [Default: True]
        type: bool
        version_added: 2.5
        

- template
        The iApp template from which to instantiate a new service. This template must exist on your BIG-IP before you can successfully
        create a service.
        When creating a new service, this parameter is required.
        [Default: (null)]
        type: str

- traffic_group
        The traffic group for the iApp service. When creating a new service, if this value is not specified, the default of `/Common
        /traffic-group-1' will be used.
        If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload
        that you provide in the `parameters' field.
        [Default: (null)]
        type: str
        version_added: 2.5
        

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - stableinterface
          supported_by: certified
        

EXAMPLES:

- name: Create HTTP iApp service from iApp template
  bigip_iapp_service:
    name: foo-service
    template: f5.http
    parameters: "{{ lookup('file', 'f5.http.parameters.json') }}"
    state: present
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Upgrade foo-service to v1.2.0rc4 of the f5.http template
  bigip_iapp_service:
    name: foo-service
    template: f5.http.v1.2.0rc4
    state: present
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Configure a service using parameters in YAML
  bigip_iapp_service:
    name: tests
    template: web_frontends
    state: present
    parameters:
      variables:
        - name: var__vs_address
          value: 1.1.1.1
        - name: pm__apache_servers_for_http
          value: 2.2.2.1:80
        - name: pm__apache_servers_for_https
          value: 2.2.2.2:80
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Re-configure a service whose underlying iApp was updated in place
  bigip_iapp_service:
    name: tests
    template: web_frontends
    force: yes
    state: present
    parameters:
      variables:
        - name: var__vs_address
          value: 1.1.1.1
        - name: pm__apache_servers_for_http
          value: 2.2.2.1:80
        - name: pm__apache_servers_for_https
          value: 2.2.2.2:80
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Try to remove the iApp template before the associated Service is removed
  bigip_iapp_template:
    name: web_frontends
    state: absent
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  register: result
  failed_when:
    - result is not success
    - "'referenced by one or more applications' not in result.msg"

- name: Configure a service using more complicated parameters
  bigip_iapp_service:
    name: tests
    template: web_frontends
    state: present
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
    parameters:
      variables:
        - name: var__vs_address
          value: 1.1.1.1
        - name: pm__apache_servers_for_http
          value: 2.2.2.1:80
        - name: pm__apache_servers_for_https
          value: 2.2.2.2:80
      lists:
        - name: irules__irules
          value:
            - foo
            - bar
      tables:
        - name: basic__snatpool_members
        - name: net__snatpool_members
        - name: optimizations__hosts
        - name: pool__hosts
          columnNames:
            - name
          rows:
            - row:
                - internal.company.bar
        - name: pool__members
          columnNames:
            - addr
            - port
            - connection_limit
          rows:
            - row:
                - "none"
                - 80
                - 0
        - name: server_pools__servers
  delegate_to: localhost

- name: Override metadata that may or may not exist in parameters
  bigip_iapp_service:
    name: foo-service
    template: f5.http
    parameters: "{{ lookup('file', 'f5.http.parameters.json') }}"
    metadata:
      - persist: yes
        name: data 1
      - persist: yes
        name: data 2
    state: present
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost


RETURN VALUES:

# only common fields returned

