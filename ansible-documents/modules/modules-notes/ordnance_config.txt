> ORDNANCE_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/ordnance/ordnance_config.py)

        Ordnance router configurations use a simple block indent file syntax for segmenting configuration into sections.  This module
        provides an implementation for working with these configuration sections in a deterministic way.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before' this
        allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made.  The backup file is written to the `backup' folder in the playbook root directory.  If the directory does not
        exist, it is created.
        [Default: no]
        type: bool

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the
        opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched
        against the system.
        [Default: (null)]

- config
        The `config' argument allows the playbook designer to supply the base configuration to be used to validate configuration changes
        necessary.  If this argument is provided, the module will not download the running-config from the remote node.
        [Default: (null)]

- defaults
        This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the
        module will get the current config by issuing the command `show running-config all'.
        [Default: no]
        type: bool

- lines
        The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in
        the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the
        device config parser.
        (Aliases: commands)[Default: (null)]

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is
        set to `line', commands are matched line by line.  If match is set to `strict', command lines are matched with respect to
        position.  If match is set to `exact', command lines must be an equal match.  Finally, if match is set to `none', the module will
        not attempt to compare the source configuration with the running configuration on the remote device.
        (Choices: line, strict, exact, none)[Default: line]

- multiline_delimiter
        This argument is used when pushing a multiline configuration element to the Ordnance router.  It specifies the character to use
        as the delimiting character.  This only applies to the configuration action
        [Default: @]

- parents
        The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the
        parents argument is omitted, the commands are checked against the set of top level or global commands.
        [Default: (null)]

- replace
        Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to `line' then the
        modified lines are pushed to the device in configuration mode.  If the replace argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct.
        (Choices: line, block)[Default: line]

- save
        The `save' argument instructs the module to save the running- config to the startup-config at the conclusion of the module
        running.  If check mode is specified, this argument is ignored.
        [Default: no]
        type: bool

- src
        Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source
        file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This
        argument is mutually exclusive with `lines', `parents'.
        [Default: (null)]


AUTHOR: Alexander Turner (@alexanderturner) <alex.turner@ordnance.io>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
# Note: examples below use the following provider dict to handle
#       transport and authentication to the node.
vars:
  cli:
    host: "{{ inventory_hostname }}"
    username: RouterName
    password: password
    transport: cli

---
- name: configure top level configuration
  ordnance_config:
    lines: hostname {{ inventory_hostname }}
    provider: "{{ cli }}"

- name: configure interface settings
  ordnance_config:
    lines:
      - description test interface
      - ip address 172.31.1.1 255.255.255.0
    parents: interface Ethernet1
    provider: "{{ cli }}"

- name: configure bgp router
  ordnance_config:
    lines:
      - neighbor 1.1.1.1 remote-as 1234
      - network 10.0.0.0/24
    parents: router bgp 65001
    provider: "{{ cli }}"


RETURN VALUES:

updates:
  description: The set of commands that will be pushed to the remote device
  returned: Only when commands is specified.
  type: list
  sample: ['...', '...']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/ordnance_config.2016-07-16@22:28:34

