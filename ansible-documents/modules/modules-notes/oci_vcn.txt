> OCI_VCN    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/oracle/oci_vcn.py)

        This module allows the user to create, delete and update virtual cloud networks(VCNs) in OCI. The complete Oracle Cloud
        Infrastructure Ansible Modules can be downloaded from https://github.com/oracle/oci-ansible-modules/releases.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_user
        The OCID of the user, on whose behalf, OCI APIs are invoked. If not set, then the value of the OCI_USER_OCID environment
        variable, if any, is used. This option is required if the user is not specified through a configuration file (See
        `config_file_location'). To get the user's OCID, please refer https://docs.us-
        phoenix-1.oraclecloud.com/Content/API/Concepts/apisigningkey.htm.
        [Default: (null)]
        type: str

- api_user_fingerprint
        Fingerprint for the key pair being used. If not set, then the value of the OCI_USER_FINGERPRINT environment variable, if any, is
        used. This option is required if the key fingerprint is not specified through a configuration file (See `config_file_location').
        To get the key pair's fingerprint value please refer https://docs.us-
        phoenix-1.oraclecloud.com/Content/API/Concepts/apisigningkey.htm.
        [Default: (null)]
        type: str

- api_user_key_file
        Full path and filename of the private key (in PEM format). If not set, then the value of the OCI_USER_KEY_FILE variable, if any,
        is used. This option is required if the private key is not specified through a configuration file (See `config_file_location').
        If the key is encrypted with a pass-phrase, the `api_user_key_pass_phrase' option must also be provided.
        [Default: (null)]
        type: str

- api_user_key_pass_phrase
        Passphrase used by the key referenced in `api_user_key_file', if it is encrypted. If not set, then the value of the
        OCI_USER_KEY_PASS_PHRASE variable, if any, is used. This option is required if the key passphrase is not specified through a
        configuration file (See `config_file_location').
        [Default: (null)]
        type: str

- auth_type
        The type of authentication to use for making API requests. By default `auth_type="api_key"' based authentication is performed and
        the API key (see `api_user_key_file') in your config file will be used. If this 'auth_type' module option is not specified, the
        value of the OCI_ANSIBLE_AUTH_TYPE, if any, is used. Use `auth_type="instance_principal"' to use instance principal based
        authentication when running ansible playbooks within an OCI compute instance.
        (Choices: api_key, instance_principal)[Default: api_key]
        type: str

- cidr_block
        The CIDR IP address block of the VCN. Required when creating a VCN with `state=present'.
        [Default: (null)]

- compartment_id
        The OCID of the compartment to contain the VCN. Required when creating a VCN with `state=present'. This option is mutually
        exclusive with `vcn_id'.
        [Default: (null)]
        type: str

- config_file_location
        Path to configuration file. If not set then the value of the OCI_CONFIG_FILE environment variable, if any, is used. Otherwise,
        defaults to ~/.oci/config.
        [Default: (null)]
        type: str

- config_profile_name
        The profile to load from the config file referenced by `config_file_location'. If not set, then the value of the
        OCI_CONFIG_PROFILE environment variable, if any, is used. Otherwise, defaults to the "DEFAULT" profile in `config_file_location'.
        [Default: DEFAULT]
        type: str

- defined_tags
        Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see https://docs.us-
        phoenix-1.oraclecloud.com/Content/General/Concepts/resourcetags.htm.
        [Default: (null)]
        type: dict

- display_name
        A user-friendly name. Does not have to be unique, and it's changeable.
        (Aliases: name)[Default: (null)]
        type: str

- dns_label
        A DNS label for the VCN, used in conjunction with the VNIC's hostname and subnet's DNS label to form a fully qualified domain
        name (FQDN) for each VNIC within this subnet (for example, bminstance-1.subnet123.vcn1.oraclevcn.com). Not required to be unique,
        but it's a best practice to set unique DNS labels for VCNs in your tenancy. Must be an alphanumeric string that begins with a
        letter. The value cannot be changed.
        [Default: (null)]
        type: str

- force_create
        Whether to attempt non-idempotent creation of a resource. By default, create resource is an idempotent operation, and doesn't
        create the resource if it already exists. Setting this option to true, forcefully creates a copy of the resource, even if it
        already exists.This option is mutually exclusive with `key_by'.
        [Default: False]
        type: bool

- freeform_tags
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more
        information, see https://docs.us-phoenix-1.oraclecloud.com/Content/General/Concepts/resourcetags.htm.
        [Default: (null)]
        type: dict

- key_by
        The list of comma-separated attributes of this resource which should be used to uniquely identify an instance of the resource. By
        default, all the attributes of a resource except `freeform_tags' are used to uniquely identify a resource.
        [Default: (null)]
        type: list

- region
        The Oracle Cloud Infrastructure region to use for all OCI API requests. If not set, then the value of the OCI_REGION variable, if
        any, is used. This option is required if the region is not specified through a configuration file (See `config_file_location').
        Please refer to https://docs.us-phoenix-1.oraclecloud.com/Content/General/Concepts/regions.htm for more information on OCI
        regions.
        [Default: (null)]
        type: str

- state
        Create or update a VCN with `state=present'. Use `state=absent' to delete a VCN.
        (Choices: present, absent)[Default: present]
        type: str

- tenancy
        OCID of your tenancy. If not set, then the value of the OCI_TENANCY variable, if any, is used. This option is required if the
        tenancy OCID is not specified through a configuration file (See `config_file_location'). To get the tenancy OCID, please refer
        https://docs.us-phoenix-1.oraclecloud.com/Content/API/Concepts/apisigningkey.htm
        [Default: (null)]
        type: str

- vcn_id
        The OCID of the VCN. Required when deleting a VCN with `state=absent' or updating a VCN with `state=present'. This option is
        mutually exclusive with `compartment_id'.
        (Aliases: id)[Default: (null)]
        type: str

- wait
        Whether to wait for create or delete operation to complete.
        [Default: True]
        type: bool

- wait_timeout
        Time, in seconds, to wait when `wait=yes'.
        [Default: 1200]
        type: int

- wait_until
        The lifecycle state to wait for the resource to transition into when `wait=yes'. By default, when `wait=yes', we wait for the
        resource to get into ACTIVE/ATTACHED/AVAILABLE/PROVISIONED/ RUNNING applicable lifecycle state during create operation & to get
        into DELETED/DETACHED/ TERMINATED lifecycle state during delete operation.
        [Default: (null)]
        type: str


NOTES:
      * For OCI python sdk configuration, please refer to https://oracle-cloud-infrastructure-python-
        sdk.readthedocs.io/en/latest/configuration.html


REQUIREMENTS:  python >= 2.7, Python SDK for Oracle Cloud Infrastructure https://oracle-cloud-infrastructure-python-sdk.readthedocs.io

AUTHOR: Rohit Chaware (@rohitChaware)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a VCN
  oci_vcn:
    cidr_block: '10.0.0.0/16'
    compartment_id: 'ocid1.compartment.oc1..xxxxxEXAMPLExxxxx'
    display_name: my_vcn
    dns_label: ansiblevcn

- name: Updates the specified VCN's display name
  oci_vcn:
    vcn_id: ocid1.vcn.oc1.phx.xxxxxEXAMPLExxxxx
    display_name: ansible_vcn

- name: Delete the specified VCN
  oci_vcn:
    vcn_id: ocid1.vcn.oc1.phx.xxxxxEXAMPLExxxxx
    state: absent


RETURN VALUES:

vcn:
    description: Information about the VCN
    returned: On successful create and update operation
    type: dict
    sample: {
            "cidr_block": "10.0.0.0/16",
            compartment_id": "ocid1.compartment.oc1..xxxxxEXAMPLExxxxx",
            "default_dhcp_options_id": "ocid1.dhcpoptions.oc1.phx.xxxxxEXAMPLExxxxx",
            "default_route_table_id": "ocid1.routetable.oc1.phx.xxxxxEXAMPLExxxxx",
            "default_security_list_id": "ocid1.securitylist.oc1.phx.xxxxxEXAMPLExxxxx",
            "display_name": "ansible_vcn",
            "dns_label": "ansiblevcn",
            "id": "ocid1.vcn.oc1.phx.xxxxxEXAMPLExxxxx",
            "lifecycle_state": "AVAILABLE",
            "time_created": "2017-11-13T20:22:40.626000+00:00",
            "vcn_domain_name": "ansiblevcn.oraclevcn.com"
        }

