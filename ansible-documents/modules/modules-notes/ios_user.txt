> IOS_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/ios/ios_user.py)

        This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage
        either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from
        the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- aggregate
        The set of username objects to be configured on the remote Cisco IOS device. The list entries can either be the username or a
        hash of username and properties. This argument is mutually exclusive with the `name' argument.
        (Aliases: users, collection)[Default: (null)]

- auth_pass
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes' with `become_pass'.
        For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).
        HORIZONTALLINE
        Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' is false, then this
        argument does nothing. If the value is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS' will
        be used instead.
        [Default: (null)]
        type: str

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

- configured_password
        The password to be configured on the Cisco IOS device. The password needs to be provided in clear and it will be encrypted on the
        device. Please note that this option is not same as `provider password'.
        [Default: (null)]

- hashed_password
        This option allows configuring hashed passwords on Cisco IOS devices.
        [Default: (null)]
        suboptions:
          type:
            description:
            - Specifies the type of hash (e.g., 5 for MD5, 8 for PBKDF2, etc.)
            - For this to work, the device needs to support the desired hash type
            required: true
            type: int
          value:
            description:
            - The actual hashed password to be configured on the device
            required: true
        
        version_added: 2.8

- name
        The username to be configured on the Cisco IOS device. This argument accepts a string value and is mutually exclusive with the
        `aggregate' argument. Please note that this option is not same as `provider username'.
        [Default: (null)]

- nopassword
        Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by
        a password.
        [Default: (null)]
        type: bool

- password_type
        This argument determines whether a 'password' or 'secret' will be configured.
        (Choices: secret, password)[Default: secret]
        version_added: 2.8

- privilege
        The `privilege' argument configures the privilege level of the user when logged into the system. This argument accepts integer
        values in the range of 1 to 15.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- purge
        Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the
        device with the exception of the `admin` user (the current defined set of users).
        [Default: False]
        type: bool

- sshkey
        Specifies one or more SSH public key(s) to configure for the given username.
        This argument accepts a valid SSH key value.
        [Default: (null)]
        version_added: 2.7

- state
        Configures the state of the username definition as it relates to the device operational configuration. When set to `present', the
        username(s) should be configured in the device active configuration and when set to `absent' the username(s) should not be in the
        device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]

- view
        Configures the view for the username in the device running configuration. The argument accepts a string value defining the view
        name. This argument does not check if the view has been configured on the device.
        (Aliases: role)[Default: (null)]


NOTES:
      * Tested against IOS 15.6
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


AUTHOR: Trishna Guha (@trishnaguha)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: create a new user
  ios_user:
    name: ansible
    nopassword: True
    sshkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    state: present

- name: create a new user with multiple keys
  ios_user:
    name: ansible
    sshkey:
      - "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      - "{{ lookup('file', '~/path/to/public_key') }}"
    state: present

- name: remove all users except admin
  ios_user:
    purge: yes

- name: remove all users except admin and these listed users
  ios_user:
    aggregate:
      - name: testuser1
      - name: testuser2
      - name: testuser3
    purge: yes

- name: set multiple users to privilege level 15
  ios_user:
    aggregate:
      - name: netop
      - name: netend
    privilege: 15
    state: present

- name: set user view/role
  ios_user:
    name: netop
    view: network-operator
    state: present

- name: Change Password for User netop
  ios_user:
    name: netop
    configured_password: "{{ new_password }}"
    update_password: always
    state: present

- name: Aggregate of users
  ios_user:
    aggregate:
      - name: ansibletest2
      - name: ansibletest3
    view: network-admin

- name: Add a user specifying password type
  ios_user:
    name: ansibletest4
    configured_password: "{{ new_password }}"
    password_type: password

- name: Add a user with MD5 hashed password
  ios_user:
    name: ansibletest5
    hashed_password:
      type: 5
      value: $3$8JcDilcYgFZi.yz4ApaqkHG2.8/

- name: Delete users with aggregate
  ios_user:
    aggregate:
      - name: ansibletest1
      - name: ansibletest2
      - name: ansibletest3
    state: absent


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - username ansible secret password
    - username admin secret admin

