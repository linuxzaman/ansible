> CNOS_CONDITIONAL_COMMAND    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cnos/cnos_conditional_command.py)

        This module allows you to modify the running configuration of a switch. It provides a way to execute a single CNOS command on a
        network device by evaluating the current running configuration and executing the command only if the specific settings have not
        been already configured. The CNOS command is passed as an argument of the method. This module functions the same as the
        cnos_command module. The only exception is that following inventory variable can be specified ["condition = <flag string>"] When
        this inventory variable is specified as the variable of a task, the command is executed for the network element that matches the
        flag string. Usually, commands are executed across a group of network devices. When there is a requirement to skip the execution
        of the command on one or more devices, it is recommended to use this module. This module uses SSH to manage network device
        configuration.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= clicommand
        This specifies the CLI command as an attribute to this method. The command is passed using double quotes. The variables can be
        placed directly on to the CLI commands or can be invoked from the vars directory.
        [Default: None]

= condition
        If you specify condition=false in the inventory file against any device, the command execution is skipped for that device.
        [Default: None]

= deviceType
        This specifies the type of device where the method is executed. The choices NE1072T,NE1032,NE1032T,NE10032,NE2572 are added since
        Ansible 2.4. The choice NE0152T is added since 2.8
        (Choices: g8272_cnos, g8296_cnos, g8332_cnos, NE0152T, NE1072T, NE1032, NE1032T, NE10032, NE2572)
        type: str
        version_added: 2.3

- enablePassword
        Configures the password used to enter Global Configuration command mode on the switch. If the switch does not request this
        password, the parameter is ignored.While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.
        [Default: (null)]
        type: str
        version_added: 2.3

= flag
        If a task needs to be executed, you have to set the flag the same as it is specified in the inventory for that device.
        [Default: None]

= host
        This is the variable used to search the hosts file at /etc/ansible/hosts and identify the IP address of the device on which the
        template is going to be applied. Usually the Ansible keyword {{ inventory_hostname }} is specified in the playbook as an
        abstraction of the group of network elements that need to be configured.

        type: str
        version_added: 2.3

= outputfile
        This specifies the file path where the output of each command execution is saved. Each command that is specified in the merged
        template file and each response from the device are saved here. Usually the location is the results folder, but you can choose
        another location based on your write permission.

        type: str
        version_added: 2.3

= password
        Configures the password used to authenticate the connection to the remote device. The value of the password parameter is used to
        authenticate the SSH session. While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.

        type: str
        version_added: 2.3

= username
        Configures the username used to authenticate the connection to the remote device. The value of the username parameter is used to
        authenticate the SSH session. While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.

        type: str
        version_added: 2.3


NOTES:
      * For more information on using Ansible to manage Lenovo Network devices see https://www.ansible.com/ansible-lenovo.


AUTHOR: Anil Kumar Muraleedharan (@amuraleedhar)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

Tasks : The following are examples of using the module
 cnos_conditional_command. These are written in the main.yml file of the tasks
 directory.
---
- name: Applying CLI template on VLAG Tier1 Leaf Switch1
  cnos_conditional_command:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_conditional_command_
                  {{ inventory_hostname }}_output.txt"
      condition: "{{ hostvars[inventory_hostname]['condition']}}"
      flag: leaf_switch2
      command: "spanning-tree mode enable"


RETURN VALUES:

msg:
  description: Success or failure message
  returned: always
  type: str
  sample: "Command Applied"

