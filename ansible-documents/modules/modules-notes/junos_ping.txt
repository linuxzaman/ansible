> JUNOS_PING    (/usr/lib/python2.7/dist-packages/ansible/modules/network/junos/junos_ping.py)

        Tests reachability using ping from devices running Juniper JUNOS to a remote destination. Tested against Junos (17.3R1.10) For a
        general purpose network module, see the [net_ping] module. For Windows targets, use the [win_ping] module instead. For targets
        running Python, use the [ping] module instead.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- count
        Number of packets to send to check reachability.
        [Default: 5]
        type: int

= dest
        The IP Address or hostname (resolvable by the device) of the remote node.


- interface
        The source interface to use while sending the ping packet(s).
        [Default: (null)]

- interval
        Determines the interval (in seconds) between consecutive pings.
        [Default: (null)]
        type: int

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' or `connection: netconf'.
        For more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.  The
              port value will default to the well known SSH port of 22 (for `transport=cli')
              or port 830 (for `transport=netconf') device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- size
        Determines the size (in bytes) of the ping packet(s).
        [Default: (null)]
        type: int

- source
        The IP Address to use while sending the ping packet(s).
        [Default: (null)]

- state
        Determines if the expected result is success or fail.
        (Choices: absent, present)[Default: present]

- ttl
        The time-to-live value for the ICMP packet(s).
        [Default: (null)]
        type: int


NOTES:
      * For a general purpose network module, see the [net_ping] module.
      * For Windows targets, use the [win_ping] module instead.
      * For targets running Python, use the [ping] module instead.
      * For information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Juniper network devices see https://www.ansible.com/ansible-juniper.


AUTHOR: Nilashish Chakraborty (@nilashishc)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: Test reachability to 10.10.10.10
  junos_ping:
    dest: 10.10.10.10

- name: Test reachability to 10.20.20.20 using source and size set
  junos_ping:
    dest: 10.20.20.20
    size: 1024
    ttl: 128

- name: Test unreachability to 10.30.30.30 using interval
  junos_ping:
    dest: 10.30.30.30
    interval: 3
    state: absent

- name: Test reachability to 10.40.40.40 setting count and interface
  junos_ping:
    dest: 10.40.40.40
    interface: fxp0
    count: 20
    size: 512


RETURN VALUES:

commands:
  description: List of commands sent.
  returned: always
  type: list
  sample: ["ping 10.8.38.44 count 10 source 10.8.38.38 ttl 128"]
packet_loss:
  description: Percentage of packets lost.
  returned: always
  type: str
  sample: "0%"
packets_rx:
  description: Packets successfully received.
  returned: always
  type: int
  sample: 20
packets_tx:
  description: Packets successfully transmitted.
  returned: always
  type: int
  sample: 20
rtt:
  description: The round trip time (RTT) stats.
  returned: when ping succeeds
  type: dict
  sample: {"avg": 2, "max": 8, "min": 1, "stddev": 24}

