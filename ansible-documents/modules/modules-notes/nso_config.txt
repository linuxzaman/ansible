> NSO_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nso/nso_config.py)

        This module provides support for managing configuration in Cisco NSO and can also ensure services are in sync.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

= data
        NSO data in format as | display json converted to YAML. List entries can be annotated with a __state entry. Set to in-sync/deep-
        in-sync for services to verify service is in sync with the network. Set to absent in list entries to ensure they are deleted if
        they exist in NSO.


= password
        NSO password

        type: str

- timeout
        JSON-RPC request timeout in seconds
        [Default: 300]
        type: int
        version_added: 2.6

= url
        NSO JSON-RPC URL, http://localhost:8080/jsonrpc

        type: str

= username
        NSO username

        type: str

- validate_certs
        When set to true, validates the SSL certificate of NSO when using SSL
        [Default: False]
        type: bool


REQUIREMENTS:  Cisco NSO version 3.4.12 or higher, 4.2.7 or higher, 4.3.8 or higher, 4.4.3 or higher, 4.5 or higher.

AUTHOR: Claes Nästén (@cnasten)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create L3VPN
  nso_config:
    url: http://localhost:8080/jsonrpc
    username: username
    password: password
    data:
      l3vpn:vpn:
        l3vpn:
        - name: company
          route-distinguisher: 999
          endpoint:
          - id: branch-office1
            ce-device: ce6
            ce-interface: GigabitEthernet0/12
            ip-network: 10.10.1.0/24
            bandwidth: 12000000
            as-number: 65101
          - id: branch-office2
            ce-device: ce1
            ce-interface: GigabitEthernet0/11
            ip-network: 10.7.7.0/24
            bandwidth: 6000000
            as-number: 65102
          - id: branch-office3
            __state: absent
        __state: in-sync


RETURN VALUES:

changes:
    description: List of changes
    returned: always
    type: complex
    sample:
        - path: "/l3vpn:vpn/l3vpn{example}/endpoint{office}/bandwidth"
          from: '6000000'
          to: '12000000'
          type: set
    contains:
        path:
            description: Path to value changed
            returned: always
            type: str
        from:
            description: Previous value if any, else null
            returned: When previous value is present on value change
            type: str
        to:
            description: Current value if any, else null.
            returned: When new value is present on value change
        type:
            description: Type of change. create|delete|set|re-deploy
diffs:
    description: List of sync changes
    returned: always
    type: complex
    sample:
        - path: "/l3vpn:vpn/l3vpn{example}"
          diff: |2
             devices {
                 device pe3 {
                     config {
                         alu:service {
                             vprn 65101 {
                                 bgp {
                                     group example-ce6 {
            -                            peer-as 65102;
            +                            peer-as 65101;
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
    contains:
        path:
            description: keypath to service changed
            returned: always
            type: str
        diff:
            description: configuration difference triggered the re-deploy
            returned: always
            type: str

