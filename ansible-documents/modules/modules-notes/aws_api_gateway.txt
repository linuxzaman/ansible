> AWS_API_GATEWAY    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/aws_api_gateway.py)

        Allows for the management of API Gateway APIs Normally you should give the api_id since there is no other stable guaranteed
        unique identifier for the API.  If you do not give api_id then a new API will be create each time this is run. Beware that there
        are very hard limits on the rate that you can call API Gateway's REST API.  You may need to patch your boto.  See
        https://github.com/boto/boto3/issues/876 and discuss with your AWS rep. swagger_file and swagger_text are passed directly on to
        AWS transparently whilst swagger_dict is an ansible dict which is converted to JSON before the API definitions are uploaded.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_id
        The ID of the API you want to manage.
        [Default: (null)]

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- deploy_desc
        Description of the deployment - recorded and visible in the AWS console.
        [Default: Automatic deployment by Ansible.]

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

- stage
        The name of the stage the API should be deployed to.
        [Default: (null)]

- state
        NOT IMPLEMENTED Create or delete API - currently we always create.
        (Choices: present, absent)[Default: present]

- swagger_dict
        Swagger definitions API ansible dictionary which will be converted to JSON and uploaded.
        [Default: (null)]

- swagger_file
        JSON or YAML file containing swagger definitions for API. Exactly one of swagger_file, swagger_text or swagger_dict must be
        present.
        [Default: (null)]

- swagger_text
        Swagger definitions for API in JSON or YAML as a string direct from playbook.
        [Default: (null)]

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5


NOTES:
      * A future version of this module will probably use tags or another ID so that an API can be create only once.
      * As an early work around an intermediate version will probably do the same using a tag embedded in the API name.
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, boto3, python >= 2.6

AUTHOR: Michael De La Rue (@mikedlr)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Update API resources for development
- name: update API
  aws_api_gateway:
    api_id: 'abc123321cba'
    state: present
    swagger_file: my_api.yml

# update definitions and deploy API to production
- name: deploy API
  aws_api_gateway:
    api_id: 'abc123321cba'
    state: present
    swagger_file: my_api.yml
    stage: production
    deploy_desc: Make auth fix available.


RETURN VALUES:

output:
  description: the data returned by put_restapi in boto3
  returned: success
  type: dict
  sample:
    'data':
      {
          "id": "abc123321cba",
          "name": "MY REST API",
          "createdDate": 1484233401
      }

