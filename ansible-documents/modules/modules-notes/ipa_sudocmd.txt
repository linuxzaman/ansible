> IPA_SUDOCMD    (/usr/lib/python2.7/dist-packages/ansible/modules/identity/ipa/ipa_sudocmd.py)

        Add, modify or delete sudo command within FreeIPA server using FreeIPA API.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- description
        A description of this command.
        [Default: (null)]

- ipa_host
        IP or hostname of IPA server.
        If the value is not specified in the task, the value of environment variable `IPA_HOST' will be used instead.
        If both the environment variable `IPA_HOST' and the value are not specified in the task, then DNS will be used to try to discover
        the FreeIPA server.
        The relevant entry needed in FreeIPA is the 'ipa-ca' entry.
        If neither the DNS entry, nor the environment `IPA_HOST', nor the value are available in the task, then the default value will be
        used.
        Environment variable fallback mechanism is added in Ansible 2.5.
        [Default: ipa.example.com]
        type: str

= ipa_pass
        Password of administrative user.
        If the value is not specified in the task, the value of environment variable `IPA_PASS' will be used instead.
        Note that if the 'urllib_gssapi' library is available, it is possible to use GSSAPI to authenticate to FreeIPA.
        If the environment variable `KRB5CCNAME' is available, the module will use this kerberos credentials cache to authenticate to the
        FreeIPA server.
        If the environment variable `KRB5_CLIENT_KTNAME' is available, and `KRB5CCNAME' is not; the module will use this kerberos keytab
        to authenticate.
        If GSSAPI is not available, the usage of 'ipa_pass' is required.
        Environment variable fallback mechanism is added in Ansible 2.5.

        type: str

- ipa_port
        Port of FreeIPA / IPA server.
        If the value is not specified in the task, the value of environment variable `IPA_PORT' will be used instead.
        If both the environment variable `IPA_PORT' and the value are not specified in the task, then default value is set.
        Environment variable fallback mechanism is added in Ansible 2.5.
        [Default: 443]
        type: int

- ipa_prot
        Protocol used by IPA server.
        If the value is not specified in the task, the value of environment variable `IPA_PROT' will be used instead.
        If both the environment variable `IPA_PROT' and the value are not specified in the task, then default value is set.
        Environment variable fallback mechanism is added in Ansible 2.5.
        (Choices: http, https)[Default: https]
        type: str

- ipa_timeout
        Specifies idle timeout (in seconds) for the connection.
        For bulk operations, you may want to increase this in order to avoid timeout from IPA server.
        If the value is not specified in the task, the value of environment variable `IPA_TIMEOUT' will be used instead.
        If both the environment variable `IPA_TIMEOUT' and the value are not specified in the task, then default value is set.
        [Default: 10]
        type: int
        version_added: 2.7

- ipa_user
        Administrative account used on IPA server.
        If the value is not specified in the task, the value of environment variable `IPA_USER' will be used instead.
        If both the environment variable `IPA_USER' and the value are not specified in the task, then default value is set.
        Environment variable fallback mechanism is added in Ansible 2.5.
        [Default: admin]
        type: str

- state
        State to ensure
        (Choices: present, absent, enabled, disabled)[Default: present]

= sudocmd
        Sudo Command.
        (Aliases: name)

- validate_certs
        This only applies if `ipa_prot' is `https'.
        If set to `no', the SSL certificates will not be validated.
        This should only set to `no' used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool


AUTHOR: Thomas Krahn (@Nosmoht)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Ensure sudo command exists
- ipa_sudocmd:
    name: su
    description: Allow to run su via sudo
    ipa_host: ipa.example.com
    ipa_user: admin
    ipa_pass: topsecret

# Ensure sudo command does not exist
- ipa_sudocmd:
    name: su
    state: absent
    ipa_host: ipa.example.com
    ipa_user: admin
    ipa_pass: topsecret


RETURN VALUES:

sudocmd:
  description: Sudo command as return from IPA API
  returned: always
  type: dict

