> NET_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/system/net_user.py)

        This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage
        either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from
        the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Network Team
  * note: This module has a corresponding action plugin.

OPTIONS (= is mandatory):

- aggregate
        The set of username objects to be configured on the remote network device. The list entries can either be the username or a hash
        of username and properties. This argument is mutually exclusive with the `name' argument.
        [Default: (null)]

- configured_password
        The password to be configured on the remote network device. The password needs to be provided in clear and it will be encrypted
        on the device. Please note that this option is not same as `provider password'.
        [Default: (null)]

- name
        The username to be configured on the remote network device. This argument accepts a string value and is mutually exclusive with
        the `aggregate' argument. Please note that this option is not same as `provider username'.
        [Default: (null)]

- nopassword
        Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by
        a password.
        [Default: (null)]
        type: bool

- privilege
        The `privilege' argument configures the privilege level of the user when logged into the system. This argument accepts integer
        values in the range of 1 to 15.
        [Default: (null)]

- purge
        Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the
        device with the exception of the `admin` user (the current defined set of users).
        [Default: False]
        type: bool

- role
        Configures the role for the username in the device running configuration. The argument accepts a string value defining the role
        name. This argument does not check if the role has been configured on the device.
        [Default: (null)]

- sshkey
        Specifies the SSH public key to configure for the given username. This argument accepts a valid SSH key value.
        [Default: (null)]

- state
        Configures the state of the username definition as it relates to the device operational configuration. When set to `present', the
        username(s) should be configured in the device active configuration and when set to `absent' the username(s) should not be in the
        device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]


NOTES:
      * This module is supported on `ansible_network_os' network platforms. See the :ref:`Network Platform Options
        <platform_options>` for details.


AUTHOR: Trishna Guha (@trishnaguha)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: create a new user
  net_user:
    name: ansible
    sshkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    state: present

- name: remove all users except admin
  net_user:
    purge: yes

- name: set multiple users to privilege level 15
  net_user:
    aggregate:
      - { name: netop }
      - { name: netend }
    privilege: 15
    state: present

- name: Change Password for User netop
  net_user:
    name: netop
    password: "{{ new_password }}"
    update_password: always
    state: present


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - username ansible secret password
    - username admin secret admin

