> GCP_COMPUTE_GLOBAL_FORWARDING_RULE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py)

        Represents a GlobalForwardingRule resource. Global forwarding rules are used to forward traffic to the correct load balancer for
        HTTP load balancing. Global forwarding rules can only be used for HTTP load balancing. For more information, see
        https://cloud.google.com/compute/docs/load-balancing/http/ .

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- backend_service
        A reference to a BackendService to receive the matched traffic.
        This is used for internal load balancing.
        (not used for external load balancing) .
        This field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a
        dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_backend_service task and then set this backend_service field to "{{ name-of-resource }}"
        [Default: (null)]

- description
        An optional description of this resource. Provide this property when you create the resource.
        [Default: (null)]

- ip_address
        The IP address that this forwarding rule is serving on behalf of.
        Addresses are restricted based on the forwarding rule's load balancing scheme (EXTERNAL or INTERNAL) and scope (global or
        regional).
        When the load balancing scheme is EXTERNAL, for global forwarding rules, the address must be a global IP, and for regional
        forwarding rules, the address must live in the same region as the forwarding rule. If this field is empty, an ephemeral IPv4
        address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4 only. A global
        forwarding rule supports either IPv4 or IPv6.
        When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnet configured
        for the forwarding rule. By default, if this field is empty, an ephemeral internal IP address will be automatically allocated
        from the IP range of the subnet or network configured for this forwarding rule.
        An address can be specified either by a literal IP address or a URL reference to an existing Address resource. The following
        examples are all valid: * 100.1.2.3 * https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address *
        projects/project/regions/region/addresses/address * regions/region/addresses/address * global/addresses/address * address .
        [Default: (null)]

- ip_protocol
        The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP.
        When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
        (Choices: TCP, UDP, ESP, AH, SCTP, ICMP)[Default: (null)]

- ip_version
        The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for a global
        forwarding rule.
        (Choices: IPV4, IPV6)[Default: (null)]

- load_balancing_scheme
        This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of
        INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will
        be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy) .
        (Choices: INTERNAL, EXTERNAL)[Default: (null)]

= name
        Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
        means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
        except the last character, which cannot be a dash.


- network
        For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding
        Rule. If this field is not specified, the default network will be used.
        This field is not used for external load balancing.
        This field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary
        with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_network task and then set this network field to "{{ name-of-resource }}"
        [Default: (null)]

- port_range
        This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
        TargetVpnGateway, TargetPool, TargetInstance.
        Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to
        target.
        Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.
        Some types of forwarding target have constraints on the acceptable ports: * TargetHttpProxy: 80, 8080 * TargetHttpsProxy: 443 *
        TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443,
        465, 587, 700, 993, 995, 1883, 5222 * TargetVpnGateway: 500, 4500 .
        [Default: (null)]

- ports
        This field is used along with the backend_service field for internal load balancing.
        When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets
        addressed to these ports will be forwarded to the backends configured with this forwarding rule.
        You may specify a maximum of up to 5 ports.
        [Default: (null)]

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- subnetwork
        A reference to a subnetwork.
        For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding
        Rule.
        If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a
        subnetwork must be specified.
        This field is not used for external load balancing.
        This field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary
        with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_subnetwork task and then set this subnetwork field to "{{ name-of-resource }}"
        [Default: (null)]

- target
        This target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object.
        Valid types: HTTP_PROXY, HTTPS_PROXY, SSL_PROXY, TCP_PROXY .
        [Default: (null)]


NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a global address
  gcp_compute_global_address:
    name: globaladdress-globalforwardingrule
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: globaladdress

- name: create a instance group
  gcp_compute_instance_group:
    name: instancegroup-globalforwardingrule
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instancegroup

- name: create a http health check
  gcp_compute_http_health_check:
    name: httphealthcheck-globalforwardingrule
    healthy_threshold: 10
    port: 8080
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: healthcheck

- name: create a backend service
  gcp_compute_backend_service:
    name: backendservice-globalforwardingrule
    backends:
    - group: "{{ instancegroup }}"
    health_checks:
    - "{{ healthcheck.selfLink }}"
    enable_cdn: 'true'
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: backendservice

- name: create a url map
  gcp_compute_url_map:
    name: urlmap-globalforwardingrule
    default_service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: urlmap

- name: create a target http proxy
  gcp_compute_target_http_proxy:
    name: targethttpproxy-globalforwardingrule
    url_map: "{{ urlmap }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: httpproxy

- name: create a global forwarding rule
  gcp_compute_global_forwarding_rule:
    name: test_object
    ip_address: "{{ globaladdress.address }}"
    ip_protocol: TCP
    port_range: 80-80
    target: "{{ httpproxy.selfLink }}"
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
description:
  description:
  - An optional description of this resource. Provide this property when you create
    the resource.
  returned: success
  type: str
id:
  description:
  - The unique identifier for the resource.
  returned: success
  type: int
IPAddress:
  description:
  - The IP address that this forwarding rule is serving on behalf of.
  - Addresses are restricted based on the forwarding rule's load balancing scheme
    (EXTERNAL or INTERNAL) and scope (global or regional).
  - When the load balancing scheme is EXTERNAL, for global forwarding rules, the address
    must be a global IP, and for regional forwarding rules, the address must live
    in the same region as the forwarding rule. If this field is empty, an ephemeral
    IPv4 address from the same scope (global or regional) will be assigned. A regional
    forwarding rule supports IPv4 only. A global forwarding rule supports either IPv4
    or IPv6.
  - When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address
    belonging to the network/subnet configured for the forwarding rule. By default,
    if this field is empty, an ephemeral internal IP address will be automatically
    allocated from the IP range of the subnet or network configured for this forwarding
    rule.
  - 'An address can be specified either by a literal IP address or a URL reference
    to an existing Address resource. The following examples are all valid: * 100.1.2.3
    * U(https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address)
    * projects/project/regions/region/addresses/address * regions/region/addresses/address
    * global/addresses/address * address .'
  returned: success
  type: str
IPProtocol:
  description:
  - The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH,
    SCTP or ICMP.
  - When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
  returned: success
  type: str
backendService:
  description:
  - A reference to a BackendService to receive the matched traffic.
  - This is used for internal load balancing.
  - "(not used for external load balancing) ."
  returned: success
  type: dict
ipVersion:
  description:
  - The IP Version that will be used by this forwarding rule. Valid options are IPV4
    or IPV6. This can only be specified for a global forwarding rule.
  returned: success
  type: str
loadBalancingScheme:
  description:
  - 'This signifies what the ForwardingRule will be used for and can only take the
    following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will
    be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL
    means that this will be used for External Load Balancing (HTTP(S) LB, External
    TCP/UDP LB, SSL Proxy) .'
  returned: success
  type: str
name:
  description:
  - Name of the resource; provided by the client when the resource is created. The
    name must be 1-63 characters long, and comply with RFC1035. Specifically, the
    name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str
network:
  description:
  - For internal load balancing, this field identifies the network that the load balanced
    IP should belong to for this Forwarding Rule. If this field is not specified,
    the default network will be used.
  - This field is not used for external load balancing.
  returned: success
  type: dict
portRange:
  description:
  - This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy,
    TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.
  - Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to
    ports in the specified range will be forwarded to target.
  - Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint
    port ranges.
  - 'Some types of forwarding target have constraints on the acceptable ports: * TargetHttpProxy:
    80, 8080 * TargetHttpsProxy: 443 * TargetTcpProxy: 25, 43, 110, 143, 195, 443,
    465, 587, 700, 993, 995, 1883, 5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443,
    465, 587, 700, 993, 995, 1883, 5222 * TargetVpnGateway: 500, 4500 .'
  returned: success
  type: str
ports:
  description:
  - This field is used along with the backend_service field for internal load balancing.
  - When the load balancing scheme is INTERNAL, a single port or a comma separated
    list of ports can be configured. Only packets addressed to these ports will be
    forwarded to the backends configured with this forwarding rule.
  - You may specify a maximum of up to 5 ports.
  returned: success
  type: list
subnetwork:
  description:
  - A reference to a subnetwork.
  - For internal load balancing, this field identifies the subnetwork that the load
    balanced IP should belong to for this Forwarding Rule.
  - If the network specified is in auto subnet mode, this field is optional. However,
    if the network is in custom subnet mode, a subnetwork must be specified.
  - This field is not used for external load balancing.
  returned: success
  type: dict
region:
  description:
  - A reference to the region where the regional forwarding rule resides.
  - This field is not applicable to global forwarding rules.
  returned: success
  type: str
target:
  description:
  - This target must be a global load balancing resource. The forwarded traffic must
    be of a type appropriate to the target object.
  - 'Valid types: HTTP_PROXY, HTTPS_PROXY, SSL_PROXY, TCP_PROXY .'
  returned: success
  type: str

