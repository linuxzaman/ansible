> ZABBIX_ACTION    (/usr/lib/python2.7/dist-packages/ansible/modules/monitoring/zabbix/zabbix_action.py)

        This module allows you to create, modify and delete Zabbix actions.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- acknowledge_default_message
        Update operation (known as "Acknowledge operation" before Zabbix 4.0) message text.
        Works only with >= Zabbix 3.4
        [Default: (null)]

- acknowledge_default_subject
        Update operation (known as "Acknowledge operation" before Zabbix 4.0) message subject.
        Works only with >= Zabbix 3.4
        [Default: (null)]

- acknowledge_operations
        List of acknowledge operations.
        `Suboptions' are the same as for `operations'.
        Works only with >= Zabbix 3.4
        [Default: (null)]
        type: list

- conditions
        List of dictionaries of conditions to evaluate.
        For more information about suboptions of this option please check out Zabbix API documentation
        https://www.zabbix.com/documentation/3.4/manual/api/reference/action/object#action_filter_condition
        [Default: (null)]
        suboptions:
          formulaid:
            description:
            - Arbitrary unique ID that is used to reference the condition from a custom expression.
            - Can only contain upper-case letters.
            - Required for custom expression filters.
          operator:
            choices:
            - '='
            - <>
            - like
            - not like
            - in
            - '>='
            - <=
            - not in
            description:
            - Condition operator.
            - When `type' is set to `time_period', the choices are `in', `not in'.
          type:
            choices:
            - host_group
            - host
            - trigger
            - trigger_name
            - trigger_severity
            - time_period
            - host_template
            - application
            - maintenance_status
            - event_tag
            - event_tag_value
            - host_IP
            - discovered_service_type
            - discovered_service_port
            - discovery_status
            - uptime_or_downtime_duration
            - received_value
            - discovery_rule
            - discovery_check
            - proxy
            - discovery_object
            - proxy
            - host_name
            - host_metadata
            - host_group
            - host
            - host_template
            - application
            - event_type
            description: Type (label) of the condition.
          value:
            description:
            - Value to compare with.
            - When `type' is set to `discovery_status', the choices are `up', `down',
              `discovered', `lost'.
            - When `type' is set to `discovery_object', the choices are `host', `service'.
            - When `type' is set to `event_type', the choices are `item in not supported
              state', `item in normal state', `LLD rule in not supported state', `LLD rule
              in normal state', `trigger in unknown state', `trigger in normal state'.
            - When `type' is set to `trigger_severity', the choices are (case-insensitive)
              `not classified', `information', `warning', `average', `high', `disaster'
              irrespective of user-visible names being changed in Zabbix. Defaults to `not
              classified' if omitted.
            - Besides the above options, this is usualy either the name of the object or a
              string to compare with.
        
        type: list

- default_message
        Problem message default text.
        [Default: (null)]

- default_subject
        Problem message default subject.
        [Default: (null)]

- esc_period
        Default operation step duration. Must be greater than 60 seconds. Accepts seconds, time unit with suffix and user macro.
        [Default: 60]

- eval_type
        Filter condition evaluation method.
        Defaults to `andor' if conditions are less then 2 or if `formula' is not specified.
        Defaults to `custom_expression' when formula is specified.
        (Choices: andor, and, or, custom_expression)[Default: (null)]

= event_source
        Type of events that the action will handle.
        (Choices: trigger, discovery, auto_registration, internal)

- formula
        User-defined expression to be used for evaluating conditions of filters with a custom expression.
        The expression must contain IDs that reference specific filter conditions by its formulaid.
        The IDs used in the expression must exactly match the ones defined in the filter conditions. No condition can remain unused or
        omitted.
        Required for custom expression filters.
        [Default: (null)]

- http_login_password
        Basic Auth password
        [Default: (null)]
        type: str
        version_added: 2.1

= http_login_user
        Basic Auth login

        type: str
        version_added: 2.1

= login_password
        Zabbix user password.

        type: str

= login_user
        Zabbix user name.

        type: str

= name
        Name of the action


- operations
        List of action operations
        [Default: (null)]
        suboptions:
          command:
            description:
            - Command to run.
            - Required when `type=remote_command' and `command_type!=global_script'.
          command_type:
            choices:
            - custom_script
            - ipmi
            - ssh
            - telnet
            - global_script
            description:
            - Type of operation command.
            - Required when `type=remote_command'.
          esc_period:
            default: 0s
            description:
            - Duration of an escalation step in seconds.
            - Must be greater than 60 seconds.
            - Accepts seconds, time unit with suffix and user macro.
            - If set to 0 or 0s, the default action escalation period will be used.
          esc_step_from:
            default: 1
            description:
            - Step to start escalation from.
          esc_step_to:
            default: 1
            description:
            - Step to end escalation at.
          execute_on:
            choices:
            - agent
            - server
            - proxy
            description:
            - Target on which the custom script operation command will be executed.
            - Required when `type=remote_command' and `command_type=custom_script'.
          host_groups:
            description:
            - List of host groups host should be added to.
            - Required when `type=add_to_host_group' or `type=remove_from_host_group'.
            type: list
          inventory:
            description:
            - Host inventory mode.
            - Required when `type=set_host_inventory_mode'.
          media_type:
            default: all
            description:
            - Media type that will be used to send the message.
            - Set to `all' for all media types
          message:
            description:
            - Operation message text.
            - Will check the 'default message' and use the text from `default_message' if
              this and `default_subject' are not specified
          operation_condition:
            choices:
            - acknowledged
            - not_acknowledged
            description:
            - The action operation condition object defines a condition that must be met to
              perform the current operation.
            type: str
          password:
            description:
            - Password used for authentication.
            - Required when `type=remote_command' and `command_type in [ssh, telnet]'.
          port:
            description:
            - Port number used for authentication.
            - Required when `type=remote_command' and `command_type in [ssh, telnet]'.
          run_on_groups:
            description:
            - Host groups to run remote commands on.
            - Required when `type=remote_command' if `run_on_hosts' is not set.
          run_on_hosts:
            description:
            - Hosts to run remote commands on.
            - Required when `type=remote_command' if `run_on_groups' is not set.
            - If set to 0 the command will be run on the current host.
          script_name:
            description:
            - The name of script used for global script commands.
            - Required when `type=remote_command' and `command_type=global_script'.
          send_to_groups:
            description:
            - User groups to send messages to.
            type: list
          send_to_users:
            description:
            - Users (usernames or aliases) to send messages to.
            type: list
          ssh_auth_type:
            choices:
            - password
            - public_key
            description:
            - Authentication method used for SSH commands.
            - Required when `type=remote_command' and `command_type=ssh'.
          ssh_privatekey_file:
            description:
            - Name of the private key file used for SSH commands with public key authentication.
            - Required when `type=remote_command' and `command_type=ssh'.
          ssh_publickey_file:
            description:
            - Name of the public key file used for SSH commands with public key authentication.
            - Required when `type=remote_command' and `command_type=ssh'.
          subject:
            description:
            - Operation message subject.
            - Will check the 'default message' and use the text from `default_subject' if
              this and `default_subject' are not specified
          templates:
            description:
            - List of templates host should be linked to.
            - Required when `type=link_to_template' or `type=unlink_from_template'.
            type: list
          type:
            choices:
            - send_message
            - remote_command
            - add_host
            - remove_host
            - add_to_host_group
            - remove_from_host_group
            - link_to_template
            - unlink_from_template
            - enable_host
            - disable_host
            - set_host_inventory_mode
            description:
            - Type of operation.
          username:
            description:
            - User name used for authentication.
            - Required when `type=remote_command' and `command_type in [ssh, telnet]'.
        
        type: list

- pause_in_maintenance
        Whether to pause escalation during maintenance periods or not.
        Can be used when `event_source=trigger'.
        [Default: True]
        type: bool

- recovery_default_message
        Recovery message text.
        Works only with >= Zabbix 3.2
        [Default: (null)]

- recovery_default_subject
        Recovery message subject.
        Works only with >= Zabbix 3.2
        [Default: (null)]

- recovery_operations
        List of recovery operations.
        `Suboptions' are the same as for `operations'.
        Works only with >= Zabbix 3.2
        [Default: (null)]
        type: list

= server_url
        URL of Zabbix server, with protocol (http or https). `url' is an alias for `server_url'.
        (Aliases: url)
        type: str

- state
        State of the action.
        On `present', it will create an action if it does not exist or update the action if the associated data is different.
        On `absent', it will remove the action if it exists.
        (Choices: present, absent)[Default: present]

- status
        Status of the action.
        (Choices: enabled, disabled)[Default: enabled]

- timeout
        The timeout of API request (seconds).
        [Default: 10]
        type: int

- validate_certs
        If set to False, SSL certificates will not be validated. This should only be used on personally controlled sites using self-
        signed certificates.
        [Default: True]
        type: bool
        version_added: 2.5


NOTES:
      * Only Zabbix >= 3.0 is supported.


REQUIREMENTS:  zabbix-api

AUTHOR: Ruben Tsirunyan (@rubentsirunyan), Ruben Harutyunov (@K-DOT)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Trigger action with only one condition
- name: Deploy trigger action
  zabbix_action:
    server_url: "http://zabbix.example.com/zabbix/"
    login_user: Admin
    login_password: secret
    name: "Send alerts to Admin"
    event_source: 'trigger'
    state: present
    status: enabled
    conditions:
      - type: 'trigger_severity'
        operator: '>='
        value: 'Information'
    operations:
      - type: send_message
        subject: "Something bad is happening"
        message: "Come on, guys do something"
        media_type: 'Email'
        send_to_users:
          - 'Admin'

# Trigger action with multiple conditions and operations
- name: Deploy trigger action
  zabbix_action:
    server_url: "http://zabbix.example.com/zabbix/"
    login_user: Admin
    login_password: secret
    name: "Send alerts to Admin"
    event_source: 'trigger'
    state: present
    status: enabled
    conditions:
      - type: 'trigger_name'
        operator: 'like'
        value: 'Zabbix agent is unreachable'
        formulaid: A
      - type: 'trigger_severity'
        operator: '>='
        value: 'disaster'
        formulaid: B
    formula: A or B
    operations:
      - type: send_message
        media_type: 'Email'
        send_to_users:
          - 'Admin'
      - type: remote_command
        command: 'systemctl restart zabbix-agent'
        run_on_hosts:
          - 0

# Trigger action with recovery and acknowledge operations
- name: Deploy trigger action
  zabbix_action:
    server_url: "http://zabbix.example.com/zabbix/"
    login_user: Admin
    login_password: secret
    name: "Send alerts to Admin"
    event_source: 'trigger'
    state: present
    status: enabled
    conditions:
      - type: 'trigger_severity'
        operator: '>='
        value: 'Information'
    operations:
      - type: send_message
        subject: "Something bad is happening"
        message: "Come on, guys do something"
        media_type: 'Email'
        send_to_users:
          - 'Admin'
    recovery_operations:
      - type: send_message
        subject: "Host is down"
        message: "Come on, guys do something"
        media_type: 'Email'
        send_to_users:
          - 'Admin'
    acknowledge_operations:
      - type: send_message
        media_type: 'Email'
        send_to_users:
          - 'Admin'


RETURN VALUES:

msg:
    description: The result of the operation
    returned: success
    type: str
    sample: 'Action Deleted: Register webservers, ID: 0001'

