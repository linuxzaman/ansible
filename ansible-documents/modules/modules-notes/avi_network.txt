> AVI_NETWORK    (/usr/lib/python2.7/dist-packages/ansible/modules/network/avi/avi_network.py)

        This module is used to configure Network object more examples at https://github.com/avinetworks/devops

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_context
        Avi API context that includes current session ID and CSRF Token.
        This allows user to perform single login and re-use the session.
        [Default: (null)]
        type: dict
        version_added: 2.5

- api_version
        Avi API version of to use for Avi API and objects.
        [Default: 16.4.4]
        type: str

- avi_api_patch_op
        Patch operation to use when using avi_api_update_method as patch.
        (Choices: add, replace, delete)[Default: (null)]
        version_added: 2.5

- avi_api_update_method
        Default method for object update is HTTP PUT.
        Setting to patch will override that behavior to use HTTP PATCH.
        (Choices: put, patch)[Default: put]
        version_added: 2.5

- avi_credentials
        Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details.
        [Default: (null)]
        type: dict
        version_added: 2.5

- cloud_ref
        It is a reference to an object of type cloud.
        [Default: (null)]

- configured_subnets
        List of subnet.
        [Default: (null)]

- controller
        IP address or hostname of the controller. The default value is the environment variable `AVI_CONTROLLER'.
        [Default: ]
        type: str

- dhcp_enabled
        Select the ip address management scheme for this network.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- exclude_discovered_subnets
        When selected, excludes all discovered subnets in this network from consideration for virtual service placement.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

= name
        Name of the object.


- password
        Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'.
        [Default: ]
        type: str

- state
        The state that should be applied on the entity.
        (Choices: absent, present)[Default: present]

- synced_from_se
        Boolean flag to set synced_from_se.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- tenant
        Name of tenant used for all Avi API calls and context of object.
        [Default: admin]
        type: str

- tenant_ref
        It is a reference to an object of type tenant.
        [Default: (null)]

- tenant_uuid
        UUID of tenant used for all Avi API calls and context of object.
        [Default: ]
        type: str

- url
        Avi controller URL of the object.
        [Default: (null)]

- username
        Username used for accessing Avi controller. The default value is the environment variable `AVI_USERNAME'.
        [Default: ]
        type: str

- uuid
        Unique object identifier of the object.
        [Default: (null)]

- vcenter_dvs
        Boolean flag to set vcenter_dvs.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- vimgrnw_ref
        It is a reference to an object of type vimgrnwruntime.
        [Default: (null)]

- vrf_context_ref
        It is a reference to an object of type vrfcontext.
        [Default: (null)]


NOTES:
      * For more information on using Ansible to manage Avi Network devices see https://www.ansible.com/ansible-avi-networks.


REQUIREMENTS:  avisdk

AUTHOR: Gaurav Rastogi (@grastogi23) <grastogi@avinetworks.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Example to create Network object
  avi_network:
    controller: 10.10.25.42
    username: admin
    password: something
    state: present
    name: sample_network


RETURN VALUES:

obj:
    description: Network (api/network) object
    returned: success, changed
    type: dict

