> DNSMADEEASY    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/dnsmadeeasy.py)

        Manages DNS records via the v2 REST API of the DNS Made Easy service.  It handles records only; there is no manipulation of
        domains or monitor/account support yet. See: https://www.dnsmadeeasy.com/integration/restapi/

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= account_key
        Account API Key.


= account_secret
        Account Secret Key.


- autoFailover
        If true, fallback to the primary IP address is manual after a failover.
        If false, fallback to the primary IP address is automatic after a failover.
        [Default: no]
        type: bool
        version_added: 2.4
        

= contactList
        Name or id of the contact list that the monitor will notify.
        The default `''' means the Account Owner.
        [Default: ]
        version_added: 2.4
        

= domain
        Domain to work with. Can be the domain name (e.g. "mydomain.com") or the numeric ID of the domain in DNS Made Easy (e.g.
        "839989") for faster resolution


- failover
        If `yes', add or change the failover.  This is applicable only for A records.
        [Default: no]
        type: bool
        version_added: 2.4
        

- httpFile
        The file at the Fqdn that the monitor queries for HTTP or HTTPS.
        [Default: (null)]
        version_added: 2.4
        

- httpFqdn
        The fully qualified domain name used by the monitor.
        [Default: (null)]
        version_added: 2.4
        

- httpQueryString
        The string in the httpFile that the monitor queries for HTTP or HTTPS.
        [Default: (null)]
        version_added: 2.4
        

- ip1
        Primary IP address for the failover.
        Required if adding or changing the monitor or failover.
        [Default: (null)]
        version_added: 2.4
        

- ip2
        Secondary IP address for the failover.
        Required if adding or changing the failover.
        [Default: (null)]
        version_added: 2.4
        

- ip3
        Tertiary IP address for the failover.
        [Default: (null)]
        version_added: 2.4
        

- ip4
        Quaternary IP address for the failover.
        [Default: (null)]
        version_added: 2.4
        

- ip5
        Quinary IP address for the failover.
        [Default: (null)]
        version_added: 2.4
        

= maxEmails
        Number of emails sent to the contact list by the monitor.
        [Default: 1]
        version_added: 2.4
        

- monitor
        If `yes', add or change the monitor.  This is applicable only for A records.
        [Default: no]
        type: bool
        version_added: 2.4
        

= port
        Port used by the monitor.
        [Default: 80]
        version_added: 2.4
        

= protocol
        Protocol used by the monitor.
        (Choices: TCP, UDP, HTTP, DNS, SMTP, HTTPS)[Default: HTTP]
        version_added: 2.4
        

- record_name
        Record name to get/create/delete/update. If record_name is not specified; all records for the domain will be returned in "result"
        regardless of the state argument.
        [Default: (null)]

- record_ttl
        record's "Time to live".  Number of seconds the record remains cached in DNS servers.
        [Default: 1800]

- record_type
        Record type.
        (Choices: A, AAAA, CNAME, ANAME, HTTPRED, MX, NS, PTR, SRV, TXT)[Default: (null)]

- record_value
        Record value. HTTPRED: <redirection URL>, MX: <priority> <target name>, NS: <name server>, PTR: <target name>, SRV: <priority>
        <weight> <port> <target name>, TXT: <text value>"
        If record_value is not specified; no changes will be made and the record will be returned in 'result' (in other words, this
        module can be used to fetch a record's current id, type, and ttl)
        [Default: (null)]

- sandbox
        Decides if the sandbox API should be used. Otherwise (default) the production API of DNS Made Easy is used.
        [Default: no]
        type: bool
        version_added: 2.7
        

= sensitivity
        Number of checks the monitor performs before a failover occurs where Low = 8, Medium = 5,and High = 3.
        (Choices: Low, Medium, High)[Default: Medium]
        version_added: 2.4
        

= state
        whether the record should exist or not
        (Choices: present, absent)

= systemDescription
        Description used by the monitor.
        [Default: ]
        version_added: 2.4
        

- validate_certs
        If `no', SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed
        certificates.
        [Default: yes]
        type: bool
        version_added: 1.5.1


NOTES:
      * The DNS Made Easy service requires that machines interacting with the API have the proper time and timezone set. Be sure
        you are within a few seconds of actual time by using NTP.
      * This module returns record(s) and monitor(s) in the "result" element when 'state' is set to 'present'. These values can be
        be registered and used in your playbooks.
      * Only A records can have a monitor or failover.
      * To add failover, the 'failover', 'autoFailover', 'port', 'protocol', 'ip1', and 'ip2' options are required.
      * To add monitor, the 'monitor', 'port', 'protocol', 'maxEmails', 'systemDescription', and 'ip1' options are required.
      * The monitor and the failover will share 'port', 'protocol', and 'ip1' options.


REQUIREMENTS:  hashlib, hmac

AUTHOR: Brice Burgess (@briceburg)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# fetch my.com domain records
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
  register: response

# create / ensure the presence of a record
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1

# update the previously created record
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_value: 192.0.2.23

# fetch a specific record
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
  register: response

# delete a record / ensure it is absent
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    record_type: A
    state: absent
    record_name: test

# Add a failover
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    failover: True
    ip1: 127.0.0.2
    ip2: 127.0.0.3

- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    failover: True
    ip1: 127.0.0.2
    ip2: 127.0.0.3
    ip3: 127.0.0.4
    ip4: 127.0.0.5
    ip5: 127.0.0.6

# Add a monitor
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    monitor: yes
    ip1: 127.0.0.2
    protocol: HTTP  # default
    port: 80  # default
    maxEmails: 1
    systemDescription: Monitor Test A record
    contactList: my contact list

# Add a monitor with http options
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    monitor: yes
    ip1: 127.0.0.2
    protocol: HTTP  # default
    port: 80  # default
    maxEmails: 1
    systemDescription: Monitor Test A record
    contactList: 1174  # contact list id
    httpFqdn: http://my.com
    httpFile: example
    httpQueryString: some string

# Add a monitor and a failover
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    failover: True
    ip1: 127.0.0.2
    ip2: 127.0.0.3
    monitor: yes
    protocol: HTTPS
    port: 443
    maxEmails: 1
    systemDescription: monitoring my.com status
    contactList: emergencycontacts

# Remove a failover
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    failover: no

# Remove a monitor
- dnsmadeeasy:
    account_key: key
    account_secret: secret
    domain: my.com
    state: present
    record_name: test
    record_type: A
    record_value: 127.0.0.1
    monitor: no


