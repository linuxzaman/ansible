> OVIRT_PERMISSION_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_permission_facts.py)

        Retrieve facts about one or more oVirt/RHV permissions.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth
        Dictionary with values needed to create HTTP/HTTPS connection to oVirt:
        `username'[`required'] - The name of the user, something like `admin@internal'. Default value is set by `OVIRT_USERNAME'
        environment variable.
        `password'[`required'] - The password of the user. Default value is set by `OVIRT_PASSWORD' environment variable.
        `url'- A string containing the API URL of the server, usually something like ``https://server.example.com/ovirt-engine/api'`.
        Default value is set by `OVIRT_URL' environment variable. Either `url' or `hostname' is required.
        `hostname' - A string containing the hostname of the server, usually something like ``server.example.com'`. Default value is set
        by `OVIRT_HOSTNAME' environment variable. Either `url' or `hostname' is required.
        `token' - Token to be used instead of login with username/password. Default value is set by `OVIRT_TOKEN' environment variable.
        `insecure' - A boolean flag that indicates if the server TLS certificate and host name should be checked.
        `ca_file' - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using
        these CA certificates. If ``ca_file'` parameter is not set, system wide CA certificate store is used. Default value is set by
        `OVIRT_CAFILE' environment variable.
        `kerberos' - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
        `headers' - Dictionary of HTTP headers to be added to each API call.

        type: dict

= authz_name
        Authorization provider of the user/group. In previous versions of oVirt/RHV known as domain.
        (Aliases: domain)

- fetch_nested
        If `yes' the module will fetch additional data from the API.
        It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by
        specifying `nested_attributes'.
        [Default: (null)]
        type: bool
        version_added: 2.3

- group_name
        Name of the group to manage.
        [Default: (null)]

- namespace
        Namespace of the authorization provider, where user/group resides.
        [Default: (null)]

- nested_attributes
        Specifies list of the attributes which should be fetched from the API.
        This parameter apply only when `fetch_nested' is `true'.
        [Default: (null)]
        type: list
        version_added: 2.3

- user_name
        Username of the user to manage. In most LDAPs it's `uid' of the user, but in Active Directory you must specify `UPN' of the user.
        [Default: (null)]


NOTES:
      * This module creates a new top-level `ovirt_permissions' fact, which contains a list of permissions.
      * In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can
        create the following task: pip: name=ovirt-engine-sdk-python version=4.3.0


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Ondra Machacek (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Examples don't contain auth parameter for simplicity,
# look at ovirt_auth module to see how to reuse authentication:

# Gather facts about all permissions of user with username C(john):
- ovirt_permission_facts:
    user_name: john
    authz_name: example.com-authz
- debug:
    var: ovirt_permissions


RETURN VALUES:

ovirt_permissions:
    description: "List of dictionaries describing the permissions. Permission attributes are mapped to dictionary keys,
                  all permissions attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/permission."
    returned: On success.
    type: list

