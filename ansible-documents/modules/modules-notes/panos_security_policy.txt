> PANOS_SECURITY_POLICY    (/usr/lib/python2.7/dist-packages/ansible/modules/network/panos/_panos_security_policy.py)

        Security policies allow you to enforce rules and take action, and can be as general or specific as needed. The policy rules are
        compared against the incoming traffic in sequence, and because the first rule that matches the traffic is applied, the more
        specific rules must precede the more general ones.

DEPRECATED: 

	Reason: This module depended on outdated and old SDK. In 2.4 use M(panos_security_rule) instead.
	Will be removed in: Ansible 2.9
	Alternatives: Use M(panos_security_rule) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- action
        Action to apply once rules maches.
        [Default: allow]

- antivirus
        Name of the already defined antivirus profile.
        [Default: (null)]

- api_key
        API key that can be used instead of `username'/`password' credentials.
        [Default: (null)]

- application
        List of applications.
        [Default: any]

- commit
        Commit configuration if changed.
        [Default: True]

- data_filtering
        Name of the already defined data_filtering profile.
        [Default: (null)]

- description
        Description for the security rule.
        [Default: (null)]

- destination
        List of destination addresses.
        [Default: any]

- devicegroup
        Device groups are used for the Panorama interaction with Firewall(s). The group must exists on Panorama. If device group is not
        define we assume that we are contacting Firewall.
        [Default: (null)]

- file_blocking
        Name of the already defined file_blocking profile.
        [Default: (null)]

- from_zone
        List of source zones.
        [Default: any]

- group_profile
        Security profile group that is already defined in the system. This property supersedes antivirus, vulnerability, spyware,
        url_filtering, file_blocking, data_filtering, and wildfire_analysis properties.
        [Default: (null)]

- hip_profiles
        If you are using GlobalProtect with host information profile (HIP) enabled, you can also base the policy on information collected
        by GlobalProtect. For example, the user access level can be determined HIP that notifies the firewall about the user's local
        configuration.
        [Default: any]

= ip_address
        IP address (or hostname) of PAN-OS device being configured.


- log_end
        Whether to log at session end.
        [Default: True]

- log_start
        Whether to log at session start.
        [Default: (null)]

= password
        Password credentials to use for auth unless `api_key' is set.


= rule_name
        Name of the security rule.


- rule_type
        Type of security rule (version 6.1 of PanOS and above).
        [Default: universal]

- service
        List of services.
        [Default: application-default]

- source
        List of source addresses.
        [Default: any]

- source_user
        Use users to enforce policy for individual users or a group of users.
        [Default: any]

- spyware
        Name of the already defined spyware profile.
        [Default: (null)]

- tag
        Administrative tags that can be added to the rule. Note, tags must be already defined.
        [Default: (null)]

- to_zone
        List of destination zones.
        [Default: any]

- url_filtering
        Name of the already defined url_filtering profile.
        [Default: (null)]

- username
        Username credentials to use for auth unless `api_key' is set.
        [Default: admin]

- vulnerability
        Name of the already defined vulnerability profile.
        [Default: (null)]

- wildfire_analysis
        Name of the already defined wildfire_analysis profile.
        [Default: (null)]


NOTES:
      * Checkmode is not supported.
      * Panorama is supported


REQUIREMENTS:  pan-python can be obtained from PyPI https://pypi.org/project/pan-python/, pandevice can be obtained from PyPI
        https://pypi.org/project/pandevice/

AUTHOR: Ivan Bojer (@ivanbojer)
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

- name: permit ssh to 1.1.1.1
  panos_security_policy:
    ip_address: '10.5.172.91'
    username: 'admin'
    password: 'paloalto'
    rule_name: 'SSH permit'
    description: 'SSH rule test'
    from_zone: ['public']
    to_zone: ['private']
    source: ['any']
    source_user: ['any']
    destination: ['1.1.1.1']
    category: ['any']
    application: ['ssh']
    service: ['application-default']
    hip_profiles: ['any']
    action: 'allow'
    commit: false

- name: Allow HTTP multimedia only from CDNs
  panos_security_policy:
    ip_address: '10.5.172.91'
    username: 'admin'
    password: 'paloalto'
    rule_name: 'HTTP Multimedia'
    description: 'Allow HTTP multimedia only to host at 1.1.1.1'
    from_zone: ['public']
    to_zone: ['private']
    source: ['any']
    source_user: ['any']
    destination: ['1.1.1.1']
    category: ['content-delivery-networks']
    application: ['http-video', 'http-audio']
    service: ['service-http', 'service-https']
    hip_profiles: ['any']
    action: 'allow'
    commit: false

- name: more complex fictitious rule that uses profiles
  panos_security_policy:
    ip_address: '10.5.172.91'
    username: 'admin'
    password: 'paloalto'
    rule_name: 'Allow HTTP w profile'
    log_start: false
    log_end: true
    action: 'allow'
    antivirus: 'default'
    vulnerability: 'default'
    spyware: 'default'
    url_filtering: 'default'
    wildfire_analysis: 'default'
    commit: false

- name: deny all
  panos_security_policy:
    ip_address: '10.5.172.91'
    username: 'admin'
    password: 'paloalto'
    rule_name: 'DenyAll'
    log_start: true
    log_end: true
    action: 'deny'
    rule_type: 'interzone'
    commit: false

# permit ssh to 1.1.1.1 using panorama and pushing the configuration to firewalls
# that are defined in 'DeviceGroupA' device group
- name: permit ssh to 1.1.1.1 through Panorama
  panos_security_policy:
    ip_address: '10.5.172.92'
    password: 'paloalto'
    rule_name: 'SSH permit'
    description: 'SSH rule test'
    from_zone: ['public']
    to_zone: ['private']
    source: ['any']
    source_user: ['any']
    destination: ['1.1.1.1']
    category: ['any']
    application: ['ssh']
    service: ['application-default']
    hip_profiles: ['any']
    action: 'allow'
    devicegroup: 'DeviceGroupA'


RETURN VALUES:

# Default return values

