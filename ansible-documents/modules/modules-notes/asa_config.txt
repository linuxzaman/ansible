> ASA_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/asa/asa_config.py)

        Cisco ASA configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides
        an implementation for working with ASA configuration sections in a deterministic way.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before' this
        allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made. If the `backup_options' value is not given, the backup file is written to the `backup' folder in the playbook
        root directory. If the directory does not exist, it is created.
        [Default: no]
        type: bool

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `yes', if `backup' is set to `no' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exist it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
        
        type: dict
        version_added: 2.8

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the
        opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched
        against the system.
        [Default: (null)]

- config
        The `config' argument allows the playbook designer to supply the base configuration to be used to validate configuration changes
        necessary.  If this argument is provided, the module will not download the running-config from the remote node.
        [Default: (null)]

- context
        Specifies which context to target if you are running in the ASA in multiple context mode. Defaults to the current context you
        login to.
        [Default: (null)]
        type: str

- defaults
        This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the
        module will get the current config by issuing the command `show running-config all'.
        [Default: no]
        type: bool

- lines
        The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in
        the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the
        device config parser.
        (Aliases: commands)[Default: (null)]

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is
        set to `line', commands are matched line by line.  If match is set to `strict', command lines are matched with respect to
        position.  If match is set to `exact', command lines must be an equal match.  Finally, if match is set to `none', the module will
        not attempt to compare the source configuration with the running configuration on the remote device.
        (Choices: line, strict, exact, none)[Default: line]

- parents
        The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the
        parents argument is omitted, the commands are checked against the set of top level or global commands.
        [Default: (null)]

- passwords
        This argument specifies to include passwords in the config when retrieving the running-config from the remote device.  This
        includes passwords related to VPN endpoints.  This argument is mutually exclusive with `defaults'.
        [Default: no]
        type: bool

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies idle timeout in seconds for the connection, in seconds. Useful if
              the console freezes before continuing. For example when saving configurations.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        

- replace
        Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to `line' then the
        modified lines are pushed to the device in configuration mode.  If the replace argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct
        (Choices: line, block)[Default: line]

- save
        The `save' argument instructs the module to save the running- config to the startup-config at the conclusion of the module
        running.  If check mode is specified, this argument is ignored.
        [Default: no]
        type: bool

- src
        Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source
        file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This
        argument is mutually exclusive with `lines', `parents'.
        [Default: (null)]


NOTES:
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`


AUTHOR: Peter Sprygada (@privateip), Patrick Ogenstad (@ogenstad)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Note: examples below use the following provider dict to handle
#       transport and authentication to the node.
---
vars:
  cli:
    host: "{{ inventory_hostname }}"
    username: cisco
    password: cisco
    authorize: yes
    auth_pass: cisco

---
- asa_config:
    lines:
      - network-object host 10.80.30.18
      - network-object host 10.80.30.19
      - network-object host 10.80.30.20
    parents: ['object-group network OG-MONITORED-SERVERS']
    provider: "{{ cli }}"

- asa_config:
    host: "{{ inventory_hostname }}"
    lines:
      - message-length maximum client auto
      - message-length maximum 512
    match: line
    parents: ['policy-map type inspect dns PM-DNS', 'parameters']
    authorize: yes
    auth_pass: cisco
    username: admin
    password: cisco
    context: ansible

- asa_config:
    lines:
      - ikev1 pre-shared-key MyS3cretVPNK3y
    parents: tunnel-group 1.1.1.1 ipsec-attributes
    passwords: yes
    provider: "{{ cli }}"

- name: attach ASA acl on interface vlan13/nameif cloud13
  asa_config:
    lines:
      - access-group cloud-acl_access_in in interface cloud13
    provider: "{{ cli }}"

- name: configure ASA (>=9.2) default BGP
  asa_config:
    lines:
      - bgp log-neighbor-changes
      - bgp bestpath compare-routerid
    provider: "{{ cli }}"
    parents:
      - router bgp 65002
  register: bgp
  when: bgp_default_config is defined

- name: configure ASA (>=9.2) BGP neighbor in default/single context mode
  asa_config:
    lines:
      - "bgp router-id {{ bgp_router_id }}"
      - "neighbor {{ bgp_neighbor_ip }} remote-as {{ bgp_neighbor_as }}"
      - "neighbor {{ bgp_neighbor_ip }} description {{ bgp_neighbor_name }}"
    provider: "{{ cli }}"
    parents:
      - router bgp 65002
      - address-family ipv4 unicast
  register: bgp
  when: bgp_neighbor_as is defined

- name: configure ASA interface with standby
  asa_config:
    lines:
      - description my cloud interface
      - nameif cloud13
      - security-level 50
      - ip address 192.168.13.1 255.255.255.0 standby 192.168.13.2
    provider: "{{ cli }}"
    parents: ["interface Vlan13"]
  register: interface

- name: Show changes to interface from task above
  debug:
    var: interface

- name: configurable backup path
  asa_config:
    lines:
      - access-group cloud-acl_access_in in interface cloud13
    provider: "{{ cli }}"
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user


RETURN VALUES:

updates:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['...', '...']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/asa_config.2016-07-16@22:28:34

