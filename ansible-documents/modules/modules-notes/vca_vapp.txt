> VCA_VAPP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vca_vapp.py)

        This module will actively managed vCloud Air vApp instances.  Instances can be created and deleted as well as both deployed and
        undeployed.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_version
        The api version to be used with the vca
        [Default: 5.7]
        type: str

- gateway_name
        The name of the gateway of the vdc where the rule should be added.
        [Default: gateway]
        type: str

- host
        The authentication host to be used when service type  is vcd.
        [Default: (null)]
        type: str

- instance_id
        The instance id in a vchs environment to be used for creating the vapp
        [Default: (null)]
        type: str

- network_mode
        Configures the mode of the network connection.
        (Choices: pool, dhcp, static)[Default: pool]

- network_name
        The name of the network that should be attached to the virtual machine in the vApp.  The virtual network specified must already
        be created in the vCloud Air VDC.  If the `state' is not 'absent' then the `network_name' argument must be provided.
        [Default: (null)]

- operation
        Specifies an operation to be performed on the vApp.
        (Choices: noop, poweron, poweroff, suspend, shutdown, reboot, reset)[Default: noop]

- org
        The org to login to for creating vapp, mostly set when the service_type is vdc.
        [Default: (null)]
        type: str

- password
        The vCloud Air password to use during authentication
        (Aliases: pass, passwd)[Default: (null)]
        type: str

- service_type
        The type of service we are authenticating against
        (Choices: vca, vchs, vcd)[Default: vca]
        type: str

- state
        Configures the state of the vApp.
        (Choices: present, absent, deployed, undeployed)[Default: present]
        type: str

- template_name
        The name of the vApp template to use to create the vApp instance.  If the `state' is not `absent` then the `template_name' value
        must be provided.  The `template_name' must be previously uploaded to the catalog specified by `catalog_name'
        [Default: (null)]

- username
        The vCloud Air username to use during authentication
        (Aliases: user)[Default: (null)]
        type: str

- validate_certs
        If the certificates of the authentication is to be verified.
        (Aliases: verify_certs)[Default: True]
        type: bool

= vapp_name
        The name of the vCloud Air vApp instance


- vdc_name
        The name of the virtual data center (VDC) where the vm should be created or contains the vAPP.
        [Default: (null)]
        type: str

- vm_cpus
        The number of vCPUs to configure for the VM in the vApp.   If the `vm_name' argument is provided, then this becomes a per VM
        setting otherwise it is applied to all VMs in the vApp.
        [Default: (null)]

- vm_memory
        The amount of memory in MB to allocate to VMs in the vApp.  If the `vm_name' argument is provided, then this becomes a per VM
        setting otherise it is applied to all VMs in the vApp.
        [Default: (null)]

- vm_name
        The name of the virtual machine instance in the vApp to manage.
        [Default: (null)]


NOTES:
      * VMware sold their vCloud Air service in Q2 2017.
      * VMware made significant changes to the pyvcloud interface around this time.  The `vca_vapp' module relies on now deprecated
        code.
      * Mileage with `vca_vapp' may vary as vCloud Director APIs advance.
      * A viable alternative maybe https://github.com/vmware/ansible-module-vcloud-director


REQUIREMENTS:  pyvcloud <= 18.2.2

AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Creates a new vApp in a VCA instance
  vca_vapp:
    vapp_name: tower
    state: present
    template_name: 'Ubuntu Server 12.04 LTS (amd64 20150127)'
    vdc_name: VDC1
    instance_id: '<your instance id here>'
    username: '<your username here>'
    password: '<your password here>'
  delegate_to: localhost


