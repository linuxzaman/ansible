> RAX_MON_NOTIFICATION_PLAN    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/rackspace/rax_mon_notification_plan.py)

        Create or delete a Rackspace Cloud Monitoring notification plan by associating existing rax_mon_notifications with severity
        levels. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> *rax_mon_notification_plan*
        -> rax_mon_alarm

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Rackspace API key, overrides `credentials'.
        (Aliases: password)[Default: (null)]

- auth_endpoint
        The URI of the authentication service.
        [Default: https://identity.api.rackspacecloud.com/v2.0/]
        version_added: 1.5

- credentials
        File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided.
        (Aliases: creds_file)[Default: (null)]

- critical_state
        Notification list to use when the alarm state is CRITICAL. Must be an array of valid rax_mon_notification ids.
        [Default: (null)]

- env
        Environment as configured in `~/.pyrax.cfg', see https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-
        configuration.
        [Default: (null)]
        version_added: 1.5

- identity_type
        Authentication mechanism to use, such as rackspace or keystone.
        [Default: rackspace]
        version_added: 1.5

= label
        Defines a friendly name for this notification plan. String between 1 and 255 characters long.


- ok_state
        Notification list to use when the alarm state is OK. Must be an array of valid rax_mon_notification ids.
        [Default: (null)]

- region
        Region to create an instance in.
        [Default: DFW]

- state
        Ensure that the notification plan with this `label' exists or does not exist.
        (Choices: present, absent)[Default: (null)]

- tenant_id
        The tenant ID used for authentication.
        [Default: (null)]
        version_added: 1.5

- tenant_name
        The tenant name used for authentication.
        [Default: (null)]
        version_added: 1.5

- username
        Rackspace username, overrides `credentials'.
        [Default: (null)]

- validate_certs
        Whether or not to require SSL validation of API endpoints.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool
        version_added: 1.5

- warning_state
        Notification list to use when the alarm state is WARNING. Must be an array of valid rax_mon_notification ids.
        [Default: (null)]


NOTES:
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)


REQUIREMENTS:  python >= 2.6, pyrax

AUTHOR: Ash Wilson (@smashwilson)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Example notification plan
  gather_facts: False
  hosts: local
  connection: local
  tasks:
  - name: Establish who gets called when.
    rax_mon_notification_plan:
      credentials: ~/.rax_pub
      state: present
      label: defcon1
      critical_state:
      - "{{ everyone['notification']['id'] }}"
      warning_state:
      - "{{ opsfloor['notification']['id'] }}"
    register: defcon1


