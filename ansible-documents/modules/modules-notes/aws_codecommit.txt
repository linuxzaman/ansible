> AWS_CODECOMMIT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/aws_codecommit.py)

        Supports creation and deletion of CodeCommit repositories. See https://aws.amazon.com/codecommit/ for more information about
        CodeCommit.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- comment
        description or comment of repository.
        [Default: (null)]

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

= name
        name of repository.


- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

= state
        Specifies the state of repository.
        (Choices: present, absent)

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5


NOTES:
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, boto3, botocore, python >= 2.6

AUTHOR: Shuang Wang (@ptux)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create a new repository
- aws_codecommit:
    name: repo
    state: present

# Delete a repository
- aws_codecommit:
    name: repo
    state: absent


RETURN VALUES:

repository_metadata:
  description: "Information about the repository."
  returned: always
  type: complex
  contains:
    account_id:
      description: "The ID of the AWS account associated with the repository."
      returned: when state is present
      type: str
      sample: "268342293637"
    arn:
      description: "The Amazon Resource Name (ARN) of the repository."
      returned: when state is present
      type: str
      sample: "arn:aws:codecommit:ap-northeast-1:268342293637:username"
    clone_url_http:
      description: "The URL to use for cloning the repository over HTTPS."
      returned: when state is present
      type: str
      sample: "https://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/reponame"
    clone_url_ssh:
      description: "The URL to use for cloning the repository over SSH."
      returned: when state is present
      type: str
      sample: "ssh://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/reponame"
    creation_date:
      description: "The date and time the repository was created, in timestamp format."
      returned: when state is present
      type: datetime
      sample: "2018-10-16T13:21:41.261000+09:00"
    last_modified_date:
      description: "The date and time the repository was last modified, in timestamp format."
      returned: when state is present
      type: str
      sample: "2018-10-16T13:21:41.261000+09:00"
    repository_description:
      description: "A comment or description about the repository."
      returned: when state is present
      type: str
      sample: "test from ptux"
    repository_id:
      description: "The ID of the repository that was created or deleted"
      returned: always
      type: str
      sample: "e62a5c54-i879-497b-b62f-9f99e4ebfk8e"
    repository_name:
      description: "The repository's name."
      returned: when state is present
      type: str
      sample: "reponame"

response_metadata:
  description: "Information about the response."
  returned: always
  type: complex
  contains:
    http_headers:
      description: "http headers of http response"
      returned: always
      type: complex
    http_status_code:
      description: "http status code of http response"
      returned: always
      type: str
      sample: "200"
    request_id:
      description: "http request id"
      returned: always
      type: str
      sample: "fb49cfca-d0fa-11e8-85cb-b3cc4b5045ef"
    retry_attempts:
      description: "numbers of retry attempts"
      returned: always
      type: str
      sample: "0"

