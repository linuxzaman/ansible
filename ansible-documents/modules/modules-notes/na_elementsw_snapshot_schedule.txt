> NA_ELEMENTSW_SNAPSHOT_SCHEDULE    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/netapp/na_elementsw_snapshot_schedule.py)

        Create, destroy, or update accounts on ElementSW

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- account_id
        Account ID for the owner of this volume.
        It accepts either account_name or account_id
        if account_id is digit, it will consider as account_id
        If account_id is string, it will consider as account_name
        [Default: (null)]

- days_of_month_hours
        Time specified in hours
        [Default: 0]

- days_of_month_minutes
        Time specified in minutes.
        [Default: 0]

- days_of_month_monthdays
        List of days of the month (1-31)
        [Default: (null)]

- days_of_week_hours
        Time specified in hours
        [Default: 0]

- days_of_week_minutes
        Time specified in minutes.
        [Default: 0]

- days_of_week_weekdays
        List of days of the week (Sunday to Saturday)
        [Default: (null)]

= hostname
        The hostname or IP address of the SolidFire cluster.


- name
        Name for the snapshot schedule.
        It accepts either schedule_id or schedule_name
        if name is digit, it will consider as schedule_id
        If name is string, it will consider as schedule_name
        [Default: (null)]

= password
        Element SW access account password
        (Aliases: pass)

- paused
        Pause / Resume a schedule.
        [Default: (null)]
        type: bool

- recurring
        Should the schedule recur?
        [Default: (null)]
        type: bool

- retention
        Retention period for the snapshot.
        Format is 'HH:mm:ss'.
        [Default: (null)]

- schedule_type
        Schedule type for creating schedule.
        (Choices: DaysOfWeekFrequency, DaysOfMonthFrequency, TimeIntervalFrequency)[Default: (null)]

- snapshot_name
        Name for the created snapshots.
        [Default: (null)]

- starting_date
        Starting date for the schedule.
        Required when `state=present'.
        Format: `2016-12-01T00:00:00Z'
        [Default: (null)]

= state
        Whether the specified schedule should exist or not.
        (Choices: present, absent)

- time_interval_days
        Time interval in days.
        [Default: 1]

- time_interval_hours
        Time interval in hours.
        [Default: 0]

- time_interval_minutes
        Time interval in minutes.
        [Default: 0]

= username
        Element SW access account user-name
        (Aliases: user)

- volumes
        Volume IDs that you want to set the snapshot schedule for.
        It accepts both volume_name and volume_id
        [Default: (null)]


NOTES:
      * The modules prefixed with na\\_elementsw are built to support the SolidFire storage platform.


REQUIREMENTS:  The modules were developed with SolidFire 10.1, solidfire-sdk-python (1.1.0.92) or greater. Install using 'pip install
        solidfire-sdk-python'

AUTHOR: NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create Snapshot schedule
     na_elementsw_snapshot_schedule:
       hostname: "{{ elementsw_hostname }}"
       username: "{{ elementsw_username }}"
       password: "{{ elementsw_password }}"
       state: present
       name: Schedule_A
       schedule_type: TimeIntervalFrequency
       time_interval_days: 1
       starting_date: '2016-12-01T00:00:00Z'
       volumes:
       - 7
       - test
       account_id: 1

   - name: Update Snapshot schedule
     na_elementsw_snapshot_schedule:
       hostname: "{{ elementsw_hostname }}"
       username: "{{ elementsw_username }}"
       password: "{{ elementsw_password }}"
       state: present
       name: Schedule_A
       schedule_type: TimeIntervalFrequency
       time_interval_days: 1
       starting_date: '2016-12-01T00:00:00Z'
       volumes:
       - 8
       - test1
       account_id: 1

   - name: Delete Snapshot schedule
     na_elementsw_snapshot_schedule:
       hostname: "{{ elementsw_hostname }}"
       username: "{{ elementsw_username }}"
       password: "{{ elementsw_password }}"
       state: absent
       name: 6


RETURN VALUES:


schedule_id:
    description: Schedule ID of the newly created schedule
    returned: success
    type: str

