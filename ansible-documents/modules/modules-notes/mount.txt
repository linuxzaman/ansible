> MOUNT    (/usr/lib/python2.7/dist-packages/ansible/modules/system/mount.py)

        This module controls active and configured mount points in `/etc/fstab'.

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- backup
        Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it
        incorrectly.
        [Default: False]
        type: bool
        version_added: 2.5

- boot
        Determines if the filesystem should be mounted on boot.
        Only applies to Solaris systems.
        [Default: True]
        type: bool
        version_added: 2.2

- dump
        Dump (see fstab(5)).
        Note that if set to `null' and `state' set to `present', it will cease to work and duplicate entries will be made with subsequent
        runs.
        Has no effect on Solaris systems.
        [Default: 0]
        type: str

- fstab
        File to use instead of `/etc/fstab'.
        You should npt use this option unless you really know what you are doing.
        This might be useful if you need to configure mountpoints in a chroot environment.
        OpenBSD does not allow specifying alternate fstab files with mount so do not use this on OpenBSD with any state that operates on
        the live filesystem.
        This parameter defaults to /etc/fstab or /etc/vfstab on Solaris.
        [Default: (null)]
        type: str

- fstype
        Filesystem type.
        Required when `state' is `present' or `mounted'.
        [Default: (null)]
        type: str

- opts
        Mount options (see fstab(5), or vfstab(4) on Solaris).
        [Default: (null)]
        type: str

- passno
        Passno (see fstab(5)).
        Note that if set to `null' and `state' set to `present', it will cease to work and duplicate entries will be made with subsequent
        runs.
        Deprecated on Solaris systems.
        [Default: 0]
        type: str

= path
        Path to the mount point (e.g. `/mnt/files').
        Before Ansible 2.3 this option was only usable as `dest', `destfile' and `name'.
        (Aliases: name)
        type: path

- src
        Device to be mounted on `path'.
        Required when `state' set to `present' or `mounted'.
        [Default: (null)]
        type: path

= state
        If `mounted', the device will be actively mounted and appropriately configured in `fstab'. If the mount point is not present, the
        mount point will be created.
        If `unmounted', the device will be unmounted without changing `fstab'.
        `present' only specifies that the device is to be configured in `fstab' and does not trigger or require a mount.
        `absent' specifies that the device mount's entry will be removed from `fstab' and will also unmount the device and remove the
        mount point.
        (Choices: absent, mounted, present, unmounted)
        type: str


NOTES:
      * As of Ansible 2.3, the `name' option has been changed to `path' as default, but `name' still works as well.


AUTHOR: Ansible Core Team, Seth Vidal (@skvidal)
        METADATA:
          status:
          - preview
          supported_by: core
        

EXAMPLES:

# Before 2.3, option 'name' was used instead of 'path'
- name: Mount DVD read-only
  mount:
    path: /mnt/dvd
    src: /dev/sr0
    fstype: iso9660
    opts: ro,noauto
    state: present

- name: Mount up device by label
  mount:
    path: /srv/disk
    src: LABEL=SOME_LABEL
    fstype: ext4
    state: present

- name: Mount up device by UUID
  mount:
    path: /home
    src: UUID=b3e48f45-f933-4c8e-a700-22a159ec9077
    fstype: xfs
    opts: noatime
    state: present

- name: Unmount a mounted volume
  mount:
    path: /tmp/mnt-pnt
    state: unmounted

- name: Mount and bind a volume
  mount:
    path: /system/new_volume/boot
    src: /boot
    opts: bind
    state: mounted
    fstype: none


