> BIGIP_POOL_MEMBER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_pool_member.py)

        Manages F5 BIG-IP LTM pool members via iControl SOAP API.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- address
        IP address of the pool member. This can be either IPv4 or IPv6. When creating a new pool member, one of either `address' or
        `fqdn' must be provided. This parameter cannot be updated after it is set.
        (Aliases: ip, host)[Default: (null)]
        type: str
        version_added: 2.2
        

- aggregate
        List of pool member definitions to be created, modified or removed.
        (Aliases: members)[Default: (null)]
        type: list
        version_added: 2.8
        

- availability_requirements
        Specifies, if you activate more than one health monitor, the number of health monitors that must receive successful responses in
        order for the link to be considered available.
        Specifying an empty string will remove the monitors and revert to inheriting from pool (default).
        Specifying `none' value will remove any health monitoring from the member completely.
        [Default: (null)]
        suboptions:
          at_least:
            description:
            - Specifies the minimum number of active health monitors that must be successful
              before the link is considered up.
            - This parameter is only relevant when a `type' of `at_least' is used.
            - This parameter will be ignored if a type of `all' is used.
            type: int
          type:
            choices:
            - all
            - at_least
            description:
            - Monitor rule type when `monitors' is specified.
            - When creating a new pool, if this value is not specified, the default of 'all'
              will be used.
            type: str
        
        type: dict
        version_added: 2.8
        

- connection_limit
        Pool member connection limit. Setting this to 0 disables the limit.
        [Default: (null)]
        type: int

- description
        Pool member description.
        [Default: (null)]
        type: str

- fqdn
        FQDN name of the pool member. This can be any name that is a valid RFC 1123 DNS name. Therefore, the only characters that can be
        used are "A" to "Z", "a" to "z", "0" to "9", the hyphen ("-") and the period (".").
        FQDN names must include at lease one period; delineating the host from the domain. ex. `host.domain'.
        FQDN names must end with a letter or a number.
        When creating a new pool member, one of either `address' or `fqdn' must be provided. This parameter cannot be updated after it is
        set.
        (Aliases: hostname)[Default: (null)]
        type: str
        version_added: 2.6
        

- fqdn_auto_populate
        Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS
        query for a node defined by an FQDN.
        When `yes', the system generates an ephemeral node for each IP address returned in response to a DNS query for the FQDN of the
        node. Additionally, when a DNS response indicates the IP address of an ephemeral node no longer exists, the system deletes the
        ephemeral node.
        When `no', the system resolves a DNS query for the FQDN of the node with the single IP address associated with the FQDN.
        When creating a new pool member, the default for this parameter is `yes'.
        Once set this parameter cannot be changed afterwards.
        This parameter is ignored when `reuse_nodes' is `yes'.
        [Default: (null)]
        type: bool
        version_added: 2.6
        

- ip_encapsulation
        Specifies the IP encapsulation using either IPIP (IP encapsulation within IP, RFC 2003) or GRE (Generic Router Encapsulation, RFC
        2784) on outbound packets (from BIG-IP system to server-pool member).
        When `none', disables IP encapsulation.
        When `inherit', inherits IP encapsulation setting from the member's pool.
        When any other value, Options are None, Inherit from Pool, and Member Specific.
        [Default: (null)]
        type: str
        version_added: 2.8
        

- monitors
        Specifies the health monitors that the system currently uses to monitor this resource.
        [Default: (null)]
        type: list
        version_added: 2.8
        

- name
        Name of the node to create, or re-use, when creating a new pool member.
        This parameter is optional and, if not specified, a node name will be created automatically from either the specified `address'
        or `fqdn'.
        The `enabled' state is an alias of `present'.
        [Default: (null)]
        type: str
        version_added: 2.6
        

- partition
        Partition to manage resources on.
        [Default: Common]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

= pool
        Pool name. This pool must exist.

        type: str

= port
        Pool member port.
        This value cannot be changed after it has been set.

        type: int

- preserve_node
        When state is `absent' attempts to remove the node that the pool member references.
        The node will not be removed if it is still referenced by other pool members. If this happens, the module will not raise an
        error.
        Setting this to `yes' disables this behavior.
        [Default: (null)]
        type: bool
        version_added: 2.1
        

- priority_group
        Specifies a number representing the priority group for the pool member.
        When adding a new member, the default is 0, meaning that the member has no priority.
        To specify a priority, you must activate priority group usage when you create a new pool or when adding or removing pool members.
        When activated, the system load balances traffic according to the priority group number assigned to the pool member.
        The higher the number, the higher the priority, so a member with a priority of 3 has higher priority than a member with a
        priority of 1.
        [Default: (null)]
        type: int
        version_added: 2.5
        

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

- rate_limit
        Pool member rate limit (connections-per-second). Setting this to 0 disables the limit.
        [Default: (null)]
        type: int

- ratio
        Pool member ratio weight. Valid values range from 1 through 100. New pool members -- unless overridden with this value -- default
        to 1.
        [Default: (null)]
        type: int

- replace_all_with
        Remove members not defined in the `aggregate' parameter.
        This operation is all or none, meaning that it will stop if there are some pool members that cannot be removed.
        (Aliases: purge)[Default: False]
        type: bool
        version_added: 2.8
        

- reuse_nodes
        Reuses node definitions if requested.
        [Default: True]
        type: bool
        version_added: 2.6
        

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

= state
        Pool member state.
        (Choices: present, absent, enabled, disabled, forced_offline)[Default: present]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Add pool member
  bigip_pool_member:
    pool: my-pool
    partition: Common
    host: "{{ ansible_default_ipv4['address'] }}"
    port: 80
    description: web server
    connection_limit: 100
    rate_limit: 50
    ratio: 2
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Modify pool member ratio and description
  bigip_pool_member:
    pool: my-pool
    partition: Common
    host: "{{ ansible_default_ipv4['address'] }}"
    port: 80
    ratio: 1
    description: nginx server
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Remove pool member from pool
  bigip_pool_member:
    state: absent
    pool: my-pool
    partition: Common
    host: "{{ ansible_default_ipv4['address'] }}"
    port: 80
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Force pool member offline
  bigip_pool_member:
    state: forced_offline
    pool: my-pool
    partition: Common
    host: "{{ ansible_default_ipv4['address'] }}"
    port: 80
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Create members with priority groups
  bigip_pool_member:
    pool: my-pool
    partition: Common
    host: "{{ item.address }}"
    name: "{{ item.name }}"
    priority_group: "{{ item.priority_group }}"
    port: 80
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost
  loop:
    - address: 1.1.1.1
      name: web1
      priority_group: 4
    - address: 2.2.2.2
      name: web2
      priority_group: 3
    - address: 3.3.3.3
      name: web3
      priority_group: 2
    - address: 4.4.4.4
      name: web4
      priority_group: 1

- name: Add pool members aggregate
  bigip_pool_member:
    pool: my-pool
    aggregate:
      - host: 192.168.1.1
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
      - host: 192.168.1.2
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
      - host: 192.168.1.3
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Add pool members aggregate, remove non aggregates
  bigip_pool_member:
    pool: my-pool
    aggregate:
      - host: 192.168.1.1
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
      - host: 192.168.1.2
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
      - host: 192.168.1.3
        partition: Common
        port: 80
        description: web server
        connection_limit: 100
        rate_limit: 50
        ratio: 2
    replace_all_with: yes
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost


RETURN VALUES:

rate_limit:
  description: The new rate limit, in connections per second, of the pool member.
  returned: changed
  type: int
  sample: 100
connection_limit:
  description: The new connection limit of the pool member
  returned: changed
  type: int
  sample: 1000
description:
  description: The new description of pool member.
  returned: changed
  type: str
  sample: My pool member
ratio:
  description: The new pool member ratio weight.
  returned: changed
  type: int
  sample: 50
priority_group:
  description: The new priority group.
  returned: changed
  type: int
  sample: 3
fqdn_auto_populate:
  description: Whether FQDN auto population was set on the member or not.
  returned: changed
  type: bool
  sample: True
fqdn:
  description: The FQDN of the pool member.
  returned: changed
  type: str
  sample: foo.bar.com
address:
  description: The address of the pool member.
  returned: changed
  type: str
  sample: 1.2.3.4
monitors:
  description: The new list of monitors for the resource.
  returned: changed
  type: list
  sample: ['/Common/monitor1', '/Common/monitor2']
replace_all_with:
  description: Purges all non-aggregate pool members from device
  returned: changed
  type: bool
  sample: yes

