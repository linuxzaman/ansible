> CNOS_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cnos/cnos_user.py)

        This module provides declarative management of the local usernames configured on Lenovo CNOS devices.  It allows playbooks to
        manage either individual usernames or the collection of usernames in the current running config.  It also supports purging
        usernames from the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aggregate
        The set of username objects to be configured on the remote Lenovo CNOS device.  The list entries can either be the username or a
        hash of username and properties.  This argument is mutually exclusive with the `name' argument.
        (Aliases: users, collection)[Default: (null)]

- configured_password
        The password to be configured on the network device. The password needs to be provided in cleartext and it will be encrypted on
        the device. Please note that this option is not same as `provider password'.
        [Default: (null)]

- name
        The username to be configured on the remote Lenovo CNOS device.  This argument accepts a string value and is mutually exclusive
        with the `aggregate' argument.
        [Default: (null)]

- purge
        The `purge' argument instructs the module to consider the resource definition absolute.  It will remove any previously configured
        usernames on the device with the exception of the `admin` user which cannot be deleted per cnos constraints.
        [Default: no]
        type: bool

- role
        The `role' argument configures the role for the username in the device running configuration.  The argument accepts a string
        value defining the role name.  This argument does not check if the role has been configured on the device.
        (Aliases: roles)[Default: (null)]

- sshkey
        The `sshkey' argument defines the SSH public key to configure for the username.  This argument accepts a valid SSH key value.
        [Default: (null)]

- state
        The `state' argument configures the state of the username definition as it relates to the device operational configuration.  When
        set to `present', the username(s) should be configured in the device active configuration and when set to `absent' the
        username(s) should not be in the device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]


AUTHOR: Anil Kumar Muraleedharan (@amuraleedhar)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a new user
  cnos_user:
    name: ansible
    sshkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    state: present

- name: remove all users except admin
  cnos_user:
    purge: yes

- name: set multiple users role
  aggregate:
    - name: netop
    - name: netend
  role: network-operator
  state: present


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - name ansible
    - name ansible password password
start:
  description: The time the job started
  returned: always
  type: str
  sample: "2016-11-16 10:38:15.126146"
end:
  description: The time the job ended
  returned: always
  type: str
  sample: "2016-11-16 10:38:25.595612"
delta:
  description: The time elapsed to perform all operations
  returned: always
  type: str
  sample: "0:00:10.469466"

