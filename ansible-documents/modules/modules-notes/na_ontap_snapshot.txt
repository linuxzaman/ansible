> NA_ONTAP_SNAPSHOT    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/netapp/na_ontap_snapshot.py)

        Create/Modify/Delete ONTAP snapshots

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- async_bool
        If true, the snapshot is to be created asynchronously.
        [Default: (null)]
        type: bool

- comment
        A human readable comment attached with the snapshot. The size of the comment can be at most 255 characters.
        [Default: (null)]

- from_name
        Name of the existing snapshot to be renamed to.
        [Default: (null)]
        version_added: 2.8

= hostname
        The hostname or IP address of the ONTAP instance.

        type: str

- http_port
        Override the default port (80 or 443) with this port
        [Default: (null)]
        type: int

- https
        Enable and disable https
        [Default: False]
        type: bool

- ignore_owners
        if this field is true, snapshot will be deleted even if some other processes are accessing it.
        [Default: (null)]
        type: bool

- ontapi
        The ontap api version to use
        [Default: (null)]
        type: int

= password
        Password for the specified user.
        (Aliases: pass)
        type: str

- snapmirror_label
        A human readable SnapMirror Label attached with the snapshot. Size of the label can be at most 31 characters.
        [Default: (null)]

= snapshot
        Name of the snapshot to be managed. The maximum string length is 256 characters.


- snapshot_instance_uuid
        The 128 bit unique snapshot identifier expressed in the form of UUID.
        [Default: (null)]

- state
        If you want to create/modify a snapshot, or delete it.
        (Choices: present, absent)[Default: present]

= username
        This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required. For more
        information, please read the documentation https://mysupport.netapp.com/NOW/download/software/nmsdk/9.4/.
        (Aliases: user)
        type: str

- validate_certs
        If set to `no', the SSL certificates will not be validated.
        This should only set to `False' used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool

= volume
        Name of the volume on which the snapshot is to be created.


- vserver
        The Vserver name
        [Default: (null)]


NOTES:
      * The modules prefixed with na\\_ontap are built to support the ONTAP storage platform.


REQUIREMENTS:  A physical or virtual clustered Data ONTAP system. The modules support Data ONTAP 9.1 and onward, Ansible 2.6, Python2
        netapp-lib (2017.10.30) or later. Install using 'pip install netapp-lib', Python3 netapp-lib (2018.11.13) or
        later. Install using 'pip install netapp-lib', To enable http on the cluster you must run the following commands
        'set -privilege advanced;' 'system services web modify -http-enabled true;'

AUTHOR: NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create SnapShot
      tags:
        - create
      na_ontap_snapshot:
        state: present
        snapshot: "{{ snapshot name }}"
        volume: "{{ vol name }}"
        comment: "i am a comment"
        vserver: "{{ vserver name }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"
        hostname: "{{ netapp hostname }}"
    - name: delete SnapShot
      tags:
        - delete
      na_ontap_snapshot:
        state: absent
        snapshot: "{{ snapshot name }}"
        volume: "{{ vol name }}"
        vserver: "{{ vserver name }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"
        hostname: "{{ netapp hostname }}"
    - name: modify SnapShot
      tags:
        - modify
      na_ontap_snapshot:
        state: present
        snapshot: "{{ snapshot name }}"
        comment: "New comments are great"
        volume: "{{ vol name }}"
        vserver: "{{ vserver name }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"
        hostname: "{{ netapp hostname }}"


RETURN VALUES:


