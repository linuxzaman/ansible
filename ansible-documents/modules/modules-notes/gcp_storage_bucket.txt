> GCP_STORAGE_BUCKET    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_storage_bucket.py)

        The Buckets resource represents a bucket in Google Cloud Storage. There is a single global namespace shared by all buckets. For
        more information, see Bucket Name Requirements. Buckets contain objects which can be accessed by their own methods. In addition
        to the acl property, buckets contain bucketAccessControls, for use in fine-grained manipulation of an existing bucket's access
        controls. A bucket is always owned by the project team owners group.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- acl
        Access controls on the bucket.
        [Default: (null)]
        suboptions:
          bucket:
            description:
            - The name of the bucket.
            - 'This field represents a link to a Bucket resource in GCP. It can be specified
              in two ways. First, you can place a dictionary with key ''name'' and value of
              your resource''s name Alternatively, you can add `register: name-of-resource`
              to a gcp_storage_bucket task and then set this bucket field to "{{ name-of-resource
              }}"'
            required: true
          entity:
            description:
            - 'The entity holding the permission, in one of the following forms: user-userId
              user-email group-groupId group-email domain-domain project-team-projectId allUsers
              allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com.'
            - The group example@googlegroups.com would be group-example@googlegroups.com.
            - To refer to all members of the Google Apps for Business domain example.com,
              the entity would be domain-example.com.
            required: true
          entity_id:
            description:
            - The ID for the entity.
            required: false
          project_team:
            description:
            - The project team associated with the entity.
            required: false
            suboptions:
              project_number:
                description:
                - The project team associated with the entity.
                required: false
              team:
                choices:
                - editors
                - owners
                - viewers
                description:
                - The team.
                required: false
          role:
            choices:
            - OWNER
            - READER
            - WRITER
            description:
            - The access permission for the entity.
            required: false
        

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- cors
        The bucket's Cross-Origin Resource Sharing (CORS) configuration.
        [Default: (null)]
        suboptions:
          max_age_seconds:
            description:
            - The value, in seconds, to return in the Access-Control-Max-Age header used in
              preflight responses.
            required: false
          method:
            description:
            - 'The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS,
              POST, etc) Note: "*" is permitted in the list of methods, and means "any method".'
            required: false
          origin:
            description:
            - The list of Origins eligible to receive CORS response headers.
            - 'Note: "*" is permitted in the list of origins, and means "any Origin".'
            required: false
          response_header:
            description:
            - The list of HTTP headers other than the simple response headers to give permission
              for the user-agent to share across domains.
            required: false
        

- default_object_acl
        Default access controls to apply to new objects when no ACL is provided.
        [Default: (null)]
        suboptions:
          bucket:
            description:
            - The name of the bucket.
            - 'This field represents a link to a Bucket resource in GCP. It can be specified
              in two ways. First, you can place a dictionary with key ''name'' and value of
              your resource''s name Alternatively, you can add `register: name-of-resource`
              to a gcp_storage_bucket task and then set this bucket field to "{{ name-of-resource
              }}"'
            required: true
          entity:
            description:
            - 'The entity holding the permission, in one of the following forms: * user-{{userId}}
              * user-{{email}} (such as "user-liz@example.com") * group-{{groupId}} * group-{{email}}
              (such as "group-example@googlegroups.com") * domain-{{domain}} (such as "domain-example.com")
              * project-team-{{projectId}} * allUsers * allAuthenticatedUsers .'
            required: true
          object:
            description:
            - The name of the object, if applied to an object.
            required: false
          role:
            choices:
            - OWNER
            - READER
            description:
            - The access permission for the entity.
            required: true
        
        version_added: 2.7
        

- lifecycle
        The bucket's lifecycle configuration.
        See https://developers.google.com/storage/docs/lifecycle for more information.
        [Default: (null)]
        suboptions:
          rule:
            description:
            - A lifecycle management rule, which is made of an action to take and the condition(s)
              under which the action will be taken.
            required: false
            suboptions:
              action:
                description:
                - The action to take.
                required: false
                suboptions:
                  storage_class:
                    description:
                    - Target storage class. Required iff the type of the action is SetStorageClass.
                    required: false
                  type:
                    choices:
                    - Delete
                    - SetStorageClass
                    description:
                    - Type of the action. Currently, only Delete and SetStorageClass are supported.
                    required: false
              condition:
                description:
                - The condition(s) under which the action will be taken.
                required: false
                suboptions:
                  age_days:
                    description:
                    - Age of an object (in days). This condition is satisfied when an object
                      reaches the specified age.
                    required: false
                  created_before:
                    description:
                    - A date in RFC 3339 format with only the date part (for instance, "2013-01-15").
                      This condition is satisfied when an object is created before midnight
                      of the specified date in UTC.
                    required: false
                  is_live:
                    description:
                    - Relevant only for versioned objects. If the value is true, this condition
                      matches live objects; if the value is false, it matches archived objects.
                    required: false
                    type: bool
                  matches_storage_class:
                    description:
                    - Objects having any of the storage classes specified by this condition
                      will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE,
                      COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
                    required: false
                  num_newer_versions:
                    description:
                    - Relevant only for versioned objects. If the value is N, this condition
                      is satisfied when there are at least N versions (including the live
                      version) newer than this version of the object.
                    required: false
        

- location
        The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US.
        See the developer's guide for the authoritative list.
        [Default: (null)]

- logging
        The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
        [Default: (null)]
        suboptions:
          log_bucket:
            description:
            - The destination bucket where the current bucket's logs should be placed.
            required: false
          log_object_prefix:
            description:
            - A prefix for log object names.
            required: false
        

- metageneration
        The metadata generation of this bucket.
        [Default: (null)]

- name
        The name of the bucket.
        [Default: (null)]

- owner
        The owner of the bucket. This is always the project team's owner group.
        [Default: (null)]
        suboptions:
          entity:
            description:
            - The entity, in the form project-owner-projectId.
            required: false
        

- predefined_default_object_acl
        Apply a predefined set of default object access controls to this bucket.
        Acceptable values are: - "authenticatedRead": Object owner gets OWNER access, and allAuthenticatedUsers get READER access.
        - "bucketOwnerFullControl": Object owner gets OWNER access, and project team owners get OWNER access.
        - "bucketOwnerRead": Object owner gets OWNER access, and project team owners get READER access.
        - "private": Object owner gets OWNER access.
        - "projectPrivate": Object owner gets OWNER access, and project team members get access according to their roles.
        - "publicRead": Object owner gets OWNER access, and allUsers get READER access.
        (Choices: authenticatedRead, bucketOwnerFullControl, bucketOwnerRead, private, projectPrivate, publicRead)[Default: (null)]

- project
        A valid API project identifier.
        [Default: (null)]
        type: str

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- storage_class
        The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how
        objects in the bucket are stored and determines the SLA and the cost of storage.
        Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY. If this value is not
        specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
        (Choices: MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, DURABLE_REDUCED_AVAILABILITY)[Default: (null)]

- versioning
        The bucket's versioning configuration.
        [Default: (null)]
        suboptions:
          enabled:
            description:
            - While set to true, versioning is fully enabled for this bucket.
            required: false
            type: bool
        

- website
        The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the
        Static Website Examples for more information.
        [Default: (null)]
        suboptions:
          main_page_suffix:
            description:
            - If the requested object path is missing, the service will ensure the path has
              a trailing '/', append this suffix, and attempt to retrieve the resulting object.
              This allows the creation of index.html objects to represent directory pages.
            required: false
          not_found_page:
            description:
            - If the requested object path is missing, and any mainPageSuffix object is missing,
              if applicable, the service will return the named object from this bucket as
              the content for a 404 Not Found result.
            required: false
        


NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a bucket
  gcp_storage_bucket:
    name: ansible-storage-module
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

acl:
  description:
  - Access controls on the bucket.
  returned: success
  type: complex
  contains:
    bucket:
      description:
      - The name of the bucket.
      returned: success
      type: dict
    domain:
      description:
      - The domain associated with the entity.
      returned: success
      type: str
    email:
      description:
      - The email address associated with the entity.
      returned: success
      type: str
    entity:
      description:
      - 'The entity holding the permission, in one of the following forms: user-userId
        user-email group-groupId group-email domain-domain project-team-projectId
        allUsers allAuthenticatedUsers Examples: The user liz@example.com would be
        user-liz@example.com.'
      - The group example@googlegroups.com would be group-example@googlegroups.com.
      - To refer to all members of the Google Apps for Business domain example.com,
        the entity would be domain-example.com.
      returned: success
      type: str
    entityId:
      description:
      - The ID for the entity.
      returned: success
      type: str
    id:
      description:
      - The ID of the access-control entry.
      returned: success
      type: str
    projectTeam:
      description:
      - The project team associated with the entity.
      returned: success
      type: complex
      contains:
        projectNumber:
          description:
          - The project team associated with the entity.
          returned: success
          type: str
        team:
          description:
          - The team.
          returned: success
          type: str
    role:
      description:
      - The access permission for the entity.
      returned: success
      type: str
cors:
  description:
  - The bucket's Cross-Origin Resource Sharing (CORS) configuration.
  returned: success
  type: complex
  contains:
    maxAgeSeconds:
      description:
      - The value, in seconds, to return in the Access-Control-Max-Age header used
        in preflight responses.
      returned: success
      type: int
    method:
      description:
      - 'The list of HTTP methods on which to include CORS response headers, (GET,
        OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means
        "any method".'
      returned: success
      type: list
    origin:
      description:
      - The list of Origins eligible to receive CORS response headers.
      - 'Note: "*" is permitted in the list of origins, and means "any Origin".'
      returned: success
      type: list
    responseHeader:
      description:
      - The list of HTTP headers other than the simple response headers to give permission
        for the user-agent to share across domains.
      returned: success
      type: list
defaultObjectAcl:
  description:
  - Default access controls to apply to new objects when no ACL is provided.
  returned: success
  type: complex
  contains:
    bucket:
      description:
      - The name of the bucket.
      returned: success
      type: dict
    domain:
      description:
      - The domain associated with the entity.
      returned: success
      type: str
    email:
      description:
      - The email address associated with the entity.
      returned: success
      type: str
    entity:
      description:
      - 'The entity holding the permission, in one of the following forms: * user-{{userId}}
        * user-{{email}} (such as "user-liz@example.com") * group-{{groupId}} * group-{{email}}
        (such as "group-example@googlegroups.com") * domain-{{domain}} (such as "domain-example.com")
        * project-team-{{projectId}} * allUsers * allAuthenticatedUsers .'
      returned: success
      type: str
    entityId:
      description:
      - The ID for the entity.
      returned: success
      type: str
    generation:
      description:
      - The content generation of the object, if applied to an object.
      returned: success
      type: int
    id:
      description:
      - The ID of the access-control entry.
      returned: success
      type: str
    object:
      description:
      - The name of the object, if applied to an object.
      returned: success
      type: str
    projectTeam:
      description:
      - The project team associated with the entity.
      returned: success
      type: complex
      contains:
        projectNumber:
          description:
          - The project team associated with the entity.
          returned: success
          type: str
        team:
          description:
          - The team.
          returned: success
          type: str
    role:
      description:
      - The access permission for the entity.
      returned: success
      type: str
id:
  description:
  - The ID of the bucket. For buckets, the id and name properities are the same.
  returned: success
  type: str
lifecycle:
  description:
  - The bucket's lifecycle configuration.
  - See U(https://developers.google.com/storage/docs/lifecycle) for more information.
  returned: success
  type: complex
  contains:
    rule:
      description:
      - A lifecycle management rule, which is made of an action to take and the condition(s)
        under which the action will be taken.
      returned: success
      type: complex
      contains:
        action:
          description:
          - The action to take.
          returned: success
          type: complex
          contains:
            storageClass:
              description:
              - Target storage class. Required iff the type of the action is SetStorageClass.
              returned: success
              type: str
            type:
              description:
              - Type of the action. Currently, only Delete and SetStorageClass are
                supported.
              returned: success
              type: str
        condition:
          description:
          - The condition(s) under which the action will be taken.
          returned: success
          type: complex
          contains:
            ageDays:
              description:
              - Age of an object (in days). This condition is satisfied when an object
                reaches the specified age.
              returned: success
              type: int
            createdBefore:
              description:
              - A date in RFC 3339 format with only the date part (for instance, "2013-01-15").
                This condition is satisfied when an object is created before midnight
                of the specified date in UTC.
              returned: success
              type: str
            isLive:
              description:
              - Relevant only for versioned objects. If the value is true, this condition
                matches live objects; if the value is false, it matches archived objects.
              returned: success
              type: bool
            matchesStorageClass:
              description:
              - Objects having any of the storage classes specified by this condition
                will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE,
                COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
              returned: success
              type: list
            numNewerVersions:
              description:
              - Relevant only for versioned objects. If the value is N, this condition
                is satisfied when there are at least N versions (including the live
                version) newer than this version of the object.
              returned: success
              type: int
location:
  description:
  - The location of the bucket. Object data for objects in the bucket resides in physical
    storage within this region. Defaults to US. See the developer's guide for the
    authoritative list.
  returned: success
  type: str
logging:
  description:
  - The bucket's logging configuration, which defines the destination bucket and optional
    name prefix for the current bucket's logs.
  returned: success
  type: complex
  contains:
    logBucket:
      description:
      - The destination bucket where the current bucket's logs should be placed.
      returned: success
      type: str
    logObjectPrefix:
      description:
      - A prefix for log object names.
      returned: success
      type: str
metageneration:
  description:
  - The metadata generation of this bucket.
  returned: success
  type: int
name:
  description:
  - The name of the bucket.
  returned: success
  type: str
owner:
  description:
  - The owner of the bucket. This is always the project team's owner group.
  returned: success
  type: complex
  contains:
    entity:
      description:
      - The entity, in the form project-owner-projectId.
      returned: success
      type: str
    entityId:
      description:
      - The ID for the entity.
      returned: success
      type: str
projectNumber:
  description:
  - The project number of the project the bucket belongs to.
  returned: success
  type: int
storageClass:
  description:
  - The bucket's default storage class, used whenever no storageClass is specified
    for a newly-created object. This defines how objects in the bucket are stored
    and determines the SLA and the cost of storage.
  - Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY.
    If this value is not specified when the bucket is created, it will default to
    STANDARD. For more information, see storage classes.
  returned: success
  type: str
timeCreated:
  description:
  - The creation time of the bucket in RFC 3339 format.
  returned: success
  type: str
updated:
  description:
  - The modification time of the bucket in RFC 3339 format.
  returned: success
  type: str
versioning:
  description:
  - The bucket's versioning configuration.
  returned: success
  type: complex
  contains:
    enabled:
      description:
      - While set to true, versioning is fully enabled for this bucket.
      returned: success
      type: bool
website:
  description:
  - The bucket's website configuration, controlling how the service behaves when accessing
    bucket contents as a web site. See the Static Website Examples for more information.
  returned: success
  type: complex
  contains:
    mainPageSuffix:
      description:
      - If the requested object path is missing, the service will ensure the path
        has a trailing '/', append this suffix, and attempt to retrieve the resulting
        object. This allows the creation of index.html objects to represent directory
        pages.
      returned: success
      type: str
    notFoundPage:
      description:
      - If the requested object path is missing, and any mainPageSuffix object is
        missing, if applicable, the service will return the named object from this
        bucket as the content for a 404 Not Found result.
      returned: success
      type: str
project:
  description:
  - A valid API project identifier.
  returned: success
  type: str
predefinedDefaultObjectAcl:
  description:
  - Apply a predefined set of default object access controls to this bucket.
  - 'Acceptable values are: - "authenticatedRead": Object owner gets OWNER access,
    and allAuthenticatedUsers get READER access.'
  - '- "bucketOwnerFullControl": Object owner gets OWNER access, and project team
    owners get OWNER access.'
  - '- "bucketOwnerRead": Object owner gets OWNER access, and project team owners
    get READER access.'
  - '- "private": Object owner gets OWNER access.'
  - '- "projectPrivate": Object owner gets OWNER access, and project team members
    get access according to their roles.'
  - '- "publicRead": Object owner gets OWNER access, and allUsers get READER access.'
  returned: success
  type: str

