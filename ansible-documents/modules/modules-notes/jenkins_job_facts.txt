> JENKINS_JOB_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/web_infrastructure/jenkins_job_facts.py)

        This module can be used to query the facts about which Jenkins jobs which already exists.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- color
        Only fetch jobs with the given status color.
        [Default: (null)]

- glob
        A shell glob of Jenkins job names to fetch facts about.
        [Default: (null)]

- name
        Exact name of the Jenkins job to fetch facts about.
        [Default: (null)]

- password
        Password to authenticate with the Jenkins server.
        This is a required parameter, if `token' is not provided.
        [Default: (null)]

- token
        API token used to authenticate with the Jenkins server.
        This is a required parameter, if `password' is not provided.
        [Default: (null)]

- url
        URL where the Jenkins server is accessible.
        [Default: http://localhost:8080]

- user
        User to authenticate with the Jenkins server.
        [Default: (null)]

- validate_certs
        If set to `False', the SSL certificates will not be validated.
        This should only set to `False' used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool
        version_added: 2.6


REQUIREMENTS:  python-jenkins >= 0.4.12

AUTHOR: Chris St. Pierre (@stpierre)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Get all Jenkins jobs using basic auth
- jenkins_job_facts:
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

# Get all Jenkins jobs using the token
- jenkins_job_facts:
    user: admin
    token: abcdefghijklmnop
  register: my_jenkins_job_facts

# Get facts about a single job using basic auth
- jenkins_job_facts:
    name: some-job-name
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

# Get facts about a single job in a folder using basic auth
- jenkins_job_facts:
    name: some-folder-name/some-job-name
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

# Get facts about jobs matching a shell glob using basic auth
- jenkins_job_facts:
    glob: some-job-*
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

# Get facts about all failing jobs using basic auth
- jenkins_job_facts:
    color: red
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

# Get facts about passing jobs matching a shell glob using basic auth
- jenkins_job_facts:
    name: some-job-*
    color: blue
    user: admin
    password: hunter2
  register: my_jenkins_job_facts

- name: Get the facts from custom URL with token and validate_certs=False
  jenkins_job_facts:
    user: admin
    token: 126df5c60d66c66e3b75b11104a16a8a
    url: https://jenkins.example.com
    validate_certs: False
  register: my_jenkins_job_facts


RETURN VALUES:

---
jobs:
  description: All jobs found matching the specified criteria
  returned: success
  type: list
  sample:
    [
        {
            "name": "test-job",
            "fullname": "test-folder/test-job",
            "url": "http://localhost:8080/job/test-job/",
            "color": "blue"
        },
    ]

