> ACL    (/usr/lib/python2.7/dist-packages/ansible/modules/files/acl.py)

        Set and retrieve file ACL information.

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- default
        If the target is a directory, setting this to `yes' will make it the default ACL for entities created inside the directory.
        Setting `default' to `yes' causes an error if the path is a file.
        [Default: False]
        type: bool
        version_added: 1.5

- entity
        The actual user or group that the ACL applies to when matching entity types user or group are selected.
        [Default: (null)]
        version_added: 1.5

- entry
        DEPRECATED.
        The ACL to set or remove.
        This must always be quoted in the form of `<etype>:<qualifier>:<perms>'.
        The qualifier may be empty for some types, but the type and perms are always required.
        `-' can be used as placeholder when you do not care about permissions.
        This is now superseded by entity, type and permissions fields.
        [Default: (null)]

- etype
        The entity type of the ACL to apply, see `setfacl' documentation for more info.
        (Choices: group, mask, other, user)[Default: (null)]
        version_added: 1.5

- follow
        Whether to follow symlinks on the path if a symlink is encountered.
        [Default: True]
        type: bool

= path
        The full path of the file or object.
        (Aliases: name)
        type: path

- permissions
        The permissions to apply/remove can be any combination of `r', `w' and `x' (read, write and execute respectively)
        [Default: (null)]
        version_added: 1.5

- recalculate_mask
        Select if and when to recalculate the effective right masks of the files.
        See `setfacl' documentation for more info.
        Incompatible with `state=query'.
        (Choices: default, mask, no_mask)[Default: default]
        version_added: 2.7

- recursive
        Recursively sets the specified ACL.
        Incompatible with `state=query'.
        [Default: False]
        type: bool
        version_added: 2.0

- state
        Define whether the ACL should be present or not.
        The `query' state gets the current ACL without changing it, for use in `register' operations.
        (Choices: absent, present, query)[Default: query]

- use_nfsv4_acls
        Use NFSv4 ACLs instead of POSIX ACLs.
        [Default: False]
        type: bool
        version_added: 2.2


NOTES:
      * The `acl' module requires that ACLs are enabled on the target filesystem and that the `setfacl' and `getfacl' binaries are
        installed.
      * As of Ansible 2.0, this module only supports Linux distributions.
      * As of Ansible 2.3, the `name' option has been changed to `path' as default, but `name' still works as well.


AUTHOR: Brian Coca (@bcoca), Jérémie Astori (@astorije)
        METADATA:
          status:
          - stableinterface
          supported_by: core
        

EXAMPLES:

- name: Grant user Joe read access to a file
  acl:
    path: /etc/foo.conf
    entity: joe
    etype: user
    permissions: r
    state: present

- name: Removes the ACL for Joe on a specific file
  acl:
    path: /etc/foo.conf
    entity: joe
    etype: user
    state: absent

- name: Sets default ACL for joe on /etc/foo.d/
  acl:
    path: /etc/foo.d/
    entity: joe
    etype: user
    permissions: rw
    default: yes
    state: present

- name: Same as previous but using entry shorthand
  acl:
    path: /etc/foo.d/
    entry: default:user:joe:rw-
    state: present

- name: Obtain the ACL for a specific file
  acl:
    path: /etc/foo.conf
  register: acl_info


RETURN VALUES:

acl:
    description: Current ACL on provided path (after changes, if any)
    returned: success
    type: list
    sample: [ "user::rwx", "group::rwx", "other::rwx" ]

