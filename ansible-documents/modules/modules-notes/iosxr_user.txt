> IOSXR_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/iosxr/iosxr_user.py)

        This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage
        either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from
        the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- admin
        Enters into administration configuration mode for making config changes to the device.
        Applicable only when using network_cli transport
        [Default: False]
        type: bool
        version_added: 2.8

- aggregate
        The set of username objects to be configured on the remote Cisco IOS XR device. The list entries can either be the username or a
        hash of username and properties. This argument is mutually exclusive with the `name' argument.
        (Aliases: users, collection)[Default: (null)]

- configured_password
        The password to be configured on the Cisco IOS XR device. The password needs to be provided in clear text. Password is encrypted
        on the device when used with `cli' and by Ansible when used with `netconf' using the same MD5 hash technique with salt size of 3.
        Please note that this option is not same as `provider password'.
        [Default: (null)]

- group
        Configures the group for the username in the device running configuration. The argument accepts a string value defining the group
        name. This argument does not check if the group has been configured on the device.
        (Aliases: role)[Default: (null)]

- groups
        Configures the groups for the username in the device running configuration. The argument accepts a list of group names. This
        argument does not check if the group has been configured on the device. It is similar to the aggregrate command for usernames,
        but lets you configure multiple groups for the user(s).
        [Default: (null)]
        version_added: 2.5

- name
        The username to be configured on the Cisco IOS XR device. This argument accepts a string value and is mutually exclusive with the
        `aggregate' argument. Please note that this option is not same as `provider username'.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- public_key
        Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying
        private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this
        requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key_contents. If used
        with multiple users in aggregates, then the same key file is used for all users.
        [Default: (null)]
        version_added: 2.5

- public_key_contents
        Configures the contents of the public keyfile to upload to the IOS-XR node. This enables users to login using the accompanying
        private key. IOS-XR only accepts base64 decoded files, so this will be decoded and uploaded to the node. Do note that this
        requires an OpenSSL public key file, PuTTy generated files will not work! Mutually exclusive with public_key.If used with
        multiple users in aggregates, then the same key file is used for all users.
        [Default: (null)]
        version_added: 2.5

- purge
        Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the
        device with the exception of the `admin` user and the current defined set of users.
        [Default: False]
        type: bool

- state
        Configures the state of the username definition as it relates to the device operational configuration. When set to `present', the
        username(s) should be configured in the device active configuration and when set to `absent' the username(s) should not be in the
        device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]


NOTES:
      * Tested against IOS XRv 6.1.2
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


REQUIREMENTS:  base64 when using `public_key_contents' or `public_key', lxml >= 4.1.1 when using netconf, ncclient >= 0.5.3 when using
        netconf, paramiko when using `public_key_contents' or `public_key'

AUTHOR: Trishna Guha (@trishnaguha), Sebastiaan van Doesselaar (@sebasdoes), Kedar Kekan (@kedarX)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: create a new user
  iosxr_user:
    name: ansible
    configured_password: mypassword
    state: present
- name: create a new user in admin configuration mode
  iosxr_user:
    name: ansible
    configured_password: mypassword
    admin: True
    state: present
- name: remove all users except admin
  iosxr_user:
    purge: True
- name: set multiple users to group sys-admin
  iosxr_user:
    aggregate:
      - name: netop
      - name: netend
    group: sysadmin
    state: present
- name: set multiple users to multiple groups
  iosxr_user:
    aggregate:
      - name: netop
      - name: netend
    groups:
      - sysadmin
      - root-system
    state: present
- name: Change Password for User netop
  iosxr_user:
    name: netop
    configured_password: "{{ new_password }}"
    update_password: always
    state: present
- name: Add private key authentication for user netop
  iosxr_user:
    name: netop
    state: present
    public_key_contents: "{{ lookup('file', '/home/netop/.ssh/id_rsa.pub' }}"


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - username ansible secret password group sysadmin
    - username admin secret admin
xml:
  description: NetConf rpc xml sent to device with transport C(netconf)
  returned: always (empty list when no xml rpc to send)
  type: list
  version_added: 2.5
  sample:
    - '<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
    <aaa xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-lib-cfg">
    <usernames xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-locald-cfg">
    <username xc:operation="merge">
    <name>test7</name>
    <usergroup-under-usernames>
    <usergroup-under-username>
    <name>sysadmin</name>
    </usergroup-under-username>
    </usergroup-under-usernames>
    <secret>$1$ZsXC$zZ50wqhDC543ZWQkkAHLW0</secret>
    </username>
    </usernames>
    </aaa>
    </config>'

