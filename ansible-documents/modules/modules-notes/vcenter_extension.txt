> VCENTER_EXTENSION    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vcenter_extension.py)

        This module can be used to register/deregister vCenter Extensions.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- client_type
        Required for `state=present'. Type of client the extension is (win32, .net, linux, etc.).
        [Default: vsphere-client-serenity]

- company
        Required for `state=present'. The name of the company that makes the extension.
        [Default: (null)]

- description
        Required for `state=present'. A short description of the extension.
        [Default: (null)]

- email
        Required for `state=present'. Administrator email to use for extension.
        [Default: (null)]

= extension_key
        The extension key of the extension to install or uninstall.


- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- name
        Required for `state=present'. The name of the extension you are installing.
        [Default: (null)]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- server_type
        Required for `state=present'. Type of server being used to install the extension (SOAP, REST, HTTP, etc.).
        [Default: vsphere-client-serenity]

- ssl_thumbprint
        Required for `state=present'. SSL thumbprint of the extension hosting server.
        [Default: (null)]

- state
        Add or remove vCenter Extension.
        (Choices: absent, present)[Default: present]

- url
        Required for `state=present'. Link to server hosting extension zip file to install.
        [Default: (null)]

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool

= version
        The version of the extension you are installing or uninstalling.


- visible
        Show the extension in solution manager inside vCenter.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Michael Tipton (@castawayegr)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Register vCenter Extension
      vcenter_extension:
         hostname: "{{ groups['vcsa'][0] }}"
         username: "{{ vcenter_username }}"
         password: "{{ site_password }}"
         extension_key: "{{ extension_key }}"
         version: "1.0"
         company: "Acme"
         name: "Acme Extension"
         description: "acme management"
         email: "user@example.com"
         url: "https://10.0.0.1/ACME-vSphere-web-plugin-1.0.zip"
         ssl_thumbprint: "{{ ssl_thumbprint }}"
         state: present
      delegate_to: localhost
      register: register_extension

    - name: Deregister vCenter Extension
      vcenter_extension:
         hostname: "{{ groups['vcsa'][0] }}"
         username: "{{ vcenter_username }}"
         password: "{{ site_password }}"
         extension_key: "{{ extension_key }}"
         version: "1.0"
         state: absent
      delegate_to: localhost
      register: deregister_extension


RETURN VALUES:

result:
    description: information about performed operation
    returned: always
    type: str
    sample: "'com.acme.Extension' installed."

