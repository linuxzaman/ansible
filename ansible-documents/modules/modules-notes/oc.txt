> OC    (/usr/lib/python2.7/dist-packages/ansible/modules/clustering/openshift/_oc.py)

        This module allows management of resources in an OpenShift cluster. The inventory host can be any host with network connectivity
        to the OpenShift cluster; the default port being 8443/TCP. This module relies on a token to authenticate to OpenShift. This can
        either be a user or a service account.

DEPRECATED: 

	Reason: This module used the oc command line tool, where as M(openshift_raw) goes over the REST API.
	Will be removed in: Ansible 2.9
	Alternatives: Use M(openshift_raw) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- host
        Hostname or address of the OpenShift API endpoint. By default, this is expected to be the current inventory host.
        [Default: 127.0.0.1]

- inline
        The inline definition of the resource. This is mutually exclusive with name, namespace and kind.
        (Aliases: def, definition)[Default: (null)]

= kind
        The kind of the resource upon which to take action.


- name
        The name of the resource on which to take action.
        [Default: (null)]

- namespace
        The namespace of the resource upon which to take action.
        [Default: (null)]

- port
        The port number of the API endpoint.
        [Default: 8443]

= state
        If the state is present, and the resource doesn't exist, it shall be created using the inline definition. If the state is present
        and the resource exists, the definition will be updated, again using an inline definition. If the state is absent, the resource
        will be deleted if it exists.
        (Choices: present, absent)

= token
        The token with which to authenticate against the OpenShift cluster.


- validate_certs
        If `no', SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using
        self-signed certificates.
        [Default: True]
        type: bool


AUTHOR: Kenneth D. Evensen (@kevensen)
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

- name: Create project
  oc:
    state: present
    inline:
      kind: ProjectRequest
      metadata:
        name: ansibletestproject
      displayName: Ansible Test Project
      description: This project was created using Ansible
    token: << redacted >>

- name: Delete a service
  oc:
    state: absent
    name: myservice
    namespace: mynamespace
    kind: Service
    token: << redacted >>

- name: Add project role Admin to a user
  oc:
    state: present
    inline:
      kind: RoleBinding
      metadata:
        name: admin
        namespace: mynamespace
      roleRef:
        name: admin
      userNames:
        - "myuser"
      token: << redacted >>

- name: Obtain an object definition
  oc:
   state: present
   name: myroute
   namespace: mynamespace
   kind: Route
   token: << redacted >>


RETURN VALUES:

result:
  description:
    The resource that was created, changed, or otherwise determined to be present.
    In the case of a deletion, this is the response from the delete request.
  returned: success
  type: str
url:
  description: The URL to the requested resource.
  returned: success
  type: str
method:
  description: The HTTP method that was used to take action upon the resource
  returned: success
  type: str
...

