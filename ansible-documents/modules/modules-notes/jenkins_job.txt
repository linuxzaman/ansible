> JENKINS_JOB    (/usr/lib/python2.7/dist-packages/ansible/modules/web_infrastructure/jenkins_job.py)

        Manage Jenkins jobs by using Jenkins REST API.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- config
        config in XML format.
        Required if job does not yet exist.
        Mutually exclusive with `enabled'.
        Considered if `state=present'.
        [Default: (null)]

- enabled
        Whether the job should be enabled or disabled.
        Mutually exclusive with `config'.
        Considered if `state=present'.
        [Default: (null)]
        type: bool

= name
        Name of the Jenkins job.


- password
        Password to authenticate with the Jenkins server.
        [Default: (null)]

- state
        Attribute that specifies if the job has to be created or deleted.
        (Choices: present, absent)[Default: present]

- token
        API token used to authenticate alternatively to password.
        [Default: (null)]

- url
        URL where the Jenkins server is accessible.
        [Default: http://localhost:8080]

- user
        User to authenticate with the Jenkins server.
        [Default: (null)]


REQUIREMENTS:  python-jenkins >= 0.4.12, lxml >= 3.3.3

AUTHOR: Sergio Millan Rodriguez (@sermilrod)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create a jenkins job using basic authentication
- jenkins_job:
    config: "{{ lookup('file', 'templates/test.xml') }}"
    name: test
    password: admin
    url: http://localhost:8080
    user: admin

# Create a jenkins job using the token
- jenkins_job:
    config: "{{ lookup('template', 'templates/test.xml.j2') }}"
    name: test
    token: asdfasfasfasdfasdfadfasfasdfasdfc
    url: http://localhost:8080
    user: admin

# Delete a jenkins job using basic authentication
- jenkins_job:
    name: test
    password: admin
    state: absent
    url: http://localhost:8080
    user: admin

# Delete a jenkins job using the token
- jenkins_job:
    name: test
    token: asdfasfasfasdfasdfadfasfasdfasdfc
    state: absent
    url: http://localhost:8080
    user: admin

# Disable a jenkins job using basic authentication
- jenkins_job:
    name: test
    password: admin
    enabled: False
    url: http://localhost:8080
    user: admin

# Disable a jenkins job using the token
- jenkins_job:
    name: test
    token: asdfasfasfasdfasdfadfasfasdfasdfc
    enabled: False
    url: http://localhost:8080
    user: admin


RETURN VALUES:

---
name:
  description: Name of the jenkins job.
  returned: success
  type: str
  sample: test-job
state:
  description: State of the jenkins job.
  returned: success
  type: str
  sample: present
enabled:
  description: Whether the jenkins job is enabled or not.
  returned: success
  type: bool
  sample: true
user:
  description: User used for authentication.
  returned: success
  type: str
  sample: admin
url:
  description: Url to connect to the Jenkins server.
  returned: success
  type: str
  sample: https://jenkins.mydomain.com

