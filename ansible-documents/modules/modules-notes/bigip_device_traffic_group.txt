> BIGIP_DEVICE_TRAFFIC_GROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_device_traffic_group.py)

        Supports managing traffic groups and their attributes on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- auto_failback
        Specifies whether the traffic group fails back to the initial device specified in `ha_order'.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- auto_failback_time
        Specifies the number of seconds the system delays before failing back to the initial device specified in `ha_order'.
        The correct value range is `0 - 300' inclusive.
        [Default: (null)]
        type: int
        version_added: 2.8
        

- ha_group
        Specifies a configured `HA group' to be associated with the traffic group.
        Once you create an HA group on a device and associate the HA group with a traffic group, you must create an HA group and
        associate it with that same traffic group on every device in the device group.
        To disable an HA group failover method , specify an empty string value (`""') to this parameter.
        Disabling HA group will revert the device back to using `Load Aware' method as it is the default, unless `ha_order' setting is
        also configured.
        The `auto_failback' and `auto_failback_time' are not compatible with `ha_group'.
        [Default: (null)]
        type: str
        version_added: 2.8
        

- ha_load_factor
        The value of the load the traffic-group presents the system relative to other traffic groups.
        This parameter only takes effect when `Load Aware' failover method is in use.
        The correct value range is `1 - 1000' inclusive.
        [Default: (null)]
        type: int
        version_added: 2.8
        

- ha_order
        Specifies order in which you would like to assign devices for failover.
        If you configure this setting, you must configure the setting on every traffic group in the device group.
        The values should be device names of the devices that belong to the failover group configured beforehand.
        The order in which the devices are placed as arguments to this parameter, determines their HA order on the device, in other words
        changing the order of the same elements will cause a change on the unit.
        To disable an HA order failover method , specify an empty string value (`""') to this parameter.
        Disabling HA order will revert the device back to using Load Aware method as it is the default, unless `ha_group' setting is also
        configured.
        Device names will be prepended by a partition by the module, so you can provide either the full path format name `/Common/bigip1'
        or just the name string `bigip1'.
        [Default: (null)]
        type: list
        version_added: 2.8
        

- mac_address
        Specifies the floating Media Access Control (MAC) address associated with the floating IP addresses defined for a traffic group.
        Primarily, a MAC masquerade address minimizes ARP communications or dropped packets as a result of failover.
        A MAC masquerade address ensures that any traffic destined for a specific traffic group reaches an available device after
        failover, which happens because along with the traffic group, the MAC masquerade address floats to the available device.
        Without a MAC masquerade address, the sending host must learn the MAC address for a newly-active device, either by sending an ARP
        request or by relying on the gratuitous ARP from the newly-active device.
        To unset the MAC address, specify an empty value (`""') to this parameter.
        [Default: (null)]
        type: str
        version_added: 2.6
        

= name
        The name of the traffic group.

        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present', ensures that the traffic group exists.
        When `absent', ensures the traffic group is removed.
        (Choices: present, absent)[Default: present]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create a traffic group
  bigip_device_traffic_group:
    name: foo1
    state: present
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Create a traffic group with ha_group failover
  bigip_device_traffic_group:
    name: foo2
    state: present
    ha_group: foo_HA_grp
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Create a traffic group with ha_order failover
  bigip_device_traffic_group:
    name: foo3
    state: present
    ha_order:
      - /Common/bigip1.lab.local
      - /Common/bigip2.lab.local
    auto_failback: yes
    auto_failback_time: 40
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Change traffic group ha_order to ha_group
  bigip_device_traffic_group:
    name: foo3
    state: present
    ha_group: foo_HA_grp
    ha_order: ""
    auto_failback: no
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Remove traffic group
  bigip_device_traffic_group:
    name: foo
    state: absent
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost


RETURN VALUES:

mac_address:
  description: The MAC masquerade address
  returned: changed
  type: str
  sample: "02:01:d7:93:35:08"
ha_group:
  description: The configured HA group associated with traffic group
  returned: changed
  type: str
  sample: foo_HA_grp
ha_order:
  description: Specifies the order in which the devices will failover
  returned: changed
  type: list
  sample: ['/Common/bigip1', '/Common/bigip2']
ha_load_factor:
  description: The value of the load the traffic-group presents the system relative to other traffic groups
  returned: changed
  type: int
  sample: 20
auto_failback:
  description: Specifies whether the traffic group fails back to the initial device specified in ha_order
  returned: changed
  type: bool
  sample: yes
auto_failback_time:
  description: Specifies the number of seconds the system delays before failing back
  returned: changed
  type: int
  sample: 60

