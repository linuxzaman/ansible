> CNOS_L2_INTERFACE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cnos/cnos_l2_interface.py)

        This module provides declarative management of Layer-2 interfaces on Lenovo CNOS devices.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- access_vlan
        Configure given VLAN in access port. If `mode=access', used as the access VLAN ID.
        [Default: (null)]

- aggregate
        List of Layer-2 interface definitions.
        [Default: (null)]

- mode
        Mode in which interface needs to be configured.
        (Choices: access, trunk)[Default: access]

= name
        Full name of the interface excluding any logical unit number, i.e. Ethernet1/3.
        (Aliases: interface)

- native_vlan
        Native VLAN to be configured in trunk port. If `mode=trunk', used as the trunk native VLAN ID.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(CNOS Platform Options guide, ../network/user_guide/platform_cnos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
          authorize:
            default: 'no'
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'will
              be used instead.
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
        
        version_added: 2.8

- state
        Manage the state of the Layer-2 Interface configuration.
        (Choices: present, absent, unconfigured)[Default: present]

- trunk_allowed_vlans
        List of allowed VLANs in a given trunk port. If `mode=trunk', these are the only VLANs that will be configured on the trunk, i.e.
        "2-10,15".
        [Default: (null)]

- trunk_vlans
        List of VLANs to be configured in trunk port. If `mode=trunk', used as the VLAN range to ADD or REMOVE from the trunk.
        [Default: (null)]


AUTHOR: Anil Kumar Muraleedharan (@amuraleedhar)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Ensure Ethernet1/5 is in its default l2 interface state
  cnos_l2_interface:
    name: Ethernet1/5
    state: unconfigured

- name: Ensure Ethernet1/5 is configured for access vlan 20
  cnos_l2_interface:
    name: Ethernet1/5
    mode: access
    access_vlan: 20

- name: Ensure Ethernet1/5 only has vlans 5-10 as trunk vlans
  cnos_l2_interface:
    name: Ethernet1/5
    mode: trunk
    native_vlan: 10
    trunk_vlans: 5-10

- name: Ensure Ethernet1/5 is a trunk port and ensure 2-50 are being tagged
        (doesn't mean others aren't also being tagged)
  cnos_l2_interface:
    name: Ethernet1/5
    mode: trunk
    native_vlan: 10
    trunk_vlans: 2-50

- name: Ensure these VLANs are not being tagged on the trunk
  cnos_l2_interface:
    name: Ethernet1/5
    mode: trunk
    trunk_vlans: 51-4094
    state: absent


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always, except for the platforms that use Netconf transport to
            manage the device.
  type: list
  sample:
    - interface Ethernet1/5
    - switchport access vlan 20

