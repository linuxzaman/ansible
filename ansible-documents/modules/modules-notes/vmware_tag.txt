> VMWARE_TAG    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_tag.py)

        This module can be used to create / delete / update VMware tags. Tag feature is introduced in vSphere 6 version, so this module
        is not supported in the earlier versions of vSphere. All variables and VMware object names are case sensitive.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- category_id
        The unique ID generated by vCenter should be used to.
        User can get this unique ID from facts module.
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        [Default: (null)]
        type: str

- password
        The password of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- protocol
        The connection to protocol.
        (Choices: http, https)[Default: https]
        type: str

- state
        The state of tag.
        If set to `present' and tag does not exists, then tag is created.
        If set to `present' and tag exists, then tag is updated.
        If set to `absent' and tag exists, then tag is deleted.
        If set to `absent' and tag does not exists, no action is taken.
        (Choices: present, absent)[Default: present]

- tag_description
        The tag description.
        This is required only if `state' is set to `present'.
        This parameter is ignored, when `state' is set to `absent'.
        Process of updating tag only allows description change.
        [Default: ]

= tag_name
        The name of tag to manage.


- username
        The username of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid.
        Set to `no' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi, vSphere Automation SDK, vCloud Suite SDK

AUTHOR: Abhijeet Kasurde (@Akasurde)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a tag
  vmware_tag:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    category_id: 'urn:vmomi:InventoryServiceCategory:e785088d-6981-4b1c-9fb8-1100c3e1f742:GLOBAL'
    tag_name: Sample_Tag_0002
    tag_description: Sample Description
    state: present
  delegate_to: localhost

- name: Update tag description
  vmware_tag:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    tag_name: Sample_Tag_0002
    tag_description: Some fancy description
    state: present
  delegate_to: localhost

- name: Delete tag
  vmware_tag:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    tag_name: Sample_Tag_0002
    state: absent
  delegate_to: localhost


RETURN VALUES:

results:
  description: dictionary of tag metadata
  returned: on success
  type: dict
  sample: {
        "msg": "Tag 'Sample_Tag_0002' created.",
        "tag_id": "urn:vmomi:InventoryServiceTag:bff91819-f529-43c9-80ca-1c9dfda09441:GLOBAL"
    }

