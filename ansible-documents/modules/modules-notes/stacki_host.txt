> STACKI_HOST    (/usr/lib/python2.7/dist-packages/ansible/modules/remote_management/stacki/stacki_host.py)

        Use this module to add or remove hosts to a stacki front-end via API. https://github.com/StackIQ/stacki

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- force_install
        Set value to True to force node into install state if it already exists in stacki.
        [Default: (null)]
        type: bool

= name
        Name of the host to be added to Stacki.


- prim_intf
        Name of the primary network interface.
        [Default: (null)]

- prim_intf_ip
        IP Address for the primary network interface.
        [Default: (null)]

- prim_intf_mac
        MAC Address for the primary PXE boot network interface.
        [Default: (null)]

= stacki_endpoint
        URL for the Stacki API Endpoint.


= stacki_password
        Password for authenticating with Stacki API, but if not specified, the environment variable `stacki_password' is used instead.


= stacki_user
        Username for authenticating with Stacki API, but if not specified, the environment variable `stacki_user' is used instead.



AUTHOR: Hugh Ma (@bbyhuy) <Hugh.Ma@flextronics.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Add a host named test-1
  stacki_host:
    name: test-1
    stacki_user: usr
    stacki_password: pwd
    stacki_endpoint: url
    prim_intf_mac: mac_addr
    prim_intf_ip: x.x.x.x
    prim_intf: eth0

- name: Remove a host named test-1
  stacki_host:
    name: test-1
    stacki_user: usr
    stacki_password: pwd
    stacki_endpoint: url
    state: absent


RETURN VALUES:

changed:
  description: response to whether or not the api call completed successfully
  returned: always
  type: bool
  sample: true

stdout:
  description: the set of responses from the commands
  returned: always
  type: list
  sample: ['...', '...']

stdout_lines:
  description: the value of stdout split into a list
  returned: always
  type: list
  sample: [['...', '...'], ['...'], ['...']]

