> WIN_WAIT_FOR    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_wait_for.py)

        You can wait for a set amount of time `timeout', this is the default if nothing is specified. Waiting for a port to become
        available is useful for when services are not immediately available after their init scripts return which is true of certain Java
        application servers. You can wait for a file to exist or not exist on the filesystem. This module can also be used to wait for a
        regex match string to be present in a file. You can wait for active connections to be closed before continuing on a local port.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- connect_timeout
        The maximum number of seconds to wait for a connection to happen before closing and retrying.
        [Default: 5]
        type: int

- delay
        The number of seconds to wait before starting to poll.
        [Default: (null)]
        type: int

- exclude_hosts
        The list of hosts or IPs to ignore when looking for active TCP connections when `state=drained'.
        [Default: (null)]
        type: list

- host
        A resolvable hostname or IP address to wait for.
        If `state=drained' then it will only check for connections on the IP specified, you can use '0.0.0.0' to use all host IPs.
        [Default: 127.0.0.1]
        type: str

- path
        The path to a file on the filesystem to check.
        If `state' is present or started then it will wait until the file exists.
        If `state' is absent then it will wait until the file does not exist.
        [Default: (null)]
        type: path

- port
        The port number to poll on `host'.
        [Default: (null)]
        type: int

- search_regex
        Can be used to match a string in a file.
        If `state' is present or started then it will wait until the regex matches.
        If `state' is absent then it will wait until the regex does not match.
        Defaults to a multiline regex.
        [Default: (null)]
        type: str

- sleep
        Number of seconds to sleep between checks.
        [Default: 1]
        type: int

- state
        When checking a port, `started' will ensure the port is open, `stopped' will check that is it closed and `drained' will check for
        active connections.
        When checking for a file or a search string `present' or `started' will ensure that the file or string is present, `absent' will
        check that the file or search string is absent or removed.
        (Choices: absent, drained, present, started, stopped)[Default: started]
        type: str

- timeout
        The maximum number of seconds to wait for.
        [Default: 300]
        type: int


SEE ALSO:
      * Module wait_for
           The official documentation on the wait_for module.
           https://docs.ansible.com/ansible/latest/modules/wait_for_module.html
      * Module win_wait_for_process
           The official documentation on the win_wait_for_process module.
           https://docs.ansible.com/ansible/latest/modules/win_wait_for_process_module.html


AUTHOR: Jordan Borean (@jborean93)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Wait 300 seconds for port 8000 to become open on the host, don't start checking for 10 seconds
  win_wait_for:
    port: 8000
    delay: 10

- name: Wait 150 seconds for port 8000 of any IP to close active connections
  win_wait_for:
    host: 0.0.0.0
    port: 8000
    state: drained
    timeout: 150

- name: Wait for port 8000 of any IP to close active connection, ignoring certain hosts
  win_wait_for:
    host: 0.0.0.0
    port: 8000
    state: drained
    exclude_hosts: ['10.2.1.2', '10.2.1.3']

- name: Wait for file C:\temp\log.txt to exist before continuing
  win_wait_for:
    path: C:\temp\log.txt

- name: Wait until process complete is in the file before continuing
  win_wait_for:
    path: C:\temp\log.txt
    search_regex: process complete

- name: Wait until file is removed
  win_wait_for:
    path: C:\temp\log.txt
    state: absent

- name: Wait until port 1234 is offline but try every 10 seconds
  win_wait_for:
    port: 1234
    state: absent
    sleep: 10


RETURN VALUES:

wait_attempts:
  description: The number of attempts to poll the file or port before module
    finishes.
  returned: always
  type: int
  sample: 1
elapsed:
  description: The elapsed seconds between the start of poll and the end of the
    module. This includes the delay if the option is set.
  returned: always
  type: float
  sample: 2.1406487

