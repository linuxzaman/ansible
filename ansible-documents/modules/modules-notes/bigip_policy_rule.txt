> BIGIP_POLICY_RULE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_policy_rule.py)

        This module will manage LTM policy rules on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- actions
        The actions that you want the policy rule to perform.
        The available attributes vary by the action, however, each action requires that a `type' be specified.
        These conditions can be specified in any order. Despite them being a list, the BIG-IP does not treat their order as anything
        special.
        [Default: (null)]
        suboptions:
          asm_policy:
            description:
            - ASM policy to enable.
            - This parameter is only valid with the `enable' type.
            type: str
          location:
            description:
            - The new URL for which a redirect response will be sent.
            - A Tcl command substitution can be used for this field.
            type: str
          pool:
            description:
            - Pool that you want to forward traffic to.
            - This parameter is only valid with the `forward' type.
            type: str
          type:
            choices:
            - forward
            - enable
            - ignore
            - redirect
            description:
            - The action type. This value controls what below options are required.
            - When `type' is `forward', will associate a given `pool', or `virtual' with
              this rule.
            - When `type' is `enable', will associate a given `asm_policy' with this rule.
            - When `type' is `ignore', will remove all existing actions from this rule.
            - When `type' is `redirect', will redirect an HTTP request to a different URL.
            required: true
            type: str
          virtual:
            description:
            - Virtual Server that you want to forward traffic to.
            - This parameter is only valid with the `forward' type.
            type: str
        
        type: list

- conditions
        A list of attributes that describe the condition.
        See suboptions for details on how to construct each list entry.
        The ordering of this list is important, the module will ensure the order is kept when modifying the task.
        The suboption options listed below are not required for all condition types, read the description for more details.
        These conditions can be specified in any order. Despite them being a list, the BIG-IP does not treat their order as anything
        special.
        [Default: (null)]
        suboptions:
          host_begins_with_any:
            description:
            - A list of strings of characters that the HTTP Host should start with.
            - This parameter is only valid with the `http_host' type.
            type: str
          host_is_any:
            description:
            - A list of strings of characters that the HTTP Host should match.
            - This parameter is only valid with the `http_host' type.
            type: str
          path_begins_with_any:
            description:
            - A list of strings of characters that the HTTP URI should start with.
            - This parameter is only valid with the `http_uri' type.
            type: str
          type:
            choices:
            - http_uri
            - all_traffic
            - http_host
            description:
            - The condition type. This value controls what below options are required.
            - When `type' is `http_uri', will associate a given `path_begins_with_any'
              list of strings with which the HTTP URI should begin with. Any item in the list
              will provide a match.
            - When `type' is `all_traffic', will remove all existing conditions from this
              rule.
            required: true
            type: str
        
        type: list

- description
        Description of the policy rule.
        [Default: (null)]
        type: str

= name
        The name of the rule.

        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

= policy
        The name of the policy that you want to associate this rule with.

        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present', ensures that the key is uploaded to the device. When `absent', ensures that the key is removed from the device.
        If the key is currently in use, the module will not be able to remove the key.
        (Choices: present, absent)[Default: present]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


REQUIREMENTS:  BIG-IP >= v12.1.0

AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create policies
  bigip_policy:
    name: Policy-Foo
    state: present
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Add a rule to the new policy
  bigip_policy_rule:
    policy: Policy-Foo
    name: rule3
    conditions:
      - type: http_uri
        path_begins_with_any: /ABC
    actions:
      - type: forward
        pool: pool-svrs
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Add multiple rules to the new policy
  bigip_policy_rule:
    policy: Policy-Foo
    name: "{{ item.name }}"
    conditions: "{{ item.conditions }}"
    actions: "{{ item.actions }}"
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost
  loop:
    - name: rule1
      actions:
        - type: forward
          pool: pool-svrs
      conditions:
        - type: http_uri
          path_starts_with: /euro
    - name: rule2
      actions:
        - type: forward
          pool: pool-svrs
      conditions:
        - type: http_uri
          path_starts_with: /HomePage/

- name: Remove all rules and confitions from the rule
  bigip_policy_rule:
    policy: Policy-Foo
    name: rule1
    conditions:
      - type: all_traffic
    actions:
      - type: ignore
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost


RETURN VALUES:

actions:
  description: The new list of actions applied to the rule
  returned: changed
  type: complex
  contains:
    type:
      description: The action type
      returned: changed
      type: str
      sample: forward
    pool:
      description: Pool for forward to
      returned: changed
      type: str
      sample: foo-pool
  sample: hash/dictionary of values
conditions:
  description: The new list of conditions applied to the rule.
  returned: changed
  type: complex
  contains:
    type:
      description: The condition type.
      returned: changed
      type: str
      sample: http_uri
    path_begins_with_any:
      description: List of strings that the URI begins with.
      returned: changed
      type: list
      sample: [foo, bar]
  sample: hash/dictionary of values
description:
  description: The new description of the rule.
  returned: changed
  type: str
  sample: My rule

