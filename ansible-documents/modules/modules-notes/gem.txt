> GEM    (/usr/lib/python2.7/dist-packages/ansible/modules/packaging/language/gem.py)

        Manage installation and uninstallation of Ruby gems.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- build_flags
        Allow adding build flags for gem compilation
        [Default: (null)]
        version_added: 2.0

- env_shebang
        Rewrite the shebang line on installed scripts to use /usr/bin/env.
        [Default: no]
        type: bool
        version_added: 2.2

- executable
        Override the path to the gem executable
        [Default: (null)]
        version_added: 1.4

- force
        Force gem to install, bypassing dependency checks.
        [Default: no]
        type: bool
        version_added: 2.8

- gem_source
        The path to a local gem used as installation source.
        [Default: (null)]

- include_dependencies
        Whether to include dependencies or not.
        [Default: yes]
        type: bool

- include_doc
        Install with or without docs.
        [Default: no]
        type: bool
        version_added: 2.0

- install_dir
        Install the gems into a specific directory. These gems will be independant from the global installed ones. Specifying this
        requires user_install to be false.
        [Default: (null)]
        version_added: 2.6

= name
        The name of the gem to be managed.


- pre_release
        Allow installation of pre-release versions of the gem.
        [Default: no]
        type: bool
        version_added: 1.6

- repository
        The repository from which the gem will be installed
        (Aliases: source)[Default: (null)]

- state
        The desired state of the gem. `latest' ensures that the latest version is installed.
        (Choices: present, absent, latest)[Default: present]

- user_install
        Install gem in user's local gems cache or for all users
        [Default: yes]
        type: bool
        version_added: 1.3

- version
        Version of the gem to be installed/removed.
        [Default: (null)]


AUTHOR: Ansible Core Team, Johan Wiren (@johanwiren)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Installs version 1.0 of vagrant.
- gem:
    name: vagrant
    version: 1.0
    state: present

# Installs latest available version of rake.
- gem:
    name: rake
    state: latest

# Installs rake version 1.0 from a local gem on disk.
- gem:
    name: rake
    gem_source: /path/to/gems/rake-1.0.gem
    state: present


