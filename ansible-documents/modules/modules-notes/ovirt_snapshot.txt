> OVIRT_SNAPSHOT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_snapshot.py)

        Module to manage Virtual Machine Snapshots in oVirt/RHV

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth
        Dictionary with values needed to create HTTP/HTTPS connection to oVirt:

        suboptions:
          ca_file:
            description:
            - A PEM file containing the trusted CA certificates.
            - The certificate presented by the server will be verified using these CA certificates.
            - If `ca_file' parameter is not set, system wide CA certificate store is used.
            - Default value is set by `OVIRT_CAFILE' environment variable.
            type: str
          headers:
            description:
            - Dictionary of HTTP headers to be added to each API call.
            type: dict
          hostname:
            description:
            - A string containing the hostname of the server, usually something like ``server.example.com'`.
            - Default value is set by `OVIRT_HOSTNAME' environment variable.
            - Either `url' or `hostname' is required.
            type: str
          insecure:
            description:
            - A boolean flag that indicates if the server TLS certificate and host name should
              be checked.
            type: bool
          kerberos:
            description:
            - A boolean flag indicating if Kerberos authentication should be used instead
              of the default basic authentication.
            type: bool
          password:
            description:
            - The password of the user.
            - Default value is set by `OVIRT_PASSWORD' environment variable.
            required: true
            type: str
          token:
            description:
            - Token to be used instead of login with username/password.
            - Default value is set by `OVIRT_TOKEN' environment variable.
            type: str
          url:
            description:
            - A string containing the API URL of the server, usually something like ``https://server.example.com/ovirt-engine/api'`.
            - Default value is set by `OVIRT_URL' environment variable.
            - Either `url' or `hostname' is required.
            type: str
          username:
            description:
            - The name of the user, something like `admin@internal'.
            - Default value is set by `OVIRT_USERNAME' environment variable.
            required: true
            type: str
        
        type: dict

- description
        Description of the snapshot.
        [Default: (null)]

- disk_id
        Disk id which you want to upload or download
        To get disk, you need to define disk_id or disk_name
        [Default: (null)]
        version_added: 2.8

- disk_name
        Disk name which you want to upload or download
        [Default: (null)]
        version_added: 2.8

- download_image_path
        Path on a file system where snapshot should be downloaded.
        Note that you must have an valid oVirt/RHV engine CA in your system trust store or you must provide it in `ca_file' parameter.
        Note that the snapshot is not downloaded when the file already exists, but you can forcibly download the snapshot when using
        `force' I (true).
        [Default: (null)]
        version_added: 2.8

- fetch_nested
        If `True' the module will fetch additional data from the API.
        It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by
        specifying `nested_attributes'.
        [Default: (null)]
        type: bool
        version_added: 2.3

- keep_days_old
        Number of days after which should snapshot be deleted.
        It will check all snapshots of virtual machine and delete them, if they are older.
        [Default: (null)]
        version_added: 2.8

- nested_attributes
        Specifies list of the attributes which should be fetched from the API.
        This parameter apply only when `fetch_nested' is `true'.
        [Default: (null)]
        type: list
        version_added: 2.3

- poll_interval
        Number of the seconds the module waits until another poll request on entity status is sent.
        [Default: 3]
        type: int

- snapshot_id
        ID of the snapshot to manage.
        [Default: (null)]

- state
        Should the Virtual Machine snapshot be restore/present/absent.
        (Choices: restore, present, absent)[Default: present]

- timeout
        The amount of time in seconds the module should wait for the instance to get into desired state.
        [Default: 180]
        type: int

- upload_image_path
        Path to disk image, which should be uploaded.
        [Default: (null)]
        version_added: 2.8

- use_memory
        If `true' and `state' is `present' save memory of the Virtual Machine if it's running.
        If `true' and `state' is `restore' restore memory of the Virtual Machine.
        Note that Virtual Machine will be paused while saving the memory.
        (Aliases: restore_memory, save_memory)[Default: (null)]
        type: bool

= vm_name
        Name of the Virtual Machine to manage.


- wait
        `yes' if the module should wait for the entity to get into desired state.
        [Default: True]
        type: bool


NOTES:
      * Note that without a guest agent the data on the created snapshot may be inconsistent.
      * Deleting a snapshot does not remove any information from the virtual machine - it simply removes a return-point. However,
        restoring a virtual machine from a snapshot deletes any content that was written to the virtual machine after the time the
        snapshot was taken.
      * In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can
        create the following task: `pip: name=ovirt-engine-sdk-python version=4.3.0'


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Ondra Machacek (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Examples don't contain auth parameter for simplicity,
# look at ovirt_auth module to see how to reuse authentication:

# Create snapshot:
- ovirt_snapshot:
    vm_name: rhel7
    description: MySnapshot
  register: snapshot

# Create snapshot and save memory:
- ovirt_snapshot:
    vm_name: rhel7
    description: SnapWithMem
    use_memory: true
  register: snapshot

# Restore snapshot:
- ovirt_snapshot:
    state: restore
    vm_name: rhel7
    snapshot_id: "{{ snapshot.id }}"

# Remove snapshot:
- ovirt_snapshot:
    state: absent
    vm_name: rhel7
    snapshot_id: "{{ snapshot.id }}"

# Upload local image to disk and attach it to vm:
# Since Ansible 2.8
- ovirt_snapshot:
    name: mydisk
    vm_name: myvm
    upload_image_path: /path/to/mydisk.qcow2

# Download snapshot to local file system:
# Since Ansible 2.8
- ovirt_snapshot:
    snapshot_id: 7de90f31-222c-436c-a1ca-7e655bd5b60c
    disk_name: DiskName
    vm_name: myvm
    download_image_path: /home/user/mysnaphost.qcow2

# Delete all snapshots older than 2 days
- ovirt_snapshot:
    vm_name: test
    keep_days_old: 2


RETURN VALUES:

id:
    description: ID of the snapshot which is managed
    returned: On success if snapshot is found.
    type: str
    sample: 7de90f31-222c-436c-a1ca-7e655bd5b60c
snapshot:
    description: "Dictionary of all the snapshot attributes. Snapshot attributes can be found on your oVirt/RHV instance
                  at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/snapshot."
    returned: On success if snapshot is found.
    type: dict
snapshots:
    description: List of deleted snapshots when keep_days_old is defined and snapshot is older than the input days
    returned: On success returns deleted snapshots
    type: list

