> BIGIP_GTM_WIDE_IP    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_gtm_wide_ip.py)

        Manages F5 BIG-IP GTM wide ip.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- aliases
        Specifies alternate domain names for the web site content you are load balancing.
        You can use the same wildcard characters for aliases as you can for actual wide IP names.
        [Default: (null)]
        type: list
        version_added: 2.7
        

- irules
        List of rules to be applied.
        If you want to remove all existing iRules, specify a single empty value; `""'. See the documentation for an example.
        [Default: (null)]
        type: list
        version_added: 2.6
        

- last_resort_pool
        Specifies which GTM pool, for the system to use as the last resort pool for the wide IP.
        The valid pools for this parameter are those with the `type' specified in this module.
        [Default: (null)]
        type: str
        version_added: 2.8
        

= name
        Wide IP name. This name must be formatted as a fully qualified domain name (FQDN). You can also use the alias `wide_ip' but this
        is deprecated and will be removed in a future Ansible version.
        (Aliases: wide_ip)
        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str
        version_added: 2.5
        

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

= pool_lb_method
        Specifies the load balancing method used to select a pool in this wide IP. This setting is relevant only when multiple pools are
        configured for a wide IP.
        The `round_robin' value is deprecated and will be removed in Ansible 2.9.
        The `global_availability' value is deprecated and will be removed in Ansible 2.9.
        (Aliases: lb_method)(Choices: round-robin, ratio, topology, global-availability, global_availability, round_robin)
        type: str
        version_added: 2.5
        

- pools
        The pools that you want associated with the Wide IP.
        If `ratio' is not provided when creating a new Wide IP, it will default to 1.
        [Default: (null)]
        suboptions:
          name:
            description:
            - The name of the pool to include.
            required: true
            type: str
          ratio:
            description:
            - Ratio for the pool.
            - The system uses this number with the Ratio load balancing method.
            type: int
        
        type: list
        version_added: 2.5
        

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present' or `enabled', ensures that the Wide IP exists and is enabled.
        When `absent', ensures that the Wide IP has been removed.
        When `disabled', ensures that the Wide IP exists and is disabled.
        (Choices: present, absent, disabled, enabled)[Default: present]
        type: str
        version_added: 2.4
        

- type
        Specifies the type of wide IP. GTM wide IPs need to be keyed by query type in addition to name, since pool members need different
        attributes depending on the response RDATA they are meant to supply. This value is required if you are using BIG-IP versions >=
        12.0.0.
        (Choices: a, aaaa, cname, mx, naptr, srv)[Default: (null)]
        type: str
        version_added: 2.4
        

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * Support for TMOS versions below v12.x has been deprecated for this module, and will be removed in Ansible 2.12.
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - stableinterface
          supported_by: certified
        

EXAMPLES:

- name: Set lb method
  bigip_gtm_wide_ip:
    pool_lb_method: round-robin
    name: my-wide-ip.example.com
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Add iRules to the Wide IP
  bigip_gtm_wide_ip:
    pool_lb_method: round-robin
    name: my-wide-ip.example.com
    irules:
      - irule1
      - irule2
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Remove one iRule from the Virtual Server
  bigip_gtm_wide_ip:
    pool_lb_method: round-robin
    name: my-wide-ip.example.com
    irules:
      - irule1
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Remove all iRules from the Virtual Server
  bigip_gtm_wide_ip:
    pool_lb_method: round-robin
    name: my-wide-ip.example.com
    irules: ""
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Assign a pool with ratio to the Wide IP
  bigip_gtm_wide_ip:
    pool_lb_method: round-robin
    name: my-wide-ip.example.com
    pools:
      - name: pool1
        ratio: 100
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost


RETURN VALUES:

lb_method:
  description: The new load balancing method used by the wide IP.
  returned: changed
  type: str
  sample: topology
state:
  description: The new state of the wide IP.
  returned: changed
  type: str
  sample: disabled
irules:
  description: iRules set on the Wide IP.
  returned: changed
  type: list
  sample: ['/Common/irule1', '/Common/irule2']
aliases:
  description: Aliases set on the Wide IP.
  returned: changed
  type: list
  sample: ['alias1.foo.com', '*.wildcard.domain']

