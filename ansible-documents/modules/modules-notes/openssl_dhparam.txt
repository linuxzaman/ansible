> OPENSSL_DHPARAM    (/usr/lib/python2.7/dist-packages/ansible/modules/crypto/openssl_dhparam.py)

        This module allows one to (re)generate OpenSSL DH-params. This module uses file common arguments to specify generated file
        permissions. Please note that the module regenerates existing DH params if they don't match the module's options. If you are
        concerned that this could overwrite your existing DH params, consider using the `backup' option.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- attributes
        The attributes the resulting file or directory should have.
        To get supported flags look at the man page for `chattr' on the target system.
        This string should contain the attributes in the same order as the one displayed by `lsattr'.
        The `=' operator is assumed as default, otherwise `+' or `-' operators need to be included in the string.
        (Aliases: attr)[Default: (null)]
        type: str
        version_added: 2.3

- backup
        Create a backup file including a timestamp so you can get the original DH params back if you overwrote them with new ones by
        accident.
        [Default: False]
        type: bool
        version_added: 2.8

- force
        Should the parameters be regenerated even it it already exists.
        [Default: False]
        type: bool

- group
        Name of the group that should own the file/directory, as would be fed to `chown'.
        [Default: (null)]
        type: str

- mode
        The permissions the resulting file or directory should have.
        For those used to `/usr/bin/chmod' remember that modes are actually octal numbers. You must either add a leading zero so that
        Ansible's YAML parser knows it is an octal number (like `0644' or `01777') or quote it (like `'644'' or `'1777'') so Ansible
        receives a string and can do its own conversion from string into number.
        Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected
        results.
        As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx' or `u=rw,g=r,o=r').
        As of Ansible 2.6, the mode may also be the special string `preserve'.
        When set to `preserve' the file will be given the same permissions as the source file.
        [Default: (null)]
        type: str

- owner
        Name of the user that should own the file/directory, as would be fed to `chown'.
        [Default: (null)]
        type: str

= path
        Name of the file in which the generated parameters will be saved.

        type: path

- selevel
        The level part of the SELinux file context.
        This is the MLS/MCS attribute, sometimes known as the `range'.
        When set to `_default', it will use the `level' portion of the policy if available.
        [Default: s0]
        type: str

- serole
        The role part of the SELinux file context.
        When set to `_default', it will use the `role' portion of the policy if available.
        [Default: (null)]
        type: str

- setype
        The type part of the SELinux file context.
        When set to `_default', it will use the `type' portion of the policy if available.
        [Default: (null)]
        type: str

- seuser
        The user part of the SELinux file context.
        By default it uses the `system' policy, where applicable.
        When set to `_default', it will use the `user' portion of the policy if available.
        [Default: (null)]
        type: str

- size
        Size (in bits) of the generated DH-params.
        [Default: 4096]
        type: int

- state
        Whether the parameters should exist or not, taking action if the state is different from what is stated.
        (Choices: absent, present)[Default: present]
        type: str

- unsafe_writes
        Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file.
        By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, but
        sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted files, which cannot be
        updated atomically from inside the container and can only be written in an unsafe manner.
        This option allows Ansible to fall back to unsafe methods of updating files when atomic operations fail (however, it doesn't
        force Ansible to perform unsafe writes).
        IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption.
        [Default: False]
        type: bool
        version_added: 2.2


SEE ALSO:
      * Module openssl_certificate
           The official documentation on the openssl_certificate module.
           https://docs.ansible.com/ansible/latest/modules/openssl_certificate_module.html
      * Module openssl_csr
           The official documentation on the openssl_csr module.
           https://docs.ansible.com/ansible/latest/modules/openssl_csr_module.html
      * Module openssl_pkcs12
           The official documentation on the openssl_pkcs12 module.
           https://docs.ansible.com/ansible/latest/modules/openssl_pkcs12_module.html
      * Module openssl_privatekey
           The official documentation on the openssl_privatekey module.
           https://docs.ansible.com/ansible/latest/modules/openssl_privatekey_module.html
      * Module openssl_publickey
           The official documentation on the openssl_publickey module.
           https://docs.ansible.com/ansible/latest/modules/openssl_publickey_module.html


REQUIREMENTS:  OpenSSL

AUTHOR: Thom Wiggers (@thomwiggers)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Generate Diffie-Hellman parameters with the default size (4096 bits)
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem

- name: Generate DH Parameters with a different size (2048 bits)
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem
    size: 2048

- name: Force regenerate an DH parameters if they already exist
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem
    force: yes


RETURN VALUES:

size:
    description: Size (in bits) of the Diffie-Hellman parameters.
    returned: changed or success
    type: int
    sample: 4096
filename:
    description: Path to the generated Diffie-Hellman parameters.
    returned: changed or success
    type: str
    sample: /etc/ssl/dhparams.pem
backup_file:
    description: Name of backup file created.
    returned: changed and if I(backup) is C(yes)
    type: str
    sample: /path/to/dhparams.pem.2019-03-09@11:22~

