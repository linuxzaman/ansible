> RDS_SUBNET_GROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/rds_subnet_group.py)

        Creates, modifies, and deletes RDS database subnet groups. This module has a dependency on python-boto >= 2.5.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- description
        Database subnet group description. Only set when a new group is added.
        [Default: (null)]

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

= name
        Database subnet group identifier.


- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

= state
        Specifies whether the subnet should be present or absent.
        (Choices: present, absent)[Default: present]

- subnets
        List of subnet IDs that make up the database subnet group.
        [Default: (null)]

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5


NOTES:
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  python >= 2.6, boto

AUTHOR: Scott Anderson (@tastychutney)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

# Add or change a subnet group
- rds_subnet_group:
    state: present
    name: norwegian-blue
    description: My Fancy Ex Parrot Subnet Group
    subnets:
      - subnet-aaaaaaaa
      - subnet-bbbbbbbb

# Remove a subnet group
- rds_subnet_group:
    state: absent
    name: norwegian-blue


RETURN VALUES:

subnet_group:
    description: Dictionary of DB subnet group values
    returned: I(state=present)
    type: complex
    contains:
        name:
            description: The name of the DB subnet group
            returned: I(state=present)
            type: str
        description:
            description: The description of the DB subnet group
            returned: I(state=present)
            type: str
        vpc_id:
            description: The VpcId of the DB subnet group
            returned: I(state=present)
            type: str
        subnet_ids:
            description: Contains a list of Subnet IDs
            returned: I(state=present)
            type: array
        status:
            description: The status of the DB subnet group
            returned: I(state=present)
            type: str

