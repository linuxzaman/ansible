> VMWARE_DRS_GROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_drs_group.py)

        This module can be used to create VM/Host groups in a given cluster. Creates a vm group if `vms' is set. Creates a host group if
        `hosts' is set.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= cluster_name
        Cluster to create vm/host group.


- datacenter
        Datacenter to search for given cluster. If not set, we use first cluster we encounter with `cluster_name'.
        (Aliases: datacenter_name)[Default: (null)]

= group_name
        The name of the group to create or remove.


- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- hosts
        List of hosts to create in group.
        Required only if `vms' is not set.
        [Default: (null)]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

= state
        If set to `present' and the group doesn't exists then the group will be created.
        If set to `absent' and the group exists then the groupwill be deleted.
        (Choices: present, absent)[Default: present]

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool

- vms
        List of vms to create in group.
        Required only if `hosts' is not set.
        [Default: (null)]


NOTES:
      * Tested on vSphere 6.5 and 6.7


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Karsten Kaj Jakobsen (@karstenjakobsen)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
- name: "Create DRS VM group"
  delegate_to: localhost
  vmware_drs_group:
    hostname: "{{ vcenter_hostname }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    cluster_name: DC0_C0
    datacenter_name: DC0
    group_name: TEST_VM_01
    vms:
      - DC0_C0_RP0_VM0
      - DC0_C0_RP0_VM1
    state: present

- name: "Create DRS Host group"
  delegate_to: localhost
  vmware_drs_group:
    hostname: "{{ vcenter_hostname }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    cluster_name: DC0_C0
    datacenter_name: DC0
    group_name: TEST_HOST_01
    hosts:
      - DC0_C0_H0
      - DC0_C0_H1
      - DC0_C0_H2
    state: absent

- name: "Delete DRS Host group"
  delegate_to: localhost
  vmware_drs_group:
    hostname: "{{ vcenter_hostname }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    cluster_name: DC0_C0
    datacenter_name: DC0
    group_name: TEST_HOST_01
    state: absent


RETURN VALUES:

drs_group_facts:
    description: Metadata about DRS group created
    returned: always
    type: dict
    sample:
        "drs_group_facts": {
        "changed": true,
        "failed": false,
        "msg": "Created host group TEST_HOST_01 successfully",
        "result": {
            "DC0_C0": [
                {
                    "group_name": "TEST_HOST_01",
                    "hosts": [
                        "DC0_C0_H0",
                        "DC0_C0_H1",
                        "DC0_C0_H2"
                    ],
                    "type": "host"
                }
            ]
        }
    }

