> RAX_DNS_RECORD    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/rackspace/rax_dns_record.py)

        Manage DNS records on Rackspace Cloud DNS

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Rackspace API key, overrides `credentials'.
        (Aliases: password)[Default: (null)]
        type: str

- auth_endpoint
        The URI of the authentication service.
        [Default: https://identity.api.rackspacecloud.com/v2.0/]
        version_added: 1.5

- comment
        Brief description of the domain. Maximum length of 160 characters
        [Default: (null)]

- credentials
        File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided.
        (Aliases: creds_file)[Default: (null)]
        type: path

= data
        IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT


- domain
        Domain name to create the record in. This is an invalid option when type=PTR
        [Default: (null)]

- env
        Environment as configured in `~/.pyrax.cfg', see https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-
        configuration.
        [Default: (null)]
        type: str
        version_added: 1.5

- identity_type
        Authentication mechanism to use, such as rackspace or keystone.
        [Default: rackspace]
        version_added: 1.5

- loadbalancer
        Load Balancer ID to create a PTR record for. Only used with type=PTR
        [Default: (null)]
        version_added: 1.7
        

= name
        FQDN record name to create


- overwrite
        Add new records if data doesn't match, instead of updating existing record with matching name. If there are already multiple
        records with matching name and overwrite=true, this module will fail.
        [Default: True]
        type: bool
        version_added: 2.1
        

- priority
        Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer from 0 to 65535.
        [Default: (null)]

- region
        Region to create an instance in.
        [Default: DFW]
        type: str

- server
        Server ID to create a PTR record for. Only used with type=PTR
        [Default: (null)]
        version_added: 1.7
        

- state
        Indicate desired state of the resource
        (Choices: present, absent)[Default: present]

- tenant_id
        The tenant ID used for authentication.
        [Default: (null)]
        version_added: 1.5

- tenant_name
        The tenant name used for authentication.
        [Default: (null)]
        version_added: 1.5

- ttl
        Time to live of record in seconds
        [Default: 3600]

= type
        DNS record type
        (Choices: A, AAAA, CNAME, MX, NS, SRV, TXT, PTR)

- username
        Rackspace username, overrides `credentials'.
        [Default: (null)]
        type: str

- validate_certs
        Whether or not to require SSL validation of API endpoints.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool
        version_added: 1.5


NOTES:
      * It is recommended that plays utilizing this module be run with `serial: 1' to avoid exceeding the API request limit imposed
        by the Rackspace CloudDNS API
      * To manipulate a `PTR' record either `loadbalancer' or `server' must be supplied
      * As of version 1.7, the `type' field is required and no longer defaults to an `A' record.
      * `PTR' record support was added in version 1.7
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)


REQUIREMENTS:  pyrax, python >= 2.6

AUTHOR: Matt Martz (@sivel)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create DNS Records
  hosts: all
  gather_facts: False
  tasks:
    - name: Create A record
      local_action:
        module: rax_dns_record
        credentials: ~/.raxpub
        domain: example.org
        name: www.example.org
        data: "{{ rax_accessipv4 }}"
        type: A
      register: a_record

    - name: Create PTR record
      local_action:
        module: rax_dns_record
        credentials: ~/.raxpub
        server: "{{ rax_id }}"
        name: "{{ inventory_hostname }}"
        region: DFW
      register: ptr_record


