> GITHUB_HOOKS    (/usr/lib/python2.7/dist-packages/ansible/modules/source_control/_github_hooks.py)

        Adds service hooks and removes service hooks that have an error status.

DEPRECATED: 

	Reason: Replaced by more granular modules
	Will be removed in: Ansible 2.12
	Alternatives: Use M(github_webhook) and M(github_webhook_facts) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= action
        This tells the githooks module what you want it to do.
        (Choices: create, cleanall, list, clean504)

- content_type
        Content type to use for requests made to the webhook
        (Choices: json, form)[Default: json]

- hookurl
        When creating a new hook, this is the url that you want GitHub to post to. It is only required when creating a new hook.
        [Default: (null)]

= oauthkey
        The oauth key provided by GitHub. It can be found/generated on GitHub under "Edit Your Profile" >> "Developer settings" >>
        "Personal Access Tokens"


= repo
        This is the API url for the repository you want to manage hooks for. It should be in the form of:
        https://api.github.com/repos/user:/repo:. Note this is different than the normal repo url.


= user
        GitHub username.


- validate_certs
        If `no', SSL certificates for the target repo will not be validated. This should only be used on personally controlled sites
        using self-signed certificates.
        [Default: yes]
        type: bool


AUTHOR: Phillip Gentry, CX Inc (@pcgentry)
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

# Example creating a new service hook. It ignores duplicates.
- github_hooks:
    action: create
    hookurl: http://11.111.111.111:2222
    user: '{{ gituser }}'
    oauthkey: '{{ oauthkey }}'
    repo: https://api.github.com/repos/pcgentry/Github-Auto-Deploy

# Cleaning all hooks for this repo that had an error on the last update. Since this works for all hooks in a repo it is probably best that this would
# be called from a handler.
- github_hooks:
    action: cleanall
    user: '{{ gituser }}'
    oauthkey: '{{ oauthkey }}'
    repo: '{{ repo }}'
  delegate_to: localhost


