> GCP_COMPUTE_INSTANCE_GROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_instance_group.py)

        Represents an Instance Group resource. Instance groups are self-managed and can contain identical or different instances.
        Instance groups do not use an instance template. Unlike managed instance groups, you must create and add instances to an instance
        group manually.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- description
        An optional description of this resource. Provide this property when you create the resource.
        [Default: (null)]

- instances
        The list of instances associated with this InstanceGroup.
        All instances must be created before being added to an InstanceGroup.
        All instances not in this list will be removed from the InstanceGroup and will not be deleted.
        Only the full identifier of the instance will be returned.
        [Default: (null)]
        version_added: 2.8
        

- name
        The name of the instance group.
        The name must be 1-63 characters long, and comply with RFC1035.
        [Default: (null)]

- named_ports
        Assigns a name to a port number.
        For example: {name: "http", port: 80}.
        This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple
        ports.
        For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
        [Default: (null)]
        suboptions:
          name:
            description:
            - The name for this named port.
            - The name must be 1-63 characters long, and comply with RFC1035.
            required: false
          port:
            description:
            - The port number, which can be a value between 1 and 65535.
            required: false
        

- network
        The network to which all instances in the instance group belong.
        This field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary
        with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_network task and then set this network field to "{{ name-of-resource }}"
        [Default: (null)]

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- region
        The region where the instance group is located (for regional resources).
        [Default: (null)]

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- subnetwork
        The subnetwork to which all instances in the instance group belong.
        This field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary
        with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_subnetwork task and then set this subnetwork field to "{{ name-of-resource }}"
        [Default: (null)]

= zone
        A reference to the zone where the instance group resides.



NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a network
  gcp_compute_network:
    name: network-instancegroup
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: create a instance group
  gcp_compute_instance_group:
    name: test_object
    named_ports:
    - name: ansible
      port: 1234
    network: "{{ network }}"
    zone: us-central1-a
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
description:
  description:
  - An optional description of this resource. Provide this property when you create
    the resource.
  returned: success
  type: str
id:
  description:
  - A unique identifier for this instance group.
  returned: success
  type: int
name:
  description:
  - The name of the instance group.
  - The name must be 1-63 characters long, and comply with RFC1035.
  returned: success
  type: str
namedPorts:
  description:
  - Assigns a name to a port number.
  - 'For example: {name: "http", port: 80}.'
  - This allows the system to reference ports by the assigned name instead of a port
    number. Named ports can also contain multiple ports.
  - 'For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports
    apply to all instances in this instance group.'
  returned: success
  type: complex
  contains:
    name:
      description:
      - The name for this named port.
      - The name must be 1-63 characters long, and comply with RFC1035.
      returned: success
      type: str
    port:
      description:
      - The port number, which can be a value between 1 and 65535.
      returned: success
      type: int
network:
  description:
  - The network to which all instances in the instance group belong.
  returned: success
  type: dict
region:
  description:
  - The region where the instance group is located (for regional resources).
  returned: success
  type: str
subnetwork:
  description:
  - The subnetwork to which all instances in the instance group belong.
  returned: success
  type: dict
zone:
  description:
  - A reference to the zone where the instance group resides.
  returned: success
  type: str
instances:
  description:
  - The list of instances associated with this InstanceGroup.
  - All instances must be created before being added to an InstanceGroup.
  - All instances not in this list will be removed from the InstanceGroup and will
    not be deleted.
  - Only the full identifier of the instance will be returned.
  returned: success
  type: list

