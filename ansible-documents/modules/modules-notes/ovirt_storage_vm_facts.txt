> OVIRT_STORAGE_VM_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_storage_vm_facts.py)

        Retrieve facts about one or more oVirt/RHV virtual machines relate to a storage domain.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth
        Dictionary with values needed to create HTTP/HTTPS connection to oVirt:
        `username'[`required'] - The name of the user, something like `admin@internal'. Default value is set by `OVIRT_USERNAME'
        environment variable.
        `password'[`required'] - The password of the user. Default value is set by `OVIRT_PASSWORD' environment variable.
        `url'- A string containing the API URL of the server, usually something like ``https://server.example.com/ovirt-engine/api'`.
        Default value is set by `OVIRT_URL' environment variable. Either `url' or `hostname' is required.
        `hostname' - A string containing the hostname of the server, usually something like ``server.example.com'`. Default value is set
        by `OVIRT_HOSTNAME' environment variable. Either `url' or `hostname' is required.
        `token' - Token to be used instead of login with username/password. Default value is set by `OVIRT_TOKEN' environment variable.
        `insecure' - A boolean flag that indicates if the server TLS certificate and host name should be checked.
        `ca_file' - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using
        these CA certificates. If ``ca_file'` parameter is not set, system wide CA certificate store is used. Default value is set by
        `OVIRT_CAFILE' environment variable.
        `kerberos' - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
        `headers' - Dictionary of HTTP headers to be added to each API call.

        type: dict

- fetch_nested
        If `yes' the module will fetch additional data from the API.
        It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by
        specifying `nested_attributes'.
        [Default: (null)]
        type: bool
        version_added: 2.3

- max
        Sets the maximum number of virtual machines to return. If not specified all the virtual machines are returned.
        [Default: (null)]

- nested_attributes
        Specifies list of the attributes which should be fetched from the API.
        This parameter apply only when `fetch_nested' is `true'.
        [Default: (null)]
        type: list
        version_added: 2.3

- storage_domain
        The storage domain name where the virtual machines should be listed.
        [Default: (null)]

- unregistered
        Flag which indicates whether to get unregistered virtual machines which contain one or more disks which reside on a storage
        domain or diskless virtual machines.
        [Default: False]
        type: bool


NOTES:
      * This module creates a new top-level `ovirt_storage_vms' fact, which contains a list of virtual machines.
      * In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can
        create the following task: pip: name=ovirt-engine-sdk-python version=4.3.0


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Maor Lipchuk (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Examples don't contain auth parameter for simplicity,
# look at ovirt_auth module to see how to reuse authentication:

# Gather facts about all VMs which relate to a storage domain and
# are unregistered:
- ovirt_vms_facts:
    unregistered=True
- debug:
    var: ovirt_storage_vms


RETURN VALUES:

ovirt_storage_vms:
    description: "List of dictionaries describing the VMs. VM attributes are mapped to dictionary keys,
                  all VMs attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/vm."
    returned: On success.
    type: list

