> VMWARE_OBJECT_ROLE_PERMISSION    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_object_role_permission.py)

        This module can be used to manage object permissions on the given host.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- group
        The group to be assigned permission.
        Required if `principal' is not specified.
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

= object_name
        The object name to assigned permission.


- object_type
        The object type being targeted.
        (Choices: Folder, VirtualMachine, Datacenter, ResourcePool, Datastore, Network, HostSystem, ComputeResource,
        ClusterComputeResource, DistributedVirtualSwitch)[Default: Folder]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- principal
        The user to be assigned permission.
        Required if `group' is not specified.
        [Default: (null)]

- recursive
        Should the permissions be recursively applied.
        [Default: True]
        type: bool

= role
        The role to be assigned permission.


- state
        Indicate desired state of the object's permission.
        When `state=present', the permission will be added if it doesn't already exist.
        When `state=absent', the permission is removed if it exists.
        (Choices: present, absent)[Default: present]

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on ESXi 6.5, vSphere 6.7
      * The ESXi login user must have the appropriate rights to administer permissions.
      * Permissions for a distributed switch must be defined and managed on either the datacenter or a folder containing the
        switch.


REQUIREMENTS:  python >= 2.7, PyVmomi

AUTHOR: Derek Rushing (@kryptsi), Joseph Andreatta (@vmwjoseph)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Assign user to VM folder
  vmware_object_role_permission:
    role: Admin
    principal: user_bob
    object_name: services
    state: present
  delegate_to: localhost

- name: Remove user from VM folder
  vmware_object_role_permission:
    role: Admin
    principal: user_bob
    object_name: services
    state: absent
  delegate_to: localhost

- name: Assign finance group to VM folder
  vmware_object_role_permission:
    role: Limited Users
    group: finance
    object_name: Accounts
    state: present
  delegate_to: localhost

- name: Assign view_user Read Only permission at root folder
  vmware_object_role_permission:
    role: ReadOnly
    principal: view_user
    object_name: rootFolder
    state: present
  delegate_to: localhost


RETURN VALUES:

changed:
    description: whether or not a change was made to the object's role
    returned: always
    type: bool

