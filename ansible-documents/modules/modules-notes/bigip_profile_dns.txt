> BIGIP_PROFILE_DNS    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_profile_dns.py)

        Manage DNS profiles on a BIG-IP. Many DNS profiles; each with their own adjustments to the standard `dns' profile. Users of this
        module should be aware that many of the adjustable knobs have no module default. Instead, the default is assigned by the BIG-IP
        system itself which, in most cases, is acceptable.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- cache_name
        Specifies the user-created cache that the system uses to cache DNS responses.
        When you select a cache for the system to use, you must also set `enable_dns_cache' to `yes'
        [Default: (null)]
        type: str
        version_added: 2.7
        

- enable_cache
        Specifies whether the system caches DNS responses.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        When `yes', the BIG-IP system caches DNS responses handled by the virtual servers associated with this profile. When you enable
        this setting, you must also specify a value for `cache_name'.
        When `no', the BIG-IP system does not cache DNS responses handled by the virtual servers associated with this profile. However,
        the profile retains the association with the DNS cache in the `cache_name' parameter. Disable this setting when you want to debug
        the system.
        [Default: (null)]
        type: bool
        version_added: 2.7
        

- enable_dns_express
        Specifies whether the DNS Express engine is enabled.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        The DNS Express engine receives zone transfers from the authoritative DNS server for the zone. If the `enable_zone_transfer'
        setting is also `yes' on this profile, the DNS Express engine also responds to zone transfer requests made by the nameservers
        configured as zone transfer clients for the DNS Express zone.
        [Default: (null)]
        type: bool

- enable_dns_firewall
        Specifies whether DNS firewall capability is enabled.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        [Default: (null)]
        type: bool

- enable_dnssec
        Specifies whether the system signs responses with DNSSEC keys and replies to DNSSEC specific queries (e.g., DNSKEY query type).
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        [Default: (null)]
        type: bool

- enable_gtm
        Specifies whether the system uses Global Traffic Manager to manage the response.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        [Default: (null)]
        type: bool

- enable_zone_transfer
        Specifies whether the system answers zone transfer requests for a DNS zone created on the system.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        The `enable_dns_express' and `enable_zone_transfer' settings on a DNS profile affect how the system responds to zone transfer
        requests.
        When the `enable_dns_express' and `enable_zone_transfer' settings are both `yes', if a zone transfer request matches a DNS
        Express zone, then DNS Express answers the request.
        When the `enable_dns_express' setting is `no' and the `enable_zone_transfer' setting is `yes', the BIG-IP system processes zone
        transfer requests based on the last action and answers the request from local BIND or a pool member.
        [Default: (null)]
        type: bool

= name
        Specifies the name of the DNS profile.

        type: str

- parent
        Specifies the profile from which this profile inherits settings.
        When creating a new profile, if this parameter is not specified, the default is the system-supplied `dns' profile.
        [Default: (null)]
        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- process_recursion_desired
        Specifies whether to process client-side DNS packets with Recursion Desired set in the header.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        If set to `no', processing of the packet is subject to the unhandled-query-action option.
        [Default: (null)]
        type: bool

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present', ensures that the profile exists.
        When `absent', ensures the profile is removed.
        (Choices: present, absent)[Default: present]
        type: str

- unhandled_query_action
        Specifies the action to take when a query does not match a Wide IP or a DNS Express Zone.
        When `allow', the BIG-IP system forwards queries to a DNS server or pool member. If a pool is not associated with a listener and
        the Use BIND Server on BIG-IP setting is set to Enabled, requests are forwarded to the local BIND server.
        When `drop', the BIG-IP system does not respond to the query.
        When `reject', the BIG-IP system returns the query with the REFUSED return code.
        When `hint', the BIG-IP system returns the query with a list of root name servers.
        When `no-error', the BIG-IP system returns the query with the NOERROR return code.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        (Choices: allow, drop, reject, hint, no-error)[Default: (null)]
        type: str
        version_added: 2.7
        

- use_local_bind
        Specifies whether the system forwards non-wide IP queries to the local BIND server on the BIG-IP system.
        For best performance, disable this setting when using a DNS cache.
        When creating a new profile, if this parameter is not specified, the default is provided by the parent profile.
        [Default: (null)]
        type: bool

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create a DNS profile
  bigip_profile_dns:
    name: foo
    enable_dns_express: no
    enable_dnssec: no
    enable_gtm: no
    process_recursion_desired: no
    use_local_bind: no
    enable_dns_firewall: yes
    provider:
      password: secret
      server: lb.mydomain.com
      user: admin
  delegate_to: localhost


RETURN VALUES:

enable_dns_express:
  description: Whether DNS Express is enabled on the resource or not.
  returned: changed
  type: bool
  sample: yes
enable_zone_transfer:
  description: Whether zone transfer are enabled on the resource or not.
  returned: changed
  type: bool
  sample: no
enable_dnssec:
  description: Whether DNSSEC is enabled on the resource or not.
  returned: changed
  type: bool
  sample: no
enable_gtm:
  description: Whether GTM is used to manage the resource or not.
  returned: changed
  type: bool
  sample: yes
process_recursion_desired:
  description: Whether client-side DNS packets are processed with Recursion Desired set.
  returned: changed
  type: bool
  sample: yes
use_local_bind:
  description: Whether non-wide IP queries are forwarded to the local BIND server or not.
  returned: changed
  type: bool
  sample: no
enable_dns_firewall:
  description: Whether DNS firewall capability is enabled or not.
  returned: changed
  type: bool
  sample: no
enable_cache:
  description: Whether DNS caching is enabled or not.
  returned: changed
  type: bool
  sample: no
cache_name:
  description: Name of the cache used by DNS.
  returned: changed
  type: str
  sample: /Common/cache1
unhandled_query_action:
  description: What to do with unhandled queries
  returned: changed
  type: str
  sample: allow

