> OVIRT_VMPOOL    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_vmpool.py)

        Module to manage VM pools in oVirt/RHV.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth
        Dictionary with values needed to create HTTP/HTTPS connection to oVirt:

        suboptions:
          ca_file:
            description:
            - A PEM file containing the trusted CA certificates.
            - The certificate presented by the server will be verified using these CA certificates.
            - If `ca_file' parameter is not set, system wide CA certificate store is used.
            - Default value is set by `OVIRT_CAFILE' environment variable.
            type: str
          headers:
            description:
            - Dictionary of HTTP headers to be added to each API call.
            type: dict
          hostname:
            description:
            - A string containing the hostname of the server, usually something like ``server.example.com'`.
            - Default value is set by `OVIRT_HOSTNAME' environment variable.
            - Either `url' or `hostname' is required.
            type: str
          insecure:
            description:
            - A boolean flag that indicates if the server TLS certificate and host name should
              be checked.
            type: bool
          kerberos:
            description:
            - A boolean flag indicating if Kerberos authentication should be used instead
              of the default basic authentication.
            type: bool
          password:
            description:
            - The password of the user.
            - Default value is set by `OVIRT_PASSWORD' environment variable.
            required: true
            type: str
          token:
            description:
            - Token to be used instead of login with username/password.
            - Default value is set by `OVIRT_TOKEN' environment variable.
            type: str
          url:
            description:
            - A string containing the API URL of the server, usually something like ``https://server.example.com/ovirt-engine/api'`.
            - Default value is set by `OVIRT_URL' environment variable.
            - Either `url' or `hostname' is required.
            type: str
          username:
            description:
            - The name of the user, something like `admin@internal'.
            - Default value is set by `OVIRT_USERNAME' environment variable.
            required: true
            type: str
        
        type: dict

- cluster
        Name of the cluster, where VM pool should be created.
        [Default: (null)]

- comment
        Comment of the Virtual Machine pool.
        [Default: (null)]

- description
        Description of the VM pool.
        [Default: (null)]

- fetch_nested
        If `True' the module will fetch additional data from the API.
        It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by
        specifying `nested_attributes'.
        [Default: (null)]
        type: bool
        version_added: 2.3

- id
        ID of the vmpool to manage.
        [Default: (null)]
        version_added: 2.8

= name
        Name of the VM pool to manage.


- nested_attributes
        Specifies list of the attributes which should be fetched from the API.
        This parameter apply only when `fetch_nested' is `true'.
        [Default: (null)]
        type: list
        version_added: 2.3

- poll_interval
        Number of the seconds the module waits until another poll request on entity status is sent.
        [Default: 3]
        type: int

- prestarted
        Number of pre-started VMs defines the number of VMs in run state, that are waiting to be attached to Users.
        Default value is set by engine.
        [Default: (null)]

- state
        Should the VM pool be present/absent.
        Note that when `state' is `absent' all VMs in VM pool are stopped and removed.
        (Choices: present, absent)[Default: present]

- template
        Name of the template, which will be used to create VM pool.
        [Default: (null)]

- timeout
        The amount of time in seconds the module should wait for the instance to get into desired state.
        [Default: 180]
        type: int

- type
        Type of the VM pool. Either manual or automatic.
        `manual' - The administrator is responsible for explicitly returning the virtual machine to the pool. The virtual machine reverts
        to the original base image after the administrator returns it to the pool.
        `Automatic' - When the virtual machine is shut down, it automatically reverts to its base image and is returned to the virtual
        machine pool.
        Default value is set by engine.
        (Choices: manual, automatic)[Default: (null)]

- vm_count
        Number of VMs in the pool.
        Default value is set by engine.
        [Default: (null)]

- vm_per_user
        Maximum number of VMs a single user can attach to from this pool.
        Default value is set by engine.
        [Default: (null)]

- wait
        `yes' if the module should wait for the entity to get into desired state.
        [Default: True]
        type: bool


NOTES:
      * In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can
        create the following task: `pip: name=ovirt-engine-sdk-python version=4.3.0'


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Ondra Machacek (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Examples don't contain auth parameter for simplicity,
# look at ovirt_auth module to see how to reuse authentication:

# Create VM pool from template
- ovirt_vmpool:
    cluster: mycluster
    name: myvmpool
    template: rhel7
    vm_count: 2
    prestarted: 2
    vm_per_user: 1

# Remove vmpool, note that all VMs in pool will be stopped and removed:
- ovirt_vmpool:
    state: absent
    name: myvmpool

# Change Pool Name
- ovirt_vmpool:
    id: 00000000-0000-0000-0000-000000000000
    name: "new_pool_name"


RETURN VALUES:

id:
    description: ID of the VM pool which is managed
    returned: On success if VM pool is found.
    type: str
    sample: 7de90f31-222c-436c-a1ca-7e655bd5b60c
vm_pool:
    description: "Dictionary of all the VM pool attributes. VM pool attributes can be found on your oVirt/RHV instance
                  at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/vm_pool."
    returned: On success if VM pool is found.
    type: dict

