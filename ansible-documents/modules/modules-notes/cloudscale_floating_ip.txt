> CLOUDSCALE_FLOATING_IP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudscale/cloudscale_floating_ip.py)

        Create, assign and delete floating IPs on the cloudscale.ch IaaS service.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_timeout
        Timeout in seconds for calls to the cloudscale.ch API.
        [Default: 30]

- api_token
        cloudscale.ch API token.
        This can also be passed in the `CLOUDSCALE_API_TOKEN' environment variable.
        [Default: (null)]

- ip
        Floating IP address to change.
        Required to assign the IP to a different server or if `state' is absent.
        (Aliases: network)[Default: (null)]

- ip_version
        IP protocol version of the floating IP.
        (Choices: 4, 6)[Default: (null)]

- prefix_length
        Only valid if `ip_version' is 6.
        Prefix length for the IPv6 network. Currently only a prefix of /56 can be requested. If no `prefix_length' is present, a single
        address is created.
        (Choices: 56)[Default: (null)]

- reverse_ptr
        Reverse PTR entry for this address.
        You cannot set a reverse PTR entry for IPv6 floating networks. Reverse PTR entries are only allowed for single addresses.
        [Default: (null)]

- server
        UUID of the server assigned to this floating IP.
        Required unless `state' is absent.
        [Default: (null)]

- state
        State of the floating IP.
        (Choices: present, absent)[Default: present]


NOTES:
      * To create a new floating IP at least the `ip_version' and `server' options are required.
      * Once a floating_ip is created all parameters except `server' are read-only.
      * It's not possible to request a floating IP without associating it with a server at the same time.
      * This module requires the ipaddress python library. This library is included in Python since version 3.3. It is available as
        a module on PyPI for earlier versions.
      * Instead of the api_token parameter the `CLOUDSCALE_API_TOKEN' environment variable can be used.
      * All operations are performed using the cloudscale.ch public API v1.
      * For details consult the full API documentation: https://www.cloudscale.ch/en/api/v1.
      * A valid API token is required for all operations. You can create as many tokens as you like using the cloudscale.ch control
        panel at https://control.cloudscale.ch.


AUTHOR: Gaudenz Steinlin (@gaudenz) <gaudenz.steinlin@cloudscale.ch>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Request a new floating IP
- name: Request a floating IP
  cloudscale_floating_ip:
    ip_version: 4
    server: 47cec963-fcd2-482f-bdb6-24461b2d47b1
    reverse_ptr: my-server.example.com
    api_token: xxxxxx
  register: floating_ip

# Assign an existing floating IP to a different server
- name: Move floating IP to backup server
  cloudscale_floating_ip:
    ip: 192.0.2.123
    server: ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48
    api_token: xxxxxx

# Request a new floating IPv6 network
- name: Request a floating IP
  cloudscale_floating_ip:
    ip_version: 6
    prefix_length: 56
    server: 47cec963-fcd2-482f-bdb6-24461b2d47b1
    api_token: xxxxxx
  register: floating_ip

# Assign an existing floating network to a different server
- name: Move floating IP to backup server
  cloudscale_floating_ip:
    ip: '{{ floating_ip.network | ip }}'
    server: ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48
    api_token: xxxxxx

# Release a floating IP
- name: Release floating IP
  cloudscale_floating_ip:
    ip: 192.0.2.123
    state: absent
    api_token: xxxxxx


RETURN VALUES:

href:
  description: The API URL to get details about this floating IP.
  returned: success when state == present
  type: str
  sample: https://api.cloudscale.ch/v1/floating-ips/2001:db8::cafe
network:
  description: The CIDR notation of the network that is routed to your server.
  returned: success when state == present
  type: str
  sample: 2001:db8::cafe/128
next_hop:
  description: Your floating IP is routed to this IP address.
  returned: success when state == present
  type: str
  sample: 2001:db8:dead:beef::42
reverse_ptr:
  description: The reverse pointer for this floating IP address.
  returned: success when state == present
  type: str
  sample: 185-98-122-176.cust.cloudscale.ch
server:
  description: The floating IP is routed to this server.
  returned: success when state == present
  type: str
  sample: 47cec963-fcd2-482f-bdb6-24461b2d47b1
ip:
  description: The floating IP address or network. This is always present and used to identify floating IPs after creation.
  returned: success
  type: str
  sample: 185.98.122.176
state:
  description: The current status of the floating IP.
  returned: success
  type: str
  sample: present

