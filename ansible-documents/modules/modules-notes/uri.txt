> URI    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/basics/uri.py)

        Interacts with HTTP and HTTPS web services and supports Digest, Basic and WSSE HTTP authentication mechanisms. For Windows
        targets, use the [win_uri] module instead.

  * This module is maintained by The Ansible Core Team
  * note: This module has a corresponding action plugin.

OPTIONS (= is mandatory):

- HEADER_
        Any parameter starting with "HEADER_" is a sent with your request as a header. For example, HEADER_Content-
        Type="application/json" would send the header "Content-Type" along with your request with a value of "application/json".
        This option is deprecated as of `2.1' and will be removed in Ansible 2.9. Use `headers' instead.
        [Default: (null)]
        type: dict

- body
        The body of the http request/response to the web service. If `body_format' is set to 'json' it will take an already formatted
        JSON string or convert a data structure into JSON. If `body_format' is set to 'form-urlencoded' it will convert a dictionary or
        list of tuples into an 'application/x-www-form-urlencoded' string. (Added in v2.7)
        [Default: (null)]
        type: raw

- body_format
        The serialization format of the body. When set to `json' or `form-urlencoded', encodes the body argument, if needed, and
        automatically sets the Content-Type header accordingly. As of `2.3' it is possible to override the `Content-Type` header, when
        set to `json' or `form-urlencoded' via the `headers' option.
        (Choices: form-urlencoded, json, raw)[Default: raw]
        type: str
        version_added: 2.0

- client_cert
        PEM formatted certificate chain file to be used for SSL client authentication.
        This file can also include the key as well, and if the key is included, `client_key' is not required
        [Default: (null)]
        type: path
        version_added: 2.4

- client_key
        PEM formatted file that contains your private key to be used for SSL client authentication.
        If `client_cert' contains both the certificate and key, this option is not required.
        [Default: (null)]
        type: path
        version_added: 2.4

- creates
        A filename, when it already exists, this step will not be run.
        [Default: (null)]
        type: path

- dest
        A path of where to download the file to (if desired). If `dest' is a directory, the basename of the file on the remote server
        will be used.
        [Default: (null)]
        type: path

- follow_redirects
        Whether or not the URI module should follow redirects. `all' will follow all redirects. `safe' will follow only "safe" redirects,
        where "safe" means that the client is only doing a GET or HEAD on the URI to which it is being redirected. `none' will not follow
        any redirects. Note that `yes' and `no' choices are accepted for backwards compatibility, where `yes' is the equivalent of `all'
        and `no' is the equivalent of `safe'. `yes' and `no' are deprecated and will be removed in some future version of Ansible.
        (Choices: all, none, safe)[Default: safe]
        type: str

- force
        If `yes' do not get a cached copy.
        (Aliases: thirsty)[Default: False]
        type: bool

- force_basic_auth
        Force the sending of the Basic authentication header upon initial request.
        The library used by the uri module only sends authentication information when a webservice responds to an initial request with a
        401 status. Since some basic auth services do not properly send a 401, logins will fail.
        [Default: False]
        type: bool

- headers
        Add custom HTTP headers to a request in the format of a YAML hash. As of `2.3' supplying `Content-Type' here will override the
        header generated by supplying `json' or `form-urlencoded' for `body_format'.
        [Default: (null)]
        type: dict
        version_added: 2.1

- http_agent
        Header to identify as, generally appears in web server logs.
        [Default: ansible-httpget]
        type: str

- method
        The HTTP method of the request or response.
        In more recent versions we do not restrict the method at the module level anymore but it still must be a valid method accepted by
        the service handling the request.
        [Default: GET]
        type: str

- others
        All arguments accepted by the [file] module also work here
        [Default: (null)]

- remote_src
        If `no', the module will search for src on originating/master machine.
        If `yes' the module will use the `src' path on the remote/target machine.
        [Default: False]
        type: bool
        version_added: 2.7

- removes
        A filename, when it does not exist, this step will not be run.
        [Default: (null)]
        type: path

- return_content
        Whether or not to return the body of the response as a "content" key in the dictionary result.
        Independently of this option, if the reported Content-type is "application/json", then the JSON is always loaded into a key
        called `json' in the dictionary results.
        [Default: False]
        type: bool

- src
        Path to file to be submitted to the remote server.
        Cannot be used with `body'.
        [Default: (null)]
        type: path
        version_added: 2.7

- status_code
        A list of valid, numeric, HTTP status codes that signifies success of the request.
        [Default: [200]]
        type: list

- timeout
        The socket level timeout in seconds
        [Default: 30]
        type: int

- unix_socket
        Path to Unix domain socket to use for connection
        [Default: (null)]
        version_added: 2.8

= url
        HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path

        type: str

- url_password
        A password for the module to use for Digest, Basic or WSSE authentication.
        (Aliases: password)[Default: (null)]
        type: str

- url_username
        A username for the module to use for Digest, Basic or WSSE authentication.
        (Aliases: user)[Default: (null)]
        type: str

- use_proxy
        If `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts.
        [Default: True]
        type: bool

- validate_certs
        If `no', SSL certificates will not be validated.
        This should only set to `no' used on personally controlled sites using self-signed certificates.
        Prior to 1.9.2 the code defaulted to `no'.
        [Default: True]
        type: bool
        version_added: 1.9.2


NOTES:
      * The dependency on httplib2 was removed in Ansible 2.1.
      * The module returns all the HTTP headers in lower-case.
      * For Windows targets, use the [win_uri] module instead.


SEE ALSO:
      * Module get_url
           The official documentation on the get_url module.
           https://docs.ansible.com/ansible/latest/modules/get_url_module.html
      * Module win_uri
           The official documentation on the win_uri module.
           https://docs.ansible.com/ansible/latest/modules/win_uri_module.html


AUTHOR: Romeo Theriault (@romeotheriault)
        METADATA:
          status:
          - stableinterface
          supported_by: core
        

EXAMPLES:

- name: Check that you can connect (GET) to a page and it returns a status 200
  uri:
    url: http://www.example.com

- name: Check that a page returns a status 200 and fail if the word AWESOME is not in the page contents
  uri:
    url: http://www.example.com
    return_content: yes
  register: this
  failed_when: "'AWESOME' not in this.content"

- name: Create a JIRA issue
  uri:
    url: https://your.jira.example.com/rest/api/2/issue/
    user: your_username
    password: your_pass
    method: POST
    body: "{{ lookup('file','issue.json') }}"
    force_basic_auth: yes
    status_code: 201
    body_format: json

- name: Login to a form based webpage, then use the returned cookie to access the app in later tasks
  uri:
    url: https://your.form.based.auth.example.com/index.php
    method: POST
    body_format: form-urlencoded
    body:
      name: your_username
      password: your_password
      enter: Sign in
    status_code: 302
  register: login

- name: Login to a form based webpage using a list of tuples
  uri:
    url: https://your.form.based.auth.example.com/index.php
    method: POST
    body_format: form-urlencoded
    body:
    - [ name, your_username ]
    - [ password, your_password ]
    - [ enter, Sign in ]
    status_code: 302
  register: login

- name: Connect to website using a previously stored cookie
  uri:
    url: https://your.form.based.auth.example.com/dashboard.php
    method: GET
    return_content: yes
    headers:
      Cookie: "{{ login.set_cookie }}"

- name: Queue build of a project in Jenkins
  uri:
    url: http://{{ jenkins.host }}/job/{{ jenkins.job }}/build?token={{ jenkins.token }}
    user: "{{ jenkins.user }}"
    password: "{{ jenkins.password }}"
    method: GET
    force_basic_auth: yes
    status_code: 201

- name: POST from contents of local file
  uri:
    url: https://httpbin.org/post
    method: POST
    src: file.json

- name: POST from contents of remote file
  uri:
    url: https://httpbin.org/post
    method: POST
    src: /path/to/my/file.json
    remote_src: yes


RETURN VALUES:

# The return information includes all the HTTP headers in lower-case.
elapsed:
  description: The number of seconds that elapsed while performing the download
  returned: on success
  type: int
  sample: 23
msg:
  description: The HTTP message from the request
  returned: always
  type: str
  sample: OK (unknown bytes)
redirected:
  description: Whether the request was redirected
  returned: on success
  type: bool
  sample: false
status:
  description: The HTTP status code from the request
  returned: always
  type: int
  sample: 200
url:
  description: The actual URL used for the request
  returned: always
  type: str
  sample: https://www.ansible.com/

