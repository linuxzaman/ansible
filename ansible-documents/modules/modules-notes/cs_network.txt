> CS_NETWORK    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudstack/cs_network.py)

        Create, update, restart and delete networks.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- account
        Account the network is related to.
        [Default: (null)]
        type: str

- acl
        The name of the access control list for the VPC network tier.
        [Default: (null)]
        type: str
        version_added: 2.5

- acl_type
        Access control type for the network.
        If not specified, Cloudstack will default to `account' for isolated networks
        and `domain' for shared networks.
        Only considered on create.
        (Choices: account, domain)[Default: (null)]
        type: str

- api_http_method
        HTTP method used to query the API endpoint.
        If not given, the `CLOUDSTACK_METHOD' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is `get' if not specified.
        (Choices: get, post)[Default: (null)]
        type: str

- api_key
        API key of the CloudStack API.
        If not given, the `CLOUDSTACK_KEY' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_region
        Name of the ini section in the `cloustack.ini' file.
        If not given, the `CLOUDSTACK_REGION' env variable is considered.
        [Default: cloudstack]
        type: str

- api_secret
        Secret key of the CloudStack API.
        If not set, the `CLOUDSTACK_SECRET' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_timeout
        HTTP timeout in seconds.
        If not given, the `CLOUDSTACK_TIMEOUT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is 10 seconds if not specified.
        [Default: (null)]
        type: int

- api_url
        URL of the CloudStack API e.g. https://cloud.example.com/client/api.
        If not given, the `CLOUDSTACK_ENDPOINT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- cidr_ipv6
        CIDR of IPv6 network, must be at least /64.
        Only considered on create.
        [Default: (null)]
        type: str

- clean_up
        Cleanup old network elements.
        Only considered on `state=restarted'.
        [Default: False]
        type: bool

- display_text
        Display text of the network.
        If not specified, `name' will be used as `display_text'.
        [Default: (null)]
        type: str

- domain
        Domain the network is related to.
        [Default: (null)]
        type: str

- end_ip
        The ending IPv4 address of the network belongs to.
        If not specified, value of `start_ip' is used.
        Only considered on create.
        [Default: (null)]
        type: str

- end_ipv6
        The ending IPv6 address of the network belongs to.
        If not specified, value of `start_ipv6' is used.
        Only considered on create.
        [Default: (null)]
        type: str

- gateway
        The gateway of the network.
        Required for shared networks and isolated networks when it belongs to a VPC.
        Only considered on create.
        [Default: (null)]
        type: str

- gateway_ipv6
        The gateway of the IPv6 network.
        Required for shared networks.
        Only considered on create.
        [Default: (null)]

- isolated_pvlan
        The isolated private VLAN for this network.
        [Default: (null)]
        type: str

= name
        Name (case sensitive) of the network.

        type: str

- netmask
        The netmask of the network.
        Required for shared networks and isolated networks when it belongs to a VPC.
        Only considered on create.
        [Default: (null)]
        type: str

- network_domain
        The network domain.
        [Default: (null)]
        type: str

- network_offering
        Name of the offering for the network.
        Required if `state=present'.
        [Default: (null)]
        type: str

- poll_async
        Poll async jobs until job has finished.
        [Default: True]
        type: bool

- project
        Name of the project the network to be deployed in.
        [Default: (null)]
        type: str

- start_ip
        The beginning IPv4 address of the network belongs to.
        Only considered on create.
        [Default: (null)]
        type: str

- start_ipv6
        The beginning IPv6 address of the network belongs to.
        Only considered on create.
        [Default: (null)]
        type: str

- state
        State of the network.
        (Choices: present, absent, restarted)[Default: present]
        type: str

- subdomain_access
        Defines whether to allow subdomains to use networks dedicated to their parent domain(s).
        Should be used with `acl_type=domain'.
        Only considered on create.
        [Default: (null)]
        type: bool
        version_added: 2.5

- vlan
        The ID or VID of the network.
        [Default: (null)]
        type: str

- vpc
        Name of the VPC of the network.
        [Default: (null)]
        type: str

- zone
        Name of the zone in which the network should be deployed.
        If not set, default zone is used.
        [Default: (null)]
        type: str


NOTES:
      * Ansible uses the `cs' library's configuration method if credentials are not provided by the arguments `api_url', `api_key',
        `api_secret'. Configuration is read from several locations, in the following order. The `CLOUDSTACK_ENDPOINT',
        `CLOUDSTACK_KEY', `CLOUDSTACK_SECRET' and `CLOUDSTACK_METHOD'. `CLOUDSTACK_TIMEOUT' environment variables. A
        `CLOUDSTACK_CONFIG' environment variable pointing to an `.ini' file. A `cloudstack.ini' file in the current working
        directory. A `.cloudstack.ini' file in the users home directory. Optionally multiple credentials and endpoints can be
        specified using ini sections in `cloudstack.ini'. Use the argument `api_region' to select the section name, default section
        is `cloudstack'. See https://github.com/exoscale/cs for more information.
      * A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud
        Guide,../scenario_guides/guide_cloudstack.html).
      * This module supports check mode.


REQUIREMENTS:  python >= 2.6, cs >= 0.6.10

AUTHOR: Ren√© Moser (@resmo)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

- name: Create a network
  cs_network:
    name: my network
    zone: gva-01
    network_offering: DefaultIsolatedNetworkOfferingWithSourceNatService
    network_domain: example.com
  delegate_to: localhost

- name: Create a VPC tier
  cs_network:
    name: my VPC tier 1
    zone: gva-01
    vpc: my VPC
    network_offering: DefaultIsolatedNetworkOfferingForVpcNetworks
    gateway: 10.43.0.1
    netmask: 255.255.255.0
    acl: my web acl
  delegate_to: localhost

- name: Update a network
  cs_network:
    name: my network
    display_text: network of domain example.local
    network_domain: example.local
  delegate_to: localhost

- name: Restart a network with clean up
  cs_network:
    name: my network
    clean_up: yes
    state: restared
  delegate_to: localhost

- name: Remove a network
  cs_network:
    name: my network
    state: absent
  delegate_to: localhost


RETURN VALUES:

---
id:
  description: UUID of the network.
  returned: success
  type: str
  sample: 04589590-ac63-4ffc-93f5-b698b8ac38b6
name:
  description: Name of the network.
  returned: success
  type: str
  sample: web project
display_text:
  description: Display text of the network.
  returned: success
  type: str
  sample: web project
dns1:
  description: IP address of the 1st nameserver.
  returned: success
  type: str
  sample: 1.2.3.4
dns2:
  description: IP address of the 2nd nameserver.
  returned: success
  type: str
  sample: 1.2.3.4
cidr:
  description: IPv4 network CIDR.
  returned: success
  type: str
  sample: 10.101.64.0/24
gateway:
  description: IPv4 gateway.
  returned: success
  type: str
  sample: 10.101.64.1
netmask:
  description: IPv4 netmask.
  returned: success
  type: str
  sample: 255.255.255.0
cidr_ipv6:
  description: IPv6 network CIDR.
  returned: if available
  type: str
  sample: 2001:db8::/64
gateway_ipv6:
  description: IPv6 gateway.
  returned: if available
  type: str
  sample: 2001:db8::1
zone:
  description: Name of zone.
  returned: success
  type: str
  sample: ch-gva-2
domain:
  description: Domain the network is related to.
  returned: success
  type: str
  sample: ROOT
account:
  description: Account the network is related to.
  returned: success
  type: str
  sample: example account
project:
  description: Name of project.
  returned: success
  type: str
  sample: Production
tags:
  description: List of resource tags associated with the network.
  returned: success
  type: list
  sample: '[ { "key": "foo", "value": "bar" } ]'
acl_type:
  description: Access type of the network (Domain, Account).
  returned: success
  type: str
  sample: Account
acl:
  description: Name of the access control list for the VPC network tier.
  returned: success
  type: str
  sample: My ACL
  version_added: '2.5'
acl_id:
  description: ID of the access control list for the VPC network tier.
  returned: success
  type: str
  sample: dfafcd55-0510-4b8c-b6c5-b8cedb4cfd88
  version_added: '2.5'
broadcast_domain_type:
  description: Broadcast domain type of the network.
  returned: success
  type: str
  sample: Vlan
type:
  description: Type of the network.
  returned: success
  type: str
  sample: Isolated
traffic_type:
  description: Traffic type of the network.
  returned: success
  type: str
  sample: Guest
state:
  description: State of the network (Allocated, Implemented, Setup).
  returned: success
  type: str
  sample: Allocated
is_persistent:
  description: Whether the network is persistent or not.
  returned: success
  type: bool
  sample: false
network_domain:
  description: The network domain
  returned: success
  type: str
  sample: example.local
network_offering:
  description: The network offering name.
  returned: success
  type: str
  sample: DefaultIsolatedNetworkOfferingWithSourceNatService
network_offering_display_text:
  description: The network offering display text.
  returned: success
  type: str
  sample: Offering for Isolated Vpc networks with Source Nat service enabled
  version_added: '2.5'
network_offering_conserve_mode:
  description: Whether the network offering has IP conserve mode enabled or not.
  returned: success
  type: bool
  sample: false
  version_added: '2.5'
network_offering_availability:
  description: The availability of the network offering the network is created from
  returned: success
  type: str
  sample: Optional
  version_added: '2.5'
is_system:
  description: Whether the network is system related or not.
  returned: success
  type: bool
  sample: false
  version_added: '2.5'
vpc:
  description: Name of the VPC.
  returned: if available
  type: str
  sample: My VPC

