> EXO_DNS_RECORD    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/exoscale/exo_dns_record.py)

        Create, update and delete records.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        API key of the Exoscale DNS API.
        Since 2.4, the ENV variable `CLOUDSTACK_KEY' is used as default, when defined.
        [Default: (null)]
        type: str

- api_region
        Name of the ini section in the `cloustack.ini' file.
        Since 2.4, the ENV variable `CLOUDSTACK_REGION' is used as default, when defined.
        [Default: cloudstack]
        type: str

- api_secret
        Secret key of the Exoscale DNS API.
        Since 2.4, the ENV variable `CLOUDSTACK_SECRET' is used as default, when defined.
        [Default: (null)]
        type: str

- api_timeout
        HTTP timeout to Exoscale DNS API.
        Since 2.4, the ENV variable `CLOUDSTACK_TIMEOUT' is used as default, when defined.
        [Default: 10]
        type: int

- content
        Content of the record.
        Required if `state=present' or `multiple=yes'.
        (Aliases: value, address)[Default: (null)]

= domain
        Domain the record is related to.


- multiple
        Whether there are more than one records with similar `name' and `record_type'.
        Only allowed for a few record types, e.g. `record_type=A', `record_type=NS' or `record_type=MX'.
        `content' will not be updated, instead it is used as a key to find existing records.
        [Default: False]
        type: bool

- name
        Name of the record.
        [Default: ]

- prio
        Priority of the record.
        (Aliases: priority)[Default: (null)]

- record_type
        Type of the record.
        (Aliases: rtype, type)(Choices: A, ALIAS, CNAME, MX, SPF, URL, TXT, NS, SRV, NAPTR, PTR, AAAA, SSHFP, HINFO, POOL)[Default: A]

- state
        State of the record.
        (Choices: present, absent)[Default: present]

- ttl
        TTL of the record in seconds.
        [Default: 3600]

- validate_certs
        Validate SSL certs of the Exoscale DNS API.
        [Default: True]
        type: bool


NOTES:
      * As Exoscale DNS uses the same API key and secret for all services, we reuse the config used for Exscale Compute based on
        CloudStack. The config is read from several locations, in the following order. The `CLOUDSTACK_KEY', `CLOUDSTACK_SECRET'
        environment variables. A `CLOUDSTACK_CONFIG' environment variable pointing to an `.ini' file, A `cloudstack.ini' file in
        the current working directory. A `.cloudstack.ini' file in the users home directory. Optionally multiple credentials and
        endpoints can be specified using ini sections in `cloudstack.ini'. Use the argument `api_region' to select the section
        name, default section is `cloudstack'.
      * This module does not support multiple A records and will complain properly if you try.
      * More information Exoscale DNS can be found on https://community.exoscale.ch/documentation/dns/.
      * This module supports check mode and diff.


REQUIREMENTS:  python >= 2.6

AUTHOR: Ren√© Moser (@resmo)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create or update an A record
  local_action:
    module: exo_dns_record
    name: web-vm-1
    domain: example.com
    content: 1.2.3.4

- name: Update an existing A record with a new IP
  local_action:
    module: exo_dns_record
    name: web-vm-1
    domain: example.com
    content: 1.2.3.5

- name: Create another A record with same name
  local_action:
    module: exo_dns_record
    name: web-vm-1
    domain: example.com
    content: 1.2.3.6
    multiple: yes

- name: Create or update a CNAME record
  local_action:
    module: exo_dns_record
    name: www
    domain: example.com
    record_type: CNAME
    content: web-vm-1

- name: Create another MX record
  local_action:
    module: exo_dns_record
    domain: example.com
    record_type: MX
    content: mx1.example.com
    prio: 10
    multiple: yes

- name: Delete one MX record out of multiple
  local_action:
    module: exo_dns_record
    domain: example.com
    record_type: MX
    content: mx1.example.com
    multiple: yes
    state: absent

- name: Remove a single A record
  local_action:
    module: exo_dns_record
    name: www
    domain: example.com
    state: absent


RETURN VALUES:

---
exo_dns_record:
    description: API record results
    returned: success
    type: complex
    contains:
        content:
            description: value of the record
            returned: success
            type: str
            sample: 1.2.3.4
        created_at:
            description: When the record was created
            returned: success
            type: str
            sample: "2016-08-12T15:24:23.989Z"
        domain:
            description: Name of the domain
            returned: success
            type: str
            sample: example.com
        domain_id:
            description: ID of the domain
            returned: success
            type: int
            sample: 254324
        id:
            description: ID of the record
            returned: success
            type: int
            sample: 254324
        name:
            description: name of the record
            returned: success
            type: str
            sample: www
        parent_id:
            description: ID of the parent
            returned: success
            type: int
            sample: null
        prio:
            description: Priority of the record
            returned: success
            type: int
            sample: 10
        record_type:
            description: Priority of the record
            returned: success
            type: str
            sample: A
        system_record:
            description: Whether the record is a system record or not
            returned: success
            type: bool
            sample: false
        ttl:
            description: Time to live of the record
            returned: success
            type: int
            sample: 3600
        updated_at:
            description: When the record was updated
            returned: success
            type: str
            sample: "2016-08-12T15:24:23.989Z"

