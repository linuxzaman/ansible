> CLOUDSCALE_SERVER    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudscale/cloudscale_server.py)

        Create, update, start, stop and delete servers on the cloudscale.ch IaaS service.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- anti_affinity_with
        UUID of another server to create an anti-affinity group with.
        Mutually exclusive with `server_groups'.
        Deprecated, removed in version 2.11.
        [Default: (null)]
        type: str

- api_timeout
        Timeout in seconds for calls to the cloudscale.ch API.
        [Default: 30]
        version_added: 2.5

- api_token
        cloudscale.ch API token.
        This can also be passed in the `CLOUDSCALE_API_TOKEN' environment variable.
        [Default: (null)]

- bulk_volume_size_gb
        Size of the bulk storage volume in GB.
        No bulk storage volume if not set.
        [Default: (null)]
        type: int

- flavor
        Flavor of the server.
        [Default: (null)]
        type: str

- force
        Allow to stop the running server for updating if necessary.
        [Default: False]
        type: bool
        version_added: 2.8

- image
        Image used to create the server.
        [Default: (null)]

- name
        Name of the Server.
        Either `name' or `uuid' are required.
        [Default: (null)]
        type: str

- password
        Password for the server.
        [Default: (null)]
        type: str
        version_added: 2.8

- server_groups
        List of UUID or names of server groups.
        Mutually exclusive with `anti_affinity_with'.
        [Default: (null)]
        type: list
        version_added: 2.8

- ssh_keys
        List of SSH public keys.
        Use the full content of your .pub file here.
        [Default: (null)]
        type: list

- state
        State of the server.
        (Choices: running, stopped, absent)[Default: running]
        type: str

- use_ipv6
        Enable IPv6 on the public network interface.
        [Default: True]
        type: bool

- use_private_network
        Attach a private network interface to the server.
        [Default: False]
        type: bool

- use_public_network
        Attach a public network interface to the server.
        [Default: True]
        type: bool

- user_data
        Cloud-init configuration (cloud-config) data to use for the server.
        [Default: (null)]
        type: str

- uuid
        UUID of the server.
        Either `name' or `uuid' are required.
        [Default: (null)]
        type: str

- volume_size_gb
        Size of the root volume in GB.
        [Default: 10]
        type: int


NOTES:
      * Since version 2.8, `uuid' and `name' or not mututally exclusive anymore.
      * If `uuid' option is provided, it takes precedence over `name' for server selection. This allows to update the server's
        name.
      * If no `uuid' option is provided, `name' is used for server selection. If more than one server with this name exists,
        execution is aborted.
      * Only the `name' and `flavor' are evaluated for the update.
      * The option `force=true' must be given to allow the reboot of existing running servers for applying the changes.
      * Instead of the api_token parameter the `CLOUDSCALE_API_TOKEN' environment variable can be used.
      * All operations are performed using the cloudscale.ch public API v1.
      * For details consult the full API documentation: https://www.cloudscale.ch/en/api/v1.
      * A valid API token is required for all operations. You can create as many tokens as you like using the cloudscale.ch control
        panel at https://control.cloudscale.ch.


AUTHOR: Gaudenz Steinlin (@gaudenz), Ren√© Moser (@resmo)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create and start a server with an existing server group (shiny-group)
- name: Start cloudscale.ch server
  cloudscale_server:
    name: my-shiny-cloudscale-server
    image: debian-8
    flavor: flex-4
    ssh_keys: ssh-rsa XXXXXXXXXX...XXXX ansible@cloudscale
    server_groups: shiny-group
    use_private_network: True
    bulk_volume_size_gb: 100
    api_token: xxxxxx

# Start another server in anti-affinity (server group shiny-group)
- name: Start second cloudscale.ch server
  cloudscale_server:
    name: my-other-shiny-server
    image: ubuntu-16.04
    flavor: flex-8
    ssh_keys: ssh-rsa XXXXXXXXXXX ansible@cloudscale
    server_groups: shiny-group
    api_token: xxxxxx


# Force to update the flavor of a running server
- name: Start cloudscale.ch server
  cloudscale_server:
    name: my-shiny-cloudscale-server
    image: debian-8
    flavor: flex-8
    force: yes
    ssh_keys: ssh-rsa XXXXXXXXXX...XXXX ansible@cloudscale
    use_private_network: True
    bulk_volume_size_gb: 100
    api_token: xxxxxx
  register: server1

# Stop the first server
- name: Stop my first server
  cloudscale_server:
    uuid: '{{ server1.uuid }}'
    state: stopped
    api_token: xxxxxx

# Delete my second server
- name: Delete my second server
  cloudscale_server:
    name: my-other-shiny-server
    state: absent
    api_token: xxxxxx

# Start a server and wait for the SSH host keys to be generated
- name: Start server and wait for SSH host keys
  cloudscale_server:
    name: my-cloudscale-server-with-ssh-key
    image: debian-8
    flavor: flex-4
    ssh_keys: ssh-rsa XXXXXXXXXXX ansible@cloudscale
    api_token: xxxxxx
  register: server
  until: server.ssh_fingerprints is defined and server.ssh_fingerprints
  retries: 60
  delay: 2


RETURN VALUES:

href:
  description: API URL to get details about this server
  returned: success when not state == absent
  type: str
  sample: https://api.cloudscale.ch/v1/servers/cfde831a-4e87-4a75-960f-89b0148aa2cc
uuid:
  description: The unique identifier for this server
  returned: success
  type: str
  sample: cfde831a-4e87-4a75-960f-89b0148aa2cc
name:
  description: The display name of the server
  returned: success
  type: str
  sample: its-a-me-mario.cloudscale.ch
state:
  description: The current status of the server
  returned: success
  type: str
  sample: running
flavor:
  description: The flavor that has been used for this server
  returned: success when not state == absent
  type: str
  sample: flex-8
image:
  description: The image used for booting this server
  returned: success when not state == absent
  type: str
  sample: debian-8
volumes:
  description: List of volumes attached to the server
  returned: success when not state == absent
  type: list
  sample: [ {"type": "ssd", "device": "/dev/vda", "size_gb": "50"} ]
interfaces:
  description: List of network ports attached to the server
  returned: success when not state == absent
  type: list
  sample: [ { "type": "public", "addresses": [ ... ] } ]
ssh_fingerprints:
  description: A list of SSH host key fingerprints. Will be null until the host keys could be retrieved from the server.
  returned: success when not state == absent
  type: list
  sample: ["ecdsa-sha2-nistp256 SHA256:XXXX", ... ]
ssh_host_keys:
  description: A list of SSH host keys. Will be null until the host keys could be retrieved from the server.
  returned: success when not state == absent
  type: list
  sample: ["ecdsa-sha2-nistp256 XXXXX", ... ]
anti_affinity_with:
  description:
  - List of servers in the same anti-affinity group
  - Deprecated, removed in version 2.11.
  returned: success when not state == absent
  type: list
  sample: []
server_groups:
  description: List of server groups
  returned: success when not state == absent
  type: list
  sample: [ {"href": "https://api.cloudscale.ch/v1/server-groups/...", "uuid": "...", "name": "db-group"} ]
  version_added: '2.8'

