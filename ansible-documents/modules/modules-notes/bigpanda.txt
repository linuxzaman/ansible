> BIGPANDA    (/usr/lib/python2.7/dist-packages/ansible/modules/monitoring/bigpanda.py)

        Notify BigPanda when deployments start and end (successfully or not). Returns a deployment object containing all the parameters
        for future module calls.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= component
        The name of the component being deployed. Ex: billing
        (Aliases: name)

- description
        Free text description of the deployment.
        [Default: (null)]

- env
        The environment name, typically 'production', 'staging', etc.
        [Default: (null)]

- hosts
        Name of affected host name. Can be a list.
        (Aliases: host)[Default: machine's hostname]

- owner
        The person responsible for the deployment.
        [Default: (null)]

= state
        State of the deployment.
        (Choices: started, finished, failed)

= token
        API token.


- url
        Base URL of the API server.
        [Default: https://api.bigpanda.io]

- validate_certs
        If `no', SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using
        self-signed certificates.
        [Default: yes]
        type: bool

= version
        The deployment version.



AUTHOR: Hagai Kariti (@hkariti)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- bigpanda:
    component: myapp
    version: '1.3'
    token: '{{ bigpanda_token }}'
    state: started

- bigpanda:
    component: myapp
    version: '1.3'
    token: '{{ bigpanda_token }}'
    state: finished

# If outside servers aren't reachable from your machine, use delegate_to and override hosts:
- bigpanda:
    component: myapp
    version: '1.3'
    token: '{{ bigpanda_token }}'
    hosts: '{{ ansible_hostname }}'
    state: started
  delegate_to: localhost
  register: deployment

- bigpanda:
    component: '{{ deployment.component }}'
    version: '{{ deployment.version }}'
    token: '{{ deployment.token }}'
    state: finished
  delegate_to: localhost


