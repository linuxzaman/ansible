> BIGIP_DEVICE_LICENSE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_device_license.py)

        Manage license installation and activation on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- accept_eula
        Declares whether you accept the BIG-IP EULA or not. By default, this value is `no'. You must specifically declare that you have
        viewed and accepted the license. This module will not present you with that EULA though, so it is incumbent on you to read it.
        The EULA can be found here; https://support.f5.com/csp/article/K12902.
        This parameter is not required when `state' is `absent' and will be ignored if it is provided.
        [Default: False]
        type: bool

- license_key
        The registration key to use to license the BIG-IP.
        This parameter is required if the `state' is equal to `present'.
        This parameter is not required when `state' is `absent' and will be ignored if it is provided.
        [Default: (null)]
        type: str

- license_server
        The F5 license server to use when getting a license and validating a dossier.
        This parameter is required if the `state' is equal to `present'.
        This parameter is not required when `state' is `absent' and will be ignored if it is provided.
        [Default: activate.f5.com]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        The state of the license on the system.
        When `present', only guarantees that a license is there.
        When `latest', ensures that the license is always valid.
        When `absent', removes the license on the system.
        When `revoked', removes the license on the system and revokes its future usage on the F5 license servers.
        (Choices: absent, present, revoked)[Default: present]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: License BIG-IP using a key
  bigip_device_license:
    license_key: "XXXXX-XXXXX-XXXXX-XXXXX-XXXXXXX"
    provider:
      server: "lb.mydomain.com"
      user: "admin"
      password: "secret"
  delegate_to: localhost

- name: Remove the license from the system
  bigip_device_license:
    state: "absent"
    provider:
      server: "lb.mydomain.com"
      user: "admin"
      password: "secret"
  delegate_to: localhost


RETURN VALUES:

# only common fields returned

