> OVIRT_AUTH    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_auth.py)

        This module authenticates to oVirt/RHV engine and creates SSO token, which should be later used in all other oVirt/RHV modules,
        so all modules don't need to perform login and logout. This module returns an Ansible fact called `ovirt_auth'. Every module can
        use this fact as `auth' parameter, to perform authentication.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- ca_file
        A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA
        certificates. If `ca_file' parameter is not set, system wide CA certificate store is used. Default value is set by `OVIRT_CAFILE'
        environment variable.
        [Default: (null)]

- compress
        A boolean flag indicating if the SDK should ask the server to send compressed responses. The default is `True'. Note that this is
        a hint for the server, and that it may return uncompressed data even when this parameter is set to `True'.
        [Default: (null)]
        type: bool

- headers
        A dictionary of HTTP headers to be added to each API call.
        [Default: (null)]
        version_added: 2.4

- hostname
        A string containing the hostname of the server. For example: `server.example.com'. Default value is set by `OVIRT_HOSTNAME'
        environment variable.
        Either `url' or `hostname' is required.
        [Default: (null)]
        version_added: 2.6

- insecure
        A boolean flag that indicates if the server TLS certificate and host name should be checked.
        [Default: (null)]
        type: bool

- kerberos
        A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
        [Default: (null)]
        type: bool

- password
        The password of the user. Default value is set by `OVIRT_PASSWORD' environment variable.
        [Default: (null)]

- state
        Specifies if a token should be created or revoked.
        (Choices: present, absent)[Default: present]

- timeout
        The maximum total time to wait for the response, in seconds. A value of zero (the default) means wait forever. If the timeout
        expires before the response is received an exception will be raised.
        [Default: (null)]

- token
        SSO token to be used instead of login with username/password. Default value is set by `OVIRT_TOKEN' environment variable.
        [Default: (null)]
        version_added: 2.5
        

- url
        A string containing the API URL of the server. For example: `https://server.example.com/ovirt-engine/api'. Default value is set
        by `OVIRT_URL' environment variable.
        Either `url' or `hostname' is required.
        [Default: (null)]

- username
        The name of the user. For example: `admin@internal' Default value is set by `OVIRT_USERNAME' environment variable.
        [Default: (null)]


NOTES:
      * Everytime you use ovirt_auth module to obtain ticket, you need to also revoke the ticket, when you no longer need it,
        otherwise the ticket would be revoked by engine when it expires. For an example of how to achieve that, please take a look
        at `examples' section.
      * In order to use this module you have to install oVirt/RHV Python SDK. To ensure it's installed with correct version you can
        create the following task: `pip: name=ovirt-engine-sdk-python version=4.3.0'
      * Note that in oVirt/RHV 4.1 if you want to use a user which is not administrator you must enable the
        `ENGINE_API_FILTER_BY_DEFAULT' variable in engine. In oVirt/RHV 4.2 and later it's enabled by default.


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Ondra Machacek (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- block:
       # Create a vault with `ovirt_password` variable which store your
       # oVirt/RHV user's password, and include that yaml file with variable:
       - include_vars: ovirt_password.yml

       - name: Obtain SSO token with using username/password credentials
         ovirt_auth:
           url: https://ovirt.example.com/ovirt-engine/api
           username: admin@internal
           ca_file: ca.pem
           password: "{{ ovirt_password }}"

       # Previous task generated I(ovirt_auth) fact, which you can later use
       # in different modules as follows:
       - ovirt_vms:
           auth: "{{ ovirt_auth }}"
           state: absent
           name: myvm

    always:
      - name: Always revoke the SSO token
        ovirt_auth:
          state: absent
          ovirt_auth: "{{ ovirt_auth }}"

# When user will set following environment variables:
#   OVIRT_URL = https://fqdn/ovirt-engine/api
#   OVIRT_USERNAME = admin@internal
#   OVIRT_PASSWORD = the_password
# User can login the oVirt using environment variable instead of variables
# in yaml file.
# This is mainly useful when using Ansible Tower or AWX, as it will work
# for Red Hat Virtualization creadentials type.
  - name: Obtain SSO token
    ovirt_auth:
      state: present


RETURN VALUES:

ovirt_auth:
    description: Authentication facts, needed to perform authentication to oVirt/RHV.
    returned: success
    type: complex
    contains:
        token:
            description: SSO token which is used for connection to oVirt/RHV engine.
            returned: success
            type: str
            sample: "kdfVWp9ZgeewBXV-iq3Js1-xQJZPSEQ334FLb3eksoEPRaab07DhZ8ED8ghz9lJd-MQ2GqtRIeqhvhCkrUWQPw"
        url:
            description: URL of the oVirt/RHV engine API endpoint.
            returned: success
            type: str
            sample: "https://ovirt.example.com/ovirt-engine/api"
        ca_file:
            description: CA file, which is used to verify SSL/TLS connection.
            returned: success
            type: path
            sample: "ca.pem"
        insecure:
            description: Flag indicating if insecure connection is used.
            returned: success
            type: bool
            sample: False
        timeout:
            description: Number of seconds to wait for response.
            returned: success
            type: int
            sample: 0
        compress:
            description: Flag indicating if compression is used for connection.
            returned: success
            type: bool
            sample: True
        kerberos:
            description: Flag indicating if kerberos is used for authentication.
            returned: success
            type: bool
            sample: False
        headers:
            description: Dictionary of HTTP headers to be added to each API call.
            returned: success
            type: dict

