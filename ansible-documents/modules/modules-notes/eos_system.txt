> EOS_SYSTEM    (/usr/lib/python2.7/dist-packages/ansible/modules/network/eos/eos_system.py)

        This module provides declarative management of node system attributes on Arista EOS devices.  It provides an option to configure
        host system parameters or remove those parameters from the device active configuration.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- auth_pass
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes' with `become_pass'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' is false, then this
        argument does nothing. If the value is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS' will
        be used instead.
        [Default: (null)]
        type: str

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

- domain_name
        Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be
        appended to the `hostname' to create a fully-qualified domain name.
        [Default: (null)]

- domain_search
        Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a
        list of names and will be reconciled with the current active configuration on the running node.
        (Aliases: domain_list)[Default: (null)]

- hostname
        Configure the device hostname parameter. This option takes an ASCII string value.
        [Default: (null)]

- lookup_source
        Provides one or more source interfaces to use for performing DNS lookups.  The interface provided in `lookup_source' can only
        exist in a single VRF.  This argument accepts either a list of interface names or a list of hashes that configure the interface
        name and VRF name.  See examples.
        [Default: (null)]

- name_servers
        List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts either a list of DNS
        servers or a list of hashes that configure the name server and VRF name.  See examples.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `eapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `eapi'.  The port value will default to the
              appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports. If the value is not
              specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - eapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: true
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=eapi'.  If
              the transport argument is not eapi, this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the eAPI
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not eapi, this value is ignored.
            type: bool
        
        type: dict

- state
        State of the configuration values in the device's current active configuration.  When set to `present', the values should be
        configured in the device active configuration and when set to `absent' the values should not be in the device active
        configuration
        (Choices: present, absent)[Default: present]


NOTES:
      * Tested against EOS 4.15
      * For information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Arista EOS devices see the `Arista integration page
        <https://www.ansible.com/ansible-arista-networks>`_.


AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: configure hostname and domain-name
  eos_system:
    hostname: eos01
    domain_name: test.example.com

- name: remove configuration
  eos_system:
    state: absent

- name: configure DNS lookup sources
  eos_system:
    lookup_source: Management1

- name: configure DNS lookup sources with VRF support
  eos_system:
      lookup_source:
        - interface: Management1
          vrf: mgmt
        - interface: Ethernet1
          vrf: myvrf

- name: configure name servers
  eos_system:
    name_servers:
      - 8.8.8.8
      - 8.8.4.4

- name: configure name servers with VRF support
  eos_system:
    name_servers:
      - { server: 8.8.8.8, vrf: mgmt }
      - { server: 8.8.4.4, vrf: mgmt }


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - hostname eos01
    - ip domain-name test.example.com
session_name:
  description: The EOS config session name used to load the configuration
  returned: changed
  type: str
  sample: ansible_1479315771

