> SENSU_CLIENT    (/usr/lib/python2.7/dist-packages/ansible/modules/monitoring/sensu_client.py)

        Manages Sensu client configuration. For more information, refer to the Sensu documentation:
        https://sensuapp.org/docs/latest/reference/clients.html

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- address
        An address to help identify and reach the client. This is only informational, usually an IP address or hostname.
        [Default: Non-loopback IPv4 address as determined by Ruby Socket.ip_address_list (provided by Sensu)]

- chef
        The chef definition scope, used to configure the Sensu Enterprise Chef integration (Sensu Enterprise users only).
        [Default: (null)]

- deregister
        If a deregistration event should be created upon Sensu client process stop.
        [Default: no]
        type: bool

- deregistration
        The deregistration definition scope, used to configure automated Sensu client de-registration.
        [Default: (null)]

- ec2
        The ec2 definition scope, used to configure the Sensu Enterprise AWS EC2 integration (Sensu Enterprise users only).
        [Default: (null)]

- keepalive
        The keepalive definition scope, used to configure Sensu client keepalives behavior (e.g. keepalive thresholds, etc).
        [Default: (null)]

- keepalives
        If Sensu should monitor keepalives for this client.
        [Default: yes]
        type: bool

- name
        A unique name for the client. The name cannot contain special characters or spaces.
        [Default: System hostname as determined by Ruby Socket.gethostname (provided by Sensu)]

- puppet
        The puppet definition scope, used to configure the Sensu Enterprise Puppet integration (Sensu Enterprise users only).
        [Default: (null)]

- redact
        Client definition attributes to redact (values) when logging and sending client keepalives.
        [Default: (null)]

- registration
        The registration definition scope, used to configure Sensu registration event handlers.
        [Default: (null)]

- safe_mode
        If safe mode is enabled for the client. Safe mode requires local check definitions in order to accept a check request and execute
        the check.
        [Default: no]
        type: bool

- servicenow
        The servicenow definition scope, used to configure the Sensu Enterprise ServiceNow integration (Sensu Enterprise users only).
        [Default: (null)]

- socket
        The socket definition scope, used to configure the Sensu client socket.
        [Default: (null)]

- state
        Whether the client should be present or not
        (Choices: present, absent)[Default: present]

= subscriptions
        An array of client subscriptions, a list of roles and/or responsibilities assigned to the system (e.g. webserver).
        These subscriptions determine which monitoring checks are executed by the client, as check requests are sent to subscriptions.
        The subscriptions array items must be strings.



NOTES:
      * Check mode is supported


AUTHOR: David Moreau Simard (@dmsimard)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Minimum possible configuration
- name: Configure Sensu client
  sensu_client:
    subscriptions:
      - default

# With customization
- name: Configure Sensu client
  sensu_client:
    name: "{{ ansible_fqdn }}"
    address: "{{ ansible_default_ipv4['address'] }}"
    subscriptions:
      - default
      - webserver
    redact:
      - password
    socket:
      bind: 127.0.0.1
      port: 3030
    keepalive:
      thresholds:
        warning: 180
        critical: 300
      handlers:
        - email
      custom:
        - broadcast: irc
      occurrences: 3
  register: client
  notify:
    - Restart sensu-client

- name: Secure Sensu client configuration file
  file:
    path: "{{ client['file'] }}"
    owner: "sensu"
    group: "sensu"
    mode: "0600"

- name: Delete the Sensu client configuration
  sensu_client:
    state: "absent"


RETURN VALUES:

config:
  description: Effective client configuration, when state is present
  returned: success
  type: dict
  sample: {'name': 'client', 'subscriptions': ['default']}
file:
  description: Path to the client configuration file
  returned: success
  type: str
  sample: "/etc/sensu/conf.d/client.json"

