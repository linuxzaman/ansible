> PROXYSQL_GLOBAL_VARIABLES    (/usr/lib/python2.7/dist-packages/ansible/modules/database/proxysql/proxysql_global_variables.py)

        The [proxysql_global_variables] module gets or sets the proxysql global variables.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- config_file
        Specify a config file from which `login_user' and `login_password' are to be read.
        [Default: ]
        type: path

- load_to_runtime
        Dynamically load config to runtime memory.
        [Default: yes]
        type: bool

- login_host
        The host used to connect to ProxySQL admin interface.
        [Default: 127.0.0.1]
        type: str

- login_password
        The password used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str

- login_port
        The port used to connect to ProxySQL admin interface.
        [Default: 6032]
        type: int

- login_user
        The username used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str

- save_to_disk
        Save config to sqlite db on disk to persist the configuration.
        [Default: yes]
        type: bool

- value
        Defines a value the variable specified using `variable' should be set to.
        [Default: (null)]

= variable
        Defines which variable should be returned, or if `value' is specified which variable should be updated.



REQUIREMENTS:  PyMySQL (Python 2.7 and Python 3.X), or, MySQLdb (Python 2.x)

AUTHOR: Ben Mildren (@bmildren)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

---
# This example sets the value of a variable, saves the mysql admin variables
# config to disk, and dynamically loads the mysql admin variables config to
# runtime. It uses supplied credentials to connect to the proxysql admin
# interface.

- proxysql_global_variables:
    login_user: 'admin'
    login_password: 'admin'
    variable: 'mysql-max_connections'
    value: 4096

# This example gets the value of a variable.  It uses credentials in a
# supplied config file to connect to the proxysql admin interface.

- proxysql_global_variables:
    config_file: '~/proxysql.cnf'
    variable: 'mysql-default_query_delay'


RETURN VALUES:

stdout:
    description: Returns the mysql variable supplied with it's associted value.
    returned: Returns the current variable and value, or the newly set value
              for the variable supplied..
    type: dict
    "sample": {
        "changed": false,
        "msg": "The variable is already been set to the supplied value",
        "var": {
            "variable_name": "mysql-poll_timeout",
            "variable_value": "3000"
        }
    }

