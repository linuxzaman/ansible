> S3_LIFECYCLE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/s3_lifecycle.py)

        Manage s3 bucket lifecycle rules in AWS

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

- expiration_date
        Indicates the lifetime of the objects that are subject to the rule by the date they will expire. The value must be ISO-8601
        format, the time must be midnight and a GMT timezone must be specified.
        [Default: (null)]

- expiration_days
        Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
        [Default: (null)]

= name
        Name of the s3 bucket


- noncurrent_version_expiration_days
        Delete noncurrent versions this many days after they become noncurrent
        [Default: (null)]
        version_added: 2.6
        

- noncurrent_version_storage_class
        Transition noncurrent versions to this storage class
        (Choices: glacier, onezone_ia, standard_ia)[Default: glacier]
        version_added: 2.6
        

- noncurrent_version_transition_days
        Transition noncurrent versions this many days after they become noncurrent
        [Default: (null)]
        version_added: 2.6
        

- noncurrent_version_transitions
        A list of transition behaviors to be applied to noncurrent versions for the rule. Each storage class may be used only once. Each
        transition behavior contains these elements   `transition_days'   `storage_class'
        [Default: (null)]
        version_added: 2.6
        

- prefix
        Prefix identifying one or more objects to which the rule applies.  If no prefix is specified, the rule will apply to the whole
        bucket.
        [Default: (null)]

- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- purge_transitions
        "Whether to replace all the current transition(s) with the new transition(s). When false, the provided transition(s) will be
        added, replacing transitions with the same storage_class. When true, existing transitions will be removed and replaced with the
        new transition(s)
        [Default: True]
        type: bool
        version_added: 2.6
        

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- rule_id
        Unique identifier for the rule. The value cannot be longer than 255 characters. A unique value for the rule will be generated if
        no value is provided.
        [Default: (null)]

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

- state
        Create or remove the lifecycle rule
        (Choices: present, absent)[Default: present]

- status
        If 'enabled', the rule is currently being applied. If 'disabled', the rule is not currently being applied.
        (Choices: enabled, disabled)[Default: enabled]

- storage_class
        The storage class to transition to. Currently there are two supported values - 'glacier',  'onezone_ia', or 'standard_ia'.
        The 'standard_ia' class is only being available from Ansible version 2.2.
        (Choices: glacier, onezone_ia, standard_ia)[Default: glacier]

- transition_date
        Indicates the lifetime of the objects that are subject to the rule by the date they will transition to a different storage class.
        The value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified. If transition_days is not
        specified, this parameter is required."
        [Default: (null)]

- transition_days
        Indicates when, in days, an object transitions to a different storage class. If transition_date is not specified, this parameter
        is required.
        [Default: (null)]

- transitions
        A list of transition behaviors to be applied to the rule. Each storage class may be used only once. Each transition behavior may
        contain these elements `transition_days' `transition_date' `storage_class'
        [Default: (null)]
        version_added: 2.6
        

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5


NOTES:
      * If specifying expiration time as days then transition time must also be specified in days
      * If specifying expiration time as a date then transition time must also be specified as a date
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, python >= 2.6, python-dateutil

AUTHOR: Rob White (@wimnat)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

# Note: These examples do not set authentication details, see the AWS Guide for details.

# Configure a lifecycle rule on a bucket to expire (delete) items with a prefix of /logs/ after 30 days
- s3_lifecycle:
    name: mybucket
    expiration_days: 30
    prefix: /logs/
    status: enabled
    state: present

# Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier after 7 days and then delete after 90 days
- s3_lifecycle:
    name: mybucket
    transition_days: 7
    expiration_days: 90
    prefix: /logs/
    status: enabled
    state: present

# Configure a lifecycle rule to transition all items with a prefix of /logs/ to glacier on 31 Dec 2020 and then delete on 31 Dec 2030.
# Note that midnight GMT must be specified.
# Be sure to quote your date strings
- s3_lifecycle:
    name: mybucket
    transition_date: "2020-12-30T00:00:00.000Z"
    expiration_date: "2030-12-30T00:00:00.000Z"
    prefix: /logs/
    status: enabled
    state: present

# Disable the rule created above
- s3_lifecycle:
    name: mybucket
    prefix: /logs/
    status: disabled
    state: present

# Delete the lifecycle rule created above
- s3_lifecycle:
    name: mybucket
    prefix: /logs/
    state: absent

# Configure a lifecycle rule to transition all backup files older than 31 days in /backups/ to standard infrequent access class.
- s3_lifecycle:
    name: mybucket
    prefix: /backups/
    storage_class: standard_ia
    transition_days: 31
    state: present
    status: enabled

# Configure a lifecycle rule to transition files to infrequent access after 30 days and glacier after 90
- s3_lifecycle:
    name: mybucket
    prefix: /logs/
    state: present
    status: enabled
    transitions:
      - transition_days: 30
        storage_class: standard_ia
      - transition_days: 90
        storage_class: glacier


