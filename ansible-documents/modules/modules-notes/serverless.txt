> SERVERLESS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/misc/serverless.py)

        Provides support for managing Serverless Framework (https://serverless.com/) project deployments and stacks.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- deploy
        Whether or not to deploy artifacts after building them.
        When this option is `false' all the functions will be built, but no stack update will be run to send them out.
        This is mostly useful for generating artifacts to be stored/deployed elsewhere.
        [Default: True]
        type: bool

- force
        Whether or not to force full deployment, equivalent to serverless `--force' option.
        [Default: False]
        type: bool
        version_added: 2.7

- functions
        A list of specific functions to deploy.
        If this is not provided, all functions in the service will be deployed.
        [Default: []]
        type: list

- region
        AWS region to deploy the service to.
        This parameter defaults to `us-east-1'.
        [Default: (null)]
        type: str

- serverless_bin_path
        The path of a serverless framework binary relative to the 'service_path' eg. node_module/.bin/serverless
        [Default: (null)]
        type: path
        version_added: 2.4

= service_path
        The path to the root of the Serverless Service to be operated on.

        type: path

- stage
        The name of the serverless framework project stage to deploy to.
        This uses the serverless framework default "dev".
        [Default: (null)]
        type: str

- state
        Goal state of given stage/project.
        (Choices: absent, present)[Default: present]
        type: str

- verbose
        Shows all stack events during deployment, and display any Stack Output.
        [Default: False]
        type: bool
        version_added: 2.7


NOTES:
      * Currently, the `serverless' command must be in the path of the node executing the task. In the future this may be a flag.


REQUIREMENTS:  serverless, yaml

AUTHOR: Ryan Scott Brown (@ryansb)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Basic deploy of a service
  serverless:
    service_path: '{{ project_dir }}'
    state: present

- name: Deploy specific functions
  serverless:
    service_path: '{{ project_dir }}'
    functions:
      - my_func_one
      - my_func_two

- name: Deploy a project, then pull its resource list back into Ansible
  serverless:
    stage: dev
    region: us-east-1
    service_path: '{{ project_dir }}'
  register: sls

# The cloudformation stack is always named the same as the full service, so the
# cloudformation_facts module can get a full list of the stack resources, as
# well as stack events and outputs
- cloudformation_facts:
    region: us-east-1
    stack_name: '{{ sls.service_name }}'
    stack_resources: true

- name: Deploy a project using a locally installed serverless binary
  serverless:
    stage: dev
    region: us-east-1
    service_path: '{{ project_dir }}'
    serverless_bin_path: node_modules/.bin/serverless


RETURN VALUES:

service_name:
  type: str
  description: The service name specified in the serverless.yml that was just deployed.
  returned: always
  sample: my-fancy-service-dev
state:
  type: str
  description: Whether the stack for the serverless project is present/absent.
  returned: always
command:
  type: str
  description: Full `serverless` command run by this module, in case you want to re-run the command outside the module.
  returned: always
  sample: serverless deploy --stage production

