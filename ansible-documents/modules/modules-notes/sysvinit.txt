> SYSVINIT    (/usr/lib/python2.7/dist-packages/ansible/modules/system/sysvinit.py)

        Controls services on target hosts that use the SysV init system.

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- arguments
        Additional arguments provided on the command line that some init scripts accept.
        (Aliases: args)[Default: (null)]

- daemonize
        Have the module daemonize as the service itself might not do so properly.
        This is useful with badly written init scripts or deamons, which commonly manifests as the task hanging as it is still holding
        the tty or the service dying when the task is over as the connection closes the session.
        [Default: False]
        type: bool

- enabled
        Whether the service should start on boot. *At least one of state and enabled are required.*
        [Default: (null)]
        type: bool

= name
        Name of the service.
        (Aliases: service)

- pattern
        A substring to look for as would be found in the output of the `ps' command as a stand-in for a status result.
        If the string is found, the service will be assumed to be running.
        This option is mainly for use with init scripts that don't support the 'status' option.
        [Default: (null)]

- runlevels
        The runlevels this script should be enabled/disabled from.
        Use this to override the defaults set by the package or init script itself.
        [Default: (null)]

- sleep
        If the service is being `restarted' or `reloaded' then sleep this many seconds between the stop and start command. This helps to
        workaround badly behaving services.
        [Default: 1]

- state
        `started'/`stopped' are idempotent actions that will not run commands unless necessary. Not all init scripts support `restarted'
        nor `reloaded' natively, so these will both trigger a stop and start as needed.
        (Choices: started, stopped, restarted, reloaded)[Default: (null)]


NOTES:
      * One option other than name is required.


REQUIREMENTS:  That the service managed has a corresponding init script.

AUTHOR: Ansible Core Team
        METADATA:
          status:
          - preview
          supported_by: core
        

EXAMPLES:

- name: make sure apache2 is started
  sysvinit:
      name: apache2
      state: started
      enabled: yes

- name: make sure apache2 is started on runlevels 3 and 5
  sysvinit:
      name: apache2
      state: started
      enabled: yes
      runlevels:
        - 3
        - 5


RETURN VALUES:

results:
    description: results from actions taken
    returned: always
    type: complex
    contains:
        "attempts": 1
        "changed": true
        "name": "apache2"
        "status": {
            "enabled": {
                "changed": true,
                "rc": 0,
                "stderr": "",
                "stdout": ""
            },
            "stopped": {
                "changed": true,
                "rc": 0,
                "stderr": "",
                "stdout": "Stopping web server: apache2.
"
            }
        }

