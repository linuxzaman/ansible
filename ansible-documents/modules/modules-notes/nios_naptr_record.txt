> NIOS_NAPTR_RECORD    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/nios/nios_naptr_record.py)

        Adds and/or removes instances of NAPTR record objects from Infoblox NIOS servers.  This module manages NIOS `record:naptr'
        objects using the Infoblox WAPI interface over REST.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- comment
        Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured
        on the object instance.
        [Default: (null)]

- extattrs
        Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value
        pairs for configuration.
        [Default: (null)]

- flags
        Configures the flags field for this NAPTR record. These control the interpretation of the fields for an NAPTR record object.
        Supported values for the flags field are "U", "S", "P" and "A".
        [Default: (null)]

= name
        Specifies the fully qualified hostname to add or remove from the system


= order
        Configures the order (0-65535) for this NAPTR record. This parameter specifies the order in which the NAPTR rules are applied
        when multiple rules are present.


= preference
        Configures the preference (0-65535) for this NAPTR record. The preference field determines the order NAPTR records are processed
        when multiple records with the same order parameter are present.


- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote instance
              of NIOS WAPI over REST
            - Value can also be specified using `INFOBLOX_HOST' environment variable.
            required: true
            type: str
          http_request_timeout:
            default: 10
            description:
            - The amount of time before to wait before receiving a response
            - Value can also be specified using `INFOBLOX_HTTP_REQUEST_TIMEOUT' environment
              variable.
            type: int
          max_results:
            default: 1000
            description:
            - Specifies the maximum number of objects to be returned, if set to a negative
              number the appliance will return an error when the number of returned objects
              would exceed the setting.
            - Value can also be specified using `INFOBLOX_MAX_RESULTS' environment variable.
            type: int
          max_retries:
            default: 3
            description:
            - Configures the number of attempted retries before the connection is declared
              usable
            - Value can also be specified using `INFOBLOX_MAX_RETRIES' environment variable.
            type: int
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote instance
              of NIOS.
            - Value can also be specified using `INFOBLOX_PASSWORD' environment variable.
            type: str
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              instance of NIOS.
            - Value can also be specified using `INFOBLOX_USERNAME' environment variable.
            type: str
          validate_certs:
            aliases:
            - ssl_verify
            default: false
            description:
            - Boolean value to enable or disable verifying SSL certificates
            - Value can also be specified using `INFOBLOX_SSL_VERIFY' environment variable.
            type: bool
          wapi_version:
            default: '2.1'
            description:
            - Specifies the version of WAPI to use
            - Value can also be specified using `INFOBLOX_WAP_VERSION' environment variable.
            - Until ansible 2.8 the default WAPI was 1.4
            type: str
        
        type: dict

- regexp
        Configures the regexp field for this NAPTR record. This is the regular expression-based rewriting rule of the NAPTR record. This
        should be a POSIX compliant regular expression, including the substitution rule and flags. Refer to RFC 2915 for the field syntax
        details.
        [Default: (null)]

= replacement
        Configures the replacement field for this NAPTR record. For nonterminal NAPTR records, this field specifies the next domain name
        to look up.


- services
        Configures the services field (128 characters maximum) for this NAPTR record. The services field contains protocol and service
        identifiers, such as "http+E2U" or "SIPS+D2T".
        [Default: (null)]

- state
        Configures the intended state of the instance of the object on the NIOS server.  When this value is set to `present', the object
        is configured on the device and when this value is set to `absent' the value is removed (if necessary) from the device.
        (Choices: present, absent)[Default: present]

- ttl
        Configures the TTL to be associated with this NAPTR record
        [Default: (null)]

= view
        Sets the DNS view to associate this a record with. The DNS view must already be configured on the system
        (Aliases: dns_view)[Default: default]


NOTES:
      * This module must be run locally, which can be achieved by specifying `connection: local'.
      * Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible.


REQUIREMENTS:  infoblox_client

AUTHOR: Blair Rampling (@brampling)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: configure a NAPTR record
  nios_naptr_record:
    name: '*.subscriber-100.ansiblezone.com'
    order: 1000
    preference: 10
    replacement: replacement1.network.ansiblezone.com
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local

- name: add a comment to an existing NAPTR record
  nios_naptr_record:
    name: '*.subscriber-100.ansiblezone.com'
    order: 1000
    preference: 10
    replacement: replacement1.network.ansiblezone.com
    comment: this is a test comment
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local

- name: remove a NAPTR record from the system
  nios_naptr_record:
    name: '*.subscriber-100.ansiblezone.com'
    order: 1000
    preference: 10
    replacement: replacement1.network.ansiblezone.com
    state: absent
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local


RETURN VALUES:
 # 
