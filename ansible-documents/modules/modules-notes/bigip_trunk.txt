> BIGIP_TRUNK    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_trunk.py)

        Manages trunks on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- description
        Description of the trunk.
        [Default: (null)]
        type: str
        version_added: 2.7
        

- frame_distribution_hash
        Specifies the basis for the hash that the system uses as the frame distribution algorithm. The system uses the resulting hash to
        determine which interface to use for forwarding traffic.
        When creating a new trunk, if this parameter is not specified, the default is `source-destination-ip'.
        When `source-destination-mac', specifies that the system bases the hash on the combined MAC addresses of the source and the
        destination.
        When `destination-mac', specifies that the system bases the hash on the MAC address of the destination.
        When `source-destination-ip', specifies that the system bases the hash on the combined IP addresses of the source and the
        destination.
        (Choices: destination-mac, source-destination-ip, source-destination-mac)[Default: (null)]
        type: str

- interfaces
        The interfaces that are part of the trunk.
        To clear the list of interfaces, specify an empty list.
        [Default: (null)]
        type: list

- lacp_enabled
        When `yes', specifies that the system supports the link aggregation control protocol (LACP), which monitors the trunk by
        exchanging control packets over the member links to determine the health of the links.
        If LACP detects a failure in a member link, it removes the link from the link aggregation.
        When creating a new trunk, if this parameter is not specified, LACP is `no'.
        LACP is disabled by default for backward compatibility. If this does not apply to your network, we recommend that you enable
        LACP.
        [Default: (null)]
        type: bool

- lacp_mode
        Specifies the operation mode for link aggregation control protocol (LACP), if LACP is enabled for the trunk.
        When creating a new trunk, if this parameter is not specified, the default is `active'.
        When `active', specifies that the system periodically sends control packets regardless of whether the partner system has issued a
        request.
        When `passive', specifies that the system sends control packets only when the partner system has issued a request.
        (Choices: active, passive)[Default: (null)]
        type: str

- lacp_timeout
        Specifies the rate at which the system sends the LACP control packets.
        When creating a new trunk, if this parameter is not specified, the default is `long'.
        When `long', specifies that the system sends an LACP control packet every 30 seconds.
        When `short', specifies that the system sends an LACP control packet every 1 seconds.
        (Choices: long, short)[Default: (null)]
        type: str

- link_selection_policy
        Specifies, once the trunk is configured, the policy that the trunk uses to determine which member link (interface) can handle new
        traffic.
        When creating a new trunk, if this value is not specific, the default is `auto'.
        When `auto', specifies that the system automatically determines which interfaces can handle new traffic. For the `auto' option,
        the member links must all be the same media type and speed.
        When `maximum-bandwidth', specifies that the system determines which interfaces can handle new traffic based on the members'
        maximum bandwidth.
        (Choices: auto, maximum-bandwidth)[Default: (null)]
        type: str

= name
        Specifies the name of the trunk.

        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

- qinq_ethertype
        Specifies the ether-type value used for the packets handled on this trunk when it is a member in a QinQ vlan.
        The ether-type can be set to any string containing a valid hexadecimal 16 bits number, or any of the well known ether-types;
        `0x8100', `0x9100', `0x88a8'.
        This parameter is not supported on Virtual Editions.
        You should always wrap this value in quotes to prevent Ansible from interpreting the value as a literal hexadecimal number and
        converting it to an integer.
        [Default: (null)]
        type: raw
        version_added: 2.7
        

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- state
        When `present', ensures that the resource exists.
        When `absent', ensures the resource is removed.
        (Choices: present, absent)[Default: present]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create a trunk on hardware
  bigip_trunk:
    name: trunk1
    interfaces:
      - 1.1
      - 1.2
    link_selection_policy: maximum-bandwidth
    frame_distribution_hash: destination-mac
    lacp_enabled: yes
    lacp_mode: passive
    lacp_timeout: short
    provider:
      password: secret
      server: lb.mydomain.com
      user: admin
  delegate_to: localhost


RETURN VALUES:

lacp_mode:
  description: Operation mode for LACP if the lacp option is enabled for the trunk.
  returned: changed
  type: str
  sample: active
lacp_timeout:
  description: Rate at which the system sends the LACP control packets.
  returned: changed
  type: str
  sample: long
link_selection_policy:
  description:
    - LACP policy that the trunk uses to determine which member link (interface)
      can handle new traffic.
  returned: changed
  type: str
  sample: auto
frame_distribution_hash:
  description: Hash that the system uses as the frame distribution algorithm.
  returned: changed
  type: str
  sample: src-dst-ipport
lacp_enabled:
  description: Whether the system supports the link aggregation control protocol (LACP) or not.
  returned: changed
  type: bool
  sample: yes
interfaces:
  description: Interfaces that are part of the trunk.
  returned: changed
  type: list
  sample: ['int1', 'int2']
description:
  description: Description of the trunk.
  returned: changed
  type: str
  sample: My trunk
qinq_ethertype:
  description: Ether-type value used for the packets handled on this trunk when it is a member in a QinQ vlan.
  returned: changed
  type: str
  sample: 0x9100

