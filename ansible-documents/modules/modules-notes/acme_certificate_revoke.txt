> ACME_CERTIFICATE_REVOKE    (/usr/lib/python2.7/dist-packages/ansible/modules/crypto/acme/acme_certificate_revoke.py)

        Allows to revoke certificates issued by a CA supporting the L(ACME protocol,https://tools.ietf.org/html/rfc8555), such as L(Let's
        Encrypt,https://letsencrypt.org/).

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- account_key_content
        Content of the ACME account RSA or Elliptic Curve key.
        Note that exactly one of `account_key_src', `account_key_content', `private_key_src' or `private_key_content' must be specified.
        `Warning': the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since
        this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their
        private keys —, this might not be acceptable.
        In case `cryptography' is used, the content is not written into a temporary file. It can still happen that it is written to disk
        by Ansible in the process of moving the module with its argument to the node where it is executed.
        [Default: (null)]
        type: str
        version_added: 2.5

- account_key_src
        Path to a file containing the ACME account RSA or Elliptic Curve key.
        RSA keys can be created with `openssl rsa ...'. Elliptic curve keys can be created with `openssl ecparam -genkey ...'. Any other
        tool creating private keys in PEM format can be used as well.
        Mutually exclusive with `account_key_content'.
        Required if `account_key_content' is not used.
        (Aliases: account_key)[Default: (null)]
        type: path

- account_uri
        If specified, assumes that the account URI is as given. If the account key does not match this account, or an account with this
        URI does not exist, the module fails.
        [Default: (null)]
        type: str
        version_added: 2.7

- acme_directory
        The ACME directory to use. This is the entry point URL to access CA server API.
        For safety reasons the default is set to the Let's Encrypt staging server (for the ACME v1 protocol). This will create
        technically correct, but untrusted certificates.
        For Let's Encrypt, all staging endpoints can be found here: https://letsencrypt.org/docs/staging-environment/
        For Let's Encrypt, the production directory URL for ACME v1 is https://acme-v01.api.letsencrypt.org/directory, and the production
        directory URL for ACME v2 is https://acme-v02.api.letsencrypt.org/directory.
        `Warning': So far, the module has only been tested against Let's Encrypt (staging and production) and against the L(Pebble
        testing server,https://github.com/letsencrypt/Pebble).
        [Default: https://acme-staging.api.letsencrypt.org/directory]
        type: str

- acme_version
        The ACME version of the endpoint.
        Must be 1 for the classic Let's Encrypt ACME endpoint, or 2 for the new standardized ACME v2 endpoint.
        (Choices: 1, 2)[Default: 1]
        type: int
        version_added: 2.5

= certificate
        Path to the certificate to revoke.

        type: path

- private_key_content
        Content of the certificate's private key.
        Note that exactly one of `account_key_src', `account_key_content', `private_key_src' or `private_key_content' must be specified.
        `Warning': the content will be written into a temporary file, which will be deleted by Ansible when the module completes. Since
        this is an important private key — it can be used to change the account key, or to revoke your certificates without knowing their
        private keys —, this might not be acceptable.
        In case `cryptography' is used, the content is not written into a temporary file. It can still happen that it is written to disk
        by Ansible in the process of moving the module with its argument to the node where it is executed.
        [Default: (null)]
        type: str

- private_key_src
        Path to the certificate's private key.
        Note that exactly one of `account_key_src', `account_key_content', `private_key_src' or `private_key_content' must be specified.
        [Default: (null)]
        type: path

- revoke_reason
        One of the revocation reasonCodes defined in L(https://tools.ietf.org/html/rfc5280#section-5.3.1, Section 5.3.1 of RFC5280).
        Possible values are `0' (unspecified), `1' (keyCompromise), `2' (cACompromise), `3' (affiliationChanged), `4' (superseded), `5'
        (cessationOfOperation), `6' (certificateHold), `8' (removeFromCRL), `9' (privilegeWithdrawn), `10' (aACompromise)
        [Default: (null)]
        type: int

- select_crypto_backend
        Determines which crypto backend to use.
        The default choice is `auto', which tries to use `cryptography' if available, and falls back to `openssl'.
        If set to `openssl', will try to use the `openssl' binary.
        If set to `cryptography', will try to use the L(cryptography,https://cryptography.io/) library.
        (Choices: auto, cryptography, openssl)[Default: auto]
        type: str
        version_added: 2.7

- validate_certs
        Whether calls to the ACME directory will validate TLS certificates.
        `Warning': Should `only ever' be set to `no' for testing purposes, for example when testing against a local Pebble server.
        [Default: True]
        type: bool
        version_added: 2.5


NOTES:
      * Exactly one of `account_key_src', `account_key_content', `private_key_src' or `private_key_content' must be specified.
      * Trying to revoke an already revoked certificate should result in an unchanged status, even if the revocation reason was
        different than the one specified here. Also, depending on the server, it can happen that some other error is returned if
        the certificate has already been revoked.
      * If a new enough version of the `cryptography' library is available (see Requirements for details), it will be used instead
        of the `openssl' binary. This can be explicitly disabled or enabled with the `select_crypto_backend' option. Note that
        using the `openssl' binary will be slower and less secure, as private key contents always have to be stored on disk (see
        `account_key_content').
      * Although the defaults are chosen so that the module can be used with the L(Let's Encrypt,https://letsencrypt.org/) CA, the
        module can in principle be used with any CA providing an ACME endpoint.


SEE ALSO:
      * The Let's Encrypt documentation
           Documentation for the Let's Encrypt Certification Authority. Provides useful information for example on rate limits.
           https://letsencrypt.org/docs/
      * Automatic Certificate Management Environment (ACME)
           The specification of the ACME protocol (RFC 8555).
           https://tools.ietf.org/html/rfc8555
      * Module acme_inspect
        Allows to debug problems.
           https://docs.ansible.com/ansible/latest/modules/acme_inspect_module.html


REQUIREMENTS:  python >= 2.6, either openssl or L(cryptography,https://cryptography.io/) >= 1.5

AUTHOR: Felix Fontein (@felixfontein)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Revoke certificate with account key
  acme_certificate_revoke:
    account_key_src: /etc/pki/cert/private/account.key
    certificate: /etc/httpd/ssl/sample.com.crt

- name: Revoke certificate with certificate's private key
  acme_certificate_revoke:
    private_key_src: /etc/httpd/ssl/sample.com.key
    certificate: /etc/httpd/ssl/sample.com.crt


RETURN VALUES:


