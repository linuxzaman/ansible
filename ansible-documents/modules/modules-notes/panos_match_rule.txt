> PANOS_MATCH_RULE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/panos/_panos_match_rule.py)

        Security policies allow you to enforce rules and take action, and can be as general or specific as needed.

DEPRECATED: 

	Reason: Consolidating code base.
	Will be removed in: Ansible 2.12
	Alternatives: Use U(https://galaxy.ansible.com/PaloAltoNetworks/paloaltonetworks) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        API key that can be used instead of `username'/`password' credentials.
        [Default: (null)]

- application
        The application.
        [Default: (null)]

- category
        URL category
        [Default: (null)]

- destination_ip
        The destination IP address.
        [Default: (null)]

- destination_port
        The destination port.
        [Default: (null)]

- destination_zone
        The destination zone.
        [Default: (null)]

= ip_address
        IP address (or hostname) of PAN-OS device being configured.


= password
        Password credentials to use for auth unless `api_key' is set.


- protocol
        The IP protocol number from 1 to 255.
        [Default: (null)]

= rule_type
        Type of rule. Valid types are `security' or `nat'.
        (Choices: security, nat)

= source_ip
        The source IP address.


- source_port
        The source port.
        [Default: (null)]

- source_user
        The source user or group.
        [Default: (null)]

- source_zone
        The source zone.
        [Default: (null)]

- to_interface
        The inbound interface in a NAT rule.
        [Default: (null)]

- username
        Username credentials to use for auth unless `api_key' is set.
        [Default: admin]

= vsys_id
        ID of the VSYS object.
        [Default: vsys1]


NOTES:
      * Checkmode is not supported.
      * Panorama NOT is supported.


REQUIREMENTS:  pan-python can be obtained from PyPI https://pypi.org/project/pan-python/, pandevice can be obtained from PyPI
        https://pypi.org/project/pandevice/

AUTHOR: Robert Hagen (@rnh556)
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

- name: check security rules for Google DNS
  panos_match_rule:
    ip_address: '{{ ip_address }}'
    username: '{{ username }}'
    password: '{{ password }}'
    rule_type: 'security'
    source_ip: '10.0.0.0'
    destination_ip: '8.8.8.8'
    application: 'dns'
    destination_port: '53'
    protocol: '17'
  register: result
- debug: msg='{{result.stdout_lines}}'

- name: check security rules inbound SSH with user match
  panos_match_rule:
    ip_address: '{{ ip_address }}'
    username: '{{ username }}'
    password: '{{ password }}'
    rule_type: 'security'
    source_ip: '0.0.0.0'
    source_user: 'mydomain\jsmith'
    destination_ip: '192.168.100.115'
    destination_port: '22'
    protocol: '6'
  register: result
- debug: msg='{{result.stdout_lines}}'

- name: check NAT rules for source NAT
  panos_match_rule:
    ip_address: '{{ ip_address }}'
    username: '{{ username }}'
    password: '{{ password }}'
    rule_type: 'nat'
    source_zone: 'Prod-DMZ'
    source_ip: '10.10.118.50'
    to_interface: 'ethernet1/2'
    destination_zone: 'Internet'
    destination_ip: '0.0.0.0'
    protocol: '6'
  register: result
- debug: msg='{{result.stdout_lines}}'

- name: check NAT rules for inbound web
  panos_match_rule:
    ip_address: '{{ ip_address }}'
    username: '{{ username }}'
    password: '{{ password }}'
    rule_type: 'nat'
    source_zone: 'Internet'
    source_ip: '0.0.0.0'
    to_interface: 'ethernet1/1'
    destination_zone: 'Prod DMZ'
    destination_ip: '192.168.118.50'
    destination_port: '80'
    protocol: '6'
  register: result
- debug: msg='{{result.stdout_lines}}'

- name: check security rules for outbound POP3 in vsys4
  panos_match_rule:
    ip_address: '{{ ip_address }}'
    username: '{{ username }}'
    password: '{{ password }}'
    vsys_id: 'vsys4'
    rule_type: 'security'
    source_ip: '10.0.0.0'
    destination_ip: '4.3.2.1'
    application: 'pop3'
    destination_port: '110'
    protocol: '6'
  register: result
- debug: msg='{{result.stdout_lines}}'


RETURN VALUES:

# Default return values

