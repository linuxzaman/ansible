> ASA_COMMAND    (/usr/lib/python2.7/dist-packages/ansible/modules/network/asa/asa_command.py)

        Sends arbitrary commands to an ASA node and returns the results read from the device. The `asa_command' module includes an
        argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

= commands
        List of commands to send to the remote device over the configured provider. The resulting output from the command is returned. If
        the `wait_for' argument is provided, the module is not returned until the condition is satisfied or the number of retires as
        expired.


- context
        Specifies which context to target if you are running in the ASA in multiple context mode. Defaults to the current context you
        login to.
        [Default: (null)]
        type: str

- interval
        Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions,
        the interval indicates how long to wait before trying the command again.
        [Default: 1]

- match
        The `match' argument is used in conjunction with the `wait_for' argument to specify the match policy.  Valid values are `all' or
        `any'.  If the value is set to `all' then all conditionals in the wait_for must be satisfied.  If the value is set to `any' then
        only one of the values must be satisfied.
        (Choices: any, all)[Default: all]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies idle timeout in seconds for the connection, in seconds. Useful if
              the console freezes before continuing. For example when saving configurations.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        

- retries
        Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device
        every retry and evaluated against the `wait_for' conditions.
        [Default: 10]

- wait_for
        List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving
        forward. If the conditional is not true within the configured number of retries, the task fails. See examples.
        (Aliases: waitfor)[Default: (null)]


NOTES:
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`


AUTHOR: Peter Sprygada (@privateip), Patrick Ogenstad (@ogenstad)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
- name: "Show the ASA version"
  asa_command:
    commands:
      - show version

- name: "Show ASA drops and memory"
  asa_command:
    commands:
      - show asp drop
      - show memory

- name: "Send repeat pings and wait for the result to pass 100%"
  asa_command:
    commands:
      - ping 8.8.8.8 repeat 20 size 350
    wait_for:
      - result[0] contains 100
    retries: 2


RETURN VALUES:

stdout:
  description: the set of responses from the commands
  returned: always
  type: list
  sample: ['...', '...']

stdout_lines:
  description: The value of stdout split into a list
  returned: always
  type: list
  sample: [['...', '...'], ['...'], ['...']]

failed_conditions:
  description: the conditionals that failed
  returned: failed
  type: list
  sample: ['...', '...']

