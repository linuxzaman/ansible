> RAX_CLB_SSL    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/rackspace/rax_clb_ssl.py)

        Set up, reconfigure, or remove SSL termination for an existing load balancer.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Rackspace API key, overrides `credentials'.
        (Aliases: password)[Default: (null)]
        type: str

- auth_endpoint
        The URI of the authentication service.
        [Default: https://identity.api.rackspacecloud.com/v2.0/]
        version_added: 1.5

- certificate
        The public SSL certificates as a string in PEM format.
        [Default: (null)]

- credentials
        File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided.
        (Aliases: creds_file)[Default: (null)]
        type: path

- enabled
        If set to "false", temporarily disable SSL termination without discarding
        existing credentials.
        [Default: True]
        type: bool

- env
        Environment as configured in `~/.pyrax.cfg', see https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-
        configuration.
        [Default: (null)]
        type: str
        version_added: 1.5

- https_redirect
        If "true", the load balancer will redirect HTTP traffic to HTTPS.
        Requires "secure_traffic_only" to be true. Incurs an implicit wait if SSL
        termination is also applied or removed.
        [Default: (null)]
        type: bool

- identity_type
        Authentication mechanism to use, such as rackspace or keystone.
        [Default: rackspace]
        version_added: 1.5

- intermediate_certificate
        One or more intermediate certificate authorities as a string in PEM
        format, concatenated into a single string.
        [Default: (null)]

= loadbalancer
        Name or ID of the load balancer on which to manage SSL termination.


- private_key
        The private SSL key as a string in PEM format.
        [Default: (null)]

- region
        Region to create an instance in.
        [Default: DFW]
        type: str

- secure_port
        The port to listen for secure traffic.
        [Default: 443]

- secure_traffic_only
        If "true", the load balancer will *only* accept secure traffic.
        [Default: False]
        type: bool

- state
        If set to "present", SSL termination will be added to this load balancer.
        If "absent", SSL termination will be removed instead.
        (Choices: present, absent)[Default: present]

- tenant_id
        The tenant ID used for authentication.
        [Default: (null)]
        version_added: 1.5

- tenant_name
        The tenant name used for authentication.
        [Default: (null)]
        version_added: 1.5

- username
        Rackspace username, overrides `credentials'.
        [Default: (null)]
        type: str

- validate_certs
        Whether or not to require SSL validation of API endpoints.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool
        version_added: 1.5

- wait
        Wait for the balancer to be in state "running" before turning.
        [Default: False]
        type: bool

- wait_timeout
        How long before "wait" gives up, in seconds.
        [Default: 300]


NOTES:
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)


REQUIREMENTS:  pyrax, python >= 2.6

AUTHOR: Ash Wilson (@smashwilson)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Enable SSL termination on a load balancer
  rax_clb_ssl:
    loadbalancer: the_loadbalancer
    state: present
    private_key: "{{ lookup('file', 'credentials/server.key' ) }}"
    certificate: "{{ lookup('file', 'credentials/server.crt' ) }}"
    intermediate_certificate: "{{ lookup('file', 'credentials/trust-chain.crt') }}"
    secure_traffic_only: true
    wait: true

- name: Disable SSL termination
  rax_clb_ssl:
    loadbalancer: "{{ registered_lb.balancer.id }}"
    state: absent
    wait: true


