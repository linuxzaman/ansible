> NETSCALER_CS_ACTION    (/usr/lib/python2.7/dist-packages/ansible/modules/network/netscaler/netscaler_cs_action.py)

        Manage content switching actions This module is intended to run either on the ansible  control node or a bastion (jumpserver)
        with access to the actual netscaler instance

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- comment
        Comments associated with this cs action.
        [Default: (null)]

- name
        Name for the content switching action. Must begin with an ASCII alphanumeric or underscore `_' character, and must contain only
        ASCII alphanumeric, underscore `_', hash `#', period `.', space ` ', colon `:', at sign `@', equal sign `=', and hyphen `-'
        characters. Can be changed after the content switching action is created.
        [Default: (null)]

= nitro_pass
        The password with which to authenticate to the netscaler node.

        type: str

- nitro_protocol
        Which protocol to use when accessing the nitro API objects.
        (Choices: http, https)[Default: http]
        type: str

- nitro_timeout
        Time in seconds until a timeout error is thrown when establishing a new session with Netscaler
        [Default: 310]
        type: float

= nitro_user
        The username with which to authenticate to the netscaler node.

        type: str

= nsip
        The ip address of the netscaler appliance where the nitro API calls will be made.
        The port can be specified with the colon (:). E.g. 192.168.1.1:555.

        type: str

- save_config
        If `yes' the module will save the configuration on the netscaler node if it makes any changes.
        The module will not save the configuration on the netscaler node if it made no changes.
        [Default: True]
        type: bool

- state
        The state of the resource being configured by the module on the netscaler node.
        When present the resource will be created if needed and configured according to the module's parameters.
        When absent the resource will be deleted from the netscaler node.
        (Choices: absent, present)[Default: present]
        type: str

- targetlbvserver
        Name of the load balancing virtual server to which the content is switched.
        [Default: (null)]

- targetvserver
        Name of the VPN virtual server to which the content is switched.
        [Default: (null)]

- targetvserverexpr
        Information about this content switching action.
        [Default: (null)]

- validate_certs
        If `no', SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed
        certificates.
        [Default: True]
        type: bool


NOTES:
      * For more information on using Ansible to manage Citrix NetScaler Network devices see https://www.ansible.com/ansible-
        netscaler.


REQUIREMENTS:  nitro python sdk

AUTHOR: George Nikolopoulos (@giorgos-nikolopoulos)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# lb_vserver_1 must have been already created with the netscaler_lb_vserver module

- name: Configure netscaler content switching action
  delegate_to: localhost
  netscaler_cs_action:
      nsip: 172.18.0.2
      nitro_user: nsroot
      nitro_pass: nsroot
      validate_certs: no

      state: present

      name: action-1
      targetlbvserver: lb_vserver_1


RETURN VALUES:

loglines:
    description: list of logged messages by the module
    returned: always
    type: list
    sample: "['message 1', 'message 2']"

msg:
    description: Message detailing the failure reason
    returned: failure
    type: str
    sample: "Action does not exist"

diff:
    description: List of differences between the actual configured object and the configuration specified in the module
    returned: failure
    type: dict
    sample: "{ 'targetlbvserver': 'difference. ours: (str) server1 other: (str) server2' }"

