> WIN_DOMAIN_GROUP_MEMBERSHIP    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_domain_group_membership.py)

        Allows the addition and removal of domain users and domain groups from/to a domain group.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- domain_password
        The password for `username'.
        [Default: (null)]
        type: str

- domain_server
        Specifies the Active Directory Domain Services instance to connect to.
        Can be in the form of an FQDN or NetBIOS name.
        If not specified then the value is based on the domain of the computer running PowerShell.
        [Default: (null)]
        type: str

- domain_username
        The username to use when interacting with AD.
        If this is not set then the user Ansible used to log in with will be used instead when using CredSSP or Kerberos with credential
        delegation.
        [Default: (null)]
        type: str

= members
        A list of members to ensure are present/absent from the group.
        The given names must be a SamAccountName of a user, group, service account, or computer.
        For computers, you must add "$" after the name; for example, to add "Mycomputer" to a group, use "Mycomputer$" as the member.

        type: list

= name
        Name of the domain group to manage membership on.

        type: str

- state
        Desired state of the members in the group.
        When `state' is `pure', only the members specified will exist, and all other existing members not specified are removed.
        (Choices: absent, present, pure)[Default: present]
        type: str


SEE ALSO:
      * Module win_domain_user
           The official documentation on the win_domain_user module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_user_module.html
      * Module win_domain_group
           The official documentation on the win_domain_group module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_group_module.html


AUTHOR: Marius Rieder (@jiuka)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Add a domain user/group to a domain group
  win_domain_group_membership:
    name: Foo
    members:
      - Bar
    state: present

- name: Remove a domain user/group from a domain group
  win_domain_group_membership:
    name: Foo
    members:
      - Bar
    state: absent

- name: Ensure only a domain user/group exists in a domain group
  win_domain_group_membership:
    name: Foo
    members:
      - Bar
    state: pure

- name: Add a computer to a domain group
  win_domain_group_membership:
    name: Foo
    members:
      - DESKTOP$
    state: present


RETURN VALUES:

name:
    description: The name of the target domain group.
    returned: always
    type: str
    sample: Domain-Admins
added:
    description: A list of members added when C(state) is C(present) or
      C(pure); this is empty if no members are added.
    returned: success and C(state) is C(present) or C(pure)
    type: list
    sample: ["UserName", "GroupName"]
removed:
    description: A list of members removed when C(state) is C(absent) or
      C(pure); this is empty if no members are removed.
    returned: success and C(state) is C(absent) or C(pure)
    type: list
    sample: ["UserName", "GroupName"]
members:
    description: A list of all domain group members at completion; this is empty
      if the group contains no members.
    returned: success
    type: list
    sample: ["UserName", "GroupName"]

