> NETCUP_DNS    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/netcup_dns.py)

        Manages DNS records via the Netcup API, see the docs https://ccp.netcup.net/run/webservice/servers/endpoint.php

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= api_key
        API key for authentification, must be obtained via the netcup CCP (https://ccp.netcup.net)


= api_password
        API password for authentification, must be obtained via the netcup CCP (https://ccp.netcup.net)


= customer_id
        Netcup customer id


= domain
        Domainname the records should be added / removed


- priority
        Record priority. Required for `type=MX'
        [Default: (null)]

- record
        Record to add or delete, supports wildcard (*). Default is `@' (e.g. the zone name)
        (Aliases: name)[Default: @]

- solo
        Whether the record should be the only one for that record type and record name. Only use with `state=present'
        This will delete all other records with the same record name and type.
        [Default: False]
        type: bool

- state
        Whether the record should exist or not
        (Choices: present, absent)[Default: present]

= type
        Record type
        (Choices: A, AAAA, MX, CNAME, CAA, SRV, TXT, TLSA, NS, DS)

= value
        Record value



REQUIREMENTS:  nc-dnsapi >= 0.1.3

AUTHOR: Nicolai Buchwitz (@nbuchwitz)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a record of type A
  netcup_dns:
    api_key: "..."
    api_password: "..."
    customer_id: "..."
    domain: "example.com"
    name: "mail"
    type: "A"
    value: "127.0.0.1"

- name: Delete that record
  netcup_dns:
    api_key: "..."
    api_password: "..."
    customer_id: "..."
    domain: "example.com"
    name: "mail"
    type: "A"
    value: "127.0.0.1"
    state: absent

- name: Create a wildcard record
  netcup_dns:
    api_key: "..."
    api_password: "..."
    customer_id: "..."
    domain: "example.com"
    name: "*"
    type: "A"
    value: "127.0.1.1"

- name: Set the MX record for example.com
  netcup_dns:
    api_key: "..."
    api_password: "..."
    customer_id: "..."
    domain: "example.com"
    type: "MX"
    value: "mail.example.com"

- name: Set a record and ensure that this is the only one
  netcup_dns:
    api_key: "..."
    api_password: "..."
    customer_id: "..."
    name: "demo"
    domain: "example.com"
    type: "AAAA"
    value: "::1"
    solo: true


RETURN VALUES:

records:
    description: list containing all records
    returned: success
    type: complex
    contains:
        name:
            description: the record name
            returned: success
            type: str
            sample: fancy-hostname
        type:
            description: the record type
            returned: succcess
            type: str
            sample: A
        value:
            description: the record destination
            returned: success
            type: str
            sample: 127.0.0.1
        priority:
            description: the record priority (only relevant if type=MX)
            returned: success
            type: int
            sample: 0
        id:
            description: internal id of the record
            returned: success
            type: int
            sample: 12345

