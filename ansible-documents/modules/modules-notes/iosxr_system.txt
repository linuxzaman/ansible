> IOSXR_SYSTEM    (/usr/lib/python2.7/dist-packages/ansible/modules/network/iosxr/iosxr_system.py)

        This module provides declarative management of node system attributes on Cisco IOS XR devices. It provides an option to configure
        host system parameters or remove those parameters from the device active configuration.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- domain_name
        Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be
        appended to the `hostname' to create a fully-qualified domain name.
        [Default: (null)]

- domain_search
        Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a
        list of names and will be reconciled with the current active configuration on the running node.
        [Default: (null)]

- hostname
        Configure the device hostname parameter. This option takes an ASCII string value.
        [Default: (null)]

- lookup_enabled
        Provides administrative control for enabling or disabling DNS lookups.  When this argument is set to True, lookups are performed
        and when it is set to False, lookups are not performed.
        [Default: (null)]
        type: bool

- lookup_source
        The `lookup_source' argument provides one or more source interfaces to use for performing DNS lookups.  The interface provided in
        `lookup_source' must be a valid interface configured on the device.
        [Default: (null)]

- name_servers
        The `name_serves' argument accepts a list of DNS name servers by way of either FQDN or IP address to use to perform name
        resolution lookups.  This argument accepts wither a list of DNS servers See examples.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- state
        State of the configuration values in the device's current active configuration.  When set to `present', the values should be
        configured in the device active configuration and when set to `absent' the values should not be in the device active
        configuration
        (Choices: present, absent)[Default: present]

- vrf
        VRF name for domain services
        [Default: (null)]
        version_added: 2.5
        


NOTES:
      * Tested against IOS XRv 6.1.2
      * name-servers `state=absent' operation with `netconf' transport is a success, but with rpc-error. This is due to XR platform
        issue. Recommended to use `ignore_errors' option with the task as a workaround.
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


REQUIREMENTS:  ncclient >= 0.5.3 when using netconf, lxml >= 4.1.1 when using netconf

AUTHOR: Peter Sprygada (@privateip), Kedar Kekan (@kedarX)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: configure hostname and domain-name (default vrf=default)
  iosxr_system:
    hostname: iosxr01
    domain_name: test.example.com
    domain-search:
      - ansible.com
      - redhat.com
      - cisco.com
- name: remove configuration
  iosxr_system:
    hostname: iosxr01
    domain_name: test.example.com
    domain-search:
      - ansible.com
      - redhat.com
      - cisco.com
    state: absent
- name: configure hostname and domain-name with vrf
  iosxr_system:
    hostname: iosxr01
    vrf: nondefault
    domain_name: test.example.com
    domain-search:
      - ansible.com
      - redhat.com
      - cisco.com
- name: configure DNS lookup sources
  iosxr_system:
    lookup_source: MgmtEth0/0/CPU0/0
    lookup_enabled: True
- name: configure name servers
  iosxr_system:
    name_servers:
      - 8.8.8.8
      - 8.8.4.4


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - hostname iosxr01
    - ip domain-name test.example.com
xml:
  description: NetConf rpc xml sent to device with transport C(netconf)
  returned: always (empty list when no xml rpc to send)
  type: list
  version_added: 2.5
  sample:
    - '<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
    <ip-domain xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ip-domain-cfg">
    <vrfs>
    <vrf>
    <vrf-name>default</vrf-name>
    <lists>
    <list xc:operation="merge">
    <order>0</order>
    <list-name>redhat.com</list-name>
    </list>
    </lists>
    </vrf>
    </vrfs>
    </ip-domain>
    </config>'

