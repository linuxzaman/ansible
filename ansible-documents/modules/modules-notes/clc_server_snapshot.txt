> CLC_SERVER_SNAPSHOT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/centurylink/clc_server_snapshot.py)

        An Ansible module to Create, Delete and Restore server snapshots in CenturyLink Cloud.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- expiration_days
        The number of days to keep the server snapshot before it expires.
        [Default: 7]

= server_ids
        The list of CLC server Ids.


- state
        The state to insure that the provided resources are in.
        (Choices: present, absent, restore)[Default: present]

- wait
        Whether to wait for the provisioning tasks to finish before returning.
        [Default: True]
        type: bool


NOTES:
      * To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud -
        CLC_V2_API_USERNAME, the account login id for the centurylink cloud - CLC_V2_API_PASSWORD, the account password for the
        centurylink cloud
      * Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account
        login and password via the HTTP api call @ https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token
        generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the
        centurylink cloud
      * Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment.


REQUIREMENTS:  python = 2.7, requests >= 2.5.0, clc-sdk

AUTHOR: CLC Runner (@clc-runner)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples

- name: Create server snapshot
  clc_server_snapshot:
    server_ids:
        - UC1TEST-SVR01
        - UC1TEST-SVR02
    expiration_days: 10
    wait: True
    state: present

- name: Restore server snapshot
  clc_server_snapshot:
    server_ids:
        - UC1TEST-SVR01
        - UC1TEST-SVR02
    wait: True
    state: restore

- name: Delete server snapshot
  clc_server_snapshot:
    server_ids:
        - UC1TEST-SVR01
        - UC1TEST-SVR02
    wait: True
    state: absent


RETURN VALUES:

server_ids:
    description: The list of server ids that are changed
    returned: success
    type: list
    sample:
        [
            "UC1TEST-SVR01",
            "UC1TEST-SVR02"
        ]

