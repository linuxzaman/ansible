> ONYX_INTERFACE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/onyx/onyx_interface.py)

        This module provides declarative management of Interfaces on Mellanox ONYX network devices.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aggregate
        List of Interfaces definitions.
        [Default: (null)]

- delay
        Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state
        argument which are `state' with values `up'/`down'.
        [Default: 10]

- description
        Description of Interface.
        [Default: (null)]

- duplex
        Interface link status
        (Choices: full, half, auto)[Default: auto]

- enabled
        Interface link status.
        [Default: (null)]
        type: bool

- mtu
        Maximum size of transmit packet.
        [Default: (null)]

= name
        Name of the Interface.


- purge
        Purge Interfaces not defined in the aggregate parameter. This applies only for logical interface.
        [Default: False]
        type: bool

- rx_rate
        Receiver rate in bits per second (bps).
        This is state check parameter only.
        Supports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)
        [Default: (null)]

- speed
        Interface link speed.
        (Choices: 1G, 10G, 25G, 40G, 50G, 56G, 100G)[Default: (null)]

- state
        State of the Interface configuration, `up' means present and operationally up and `down' means present and operationally `down'
        (Choices: present, absent, up, down)[Default: present]

- tx_rate
        Transmit rate in bits per second (bps).
        This is state check parameter only.
        Supports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)
        [Default: (null)]


AUTHOR: Samer Deeb (@samerd)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: configure interface
  onyx_interface:
      name: Eth1/2
      description: test-interface
      speed: 100G
      mtu: 512

- name: make interface up
  onyx_interface:
    name: Eth1/2
    enabled: True

- name: make interface down
  onyx_interface:
    name: Eth1/2
    enabled: False

- name: Check intent arguments
  onyx_interface:
    name: Eth1/2
    state: up

- name: Config + intent
  onyx_interface:
    name: Eth1/2
    enabled: False
    state: down


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device.
  returned: always
  type: list
  sample:
    - interface ethernet 1/2
    - description test-interface
    - mtu 512
    - exit

