> AZURE_RM_VIRTUALMACHINE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/azure/azure_rm_virtualmachine.py)

        Create, update, stop and start a virtual machine. Provide an existing storage account and network interface or allow the module
        to create these for you. If you choose not to provide a network interface, the resource group must contain a virtual network with
        at least one subnet. Before Ansible 2.5, this required an image found in the Azure Marketplace which can be discovered with
        [azure_rm_virtualmachineimage_facts]. In Ansible 2.5 and newer, custom images can be used as well, see the examples for more
        details. If you need to use the `custom_data' option, many images in the marketplace are not cloud-init ready. Thus, data sent to
        `custom_data' would be ignored. If the image you are attempting to use is not listed in https://docs.microsoft.com/en-us/azure
        /virtual-machines/linux/using-cloud-init#cloud-init-overview, follow these steps https://docs.microsoft.com/en-us/azure/virtual-
        machines/linux/cloudinit-prepare-custom-image.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- accept_terms
        Accept terms for marketplace images that require it
        Only Azure service admin/account admin users can purchase images from the marketplace
        [Default: False]
        type: bool
        version_added: 2.7

- ad_user
        Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]
        type: str

- adfs_authority_url
        Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
        [Default: (null)]
        type: str
        version_added: 2.6

- admin_password
        Password for the admin username. Not required if the os_type is Linux and SSH password authentication is disabled by setting
        ssh_password_enabled to false.
        [Default: (null)]

- admin_username
        Admin username used to access the host after it is created. Required when creating a VM.
        [Default: (null)]

- allocated
        Toggle that controls if the machine is allocated/deallocated, only useful with state='present'.
        [Default: True]
        type: bool

- api_profile
        Selects an API profile to use when communicating with Azure services. Default value of `latest' is appropriate for public clouds;
        future values will allow use with Azure Stack.
        [Default: latest]
        type: str
        version_added: 2.5

- append_tags
        Use to control if tags field is canonical or just appends to existing tags.
        When canonical, any tags not found in the tags parameter will be removed from the object's metadata.
        [Default: True]
        type: bool

- auth_source
        Controls the source of the credentials to use for authentication.
        If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to `auto' if variable is not defined.
        `auto' will follow the default precedence of module parameters -> environment variables -> default profile in credential file
        `~/.azure/credentials'.
        When set to `cli', the credentials will be sources from the default Azure CLI profile.
        Can also be set via the `ANSIBLE_AZURE_AUTH_SOURCE' environment variable.
        When set to `msi', the host machine must be an azure resource with an enabled MSI extension. `subscription_id' or the environment
        variable `AZURE_SUBSCRIPTION_ID' can be used to identify the subscription ID if the resource is granted access to more than one
        subscription, otherwise the first subscription is chosen.
        The `msi' was added in Ansible 2.6.
        (Choices: auto, cli, credential_file, env, msi)[Default: (null)]
        type: str
        version_added: 2.5

- availability_set
        Name or ID of an existing availability set to add the VM to. The availability_set should be in the same resource group as VM.
        [Default: (null)]
        version_added: 2.5

- cert_validation_mode
        Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate,
        but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing `ignore'. Can
        also be set via credential file profile or the `AZURE_CERT_VALIDATION' environment variable.
        (Choices: ignore, validate)[Default: (null)]
        type: str
        version_added: 2.5

- client_id
        Azure client ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- cloud_environment
        For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg,
        `AzureChinaCloud', `AzureUSGovernment'), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via
        credential file profile or the `AZURE_CLOUD_ENVIRONMENT' environment variable.
        [Default: AzureCloud]
        type: str
        version_added: 2.4

- custom_data
        Data which is made available to the virtual machine and used by e.g., cloud-init.
        [Default: (null)]
        version_added: 2.5

- data_disks
        Describes list of data disks.
        [Default: (null)]
        suboptions:
          caching:
            choices:
            - ReadOnly
            - ReadWrite
            default: ReadOnly
            description:
            - Type of data disk caching.
            version_added: '2.4'
          disk_size_gb:
            description:
            - The initial disk size in GB for blank data disks
            version_added: '2.4'
          lun:
            default: 0
            description:
            - The logical unit number for data disk
            version_added: '2.4'
          managed_disk_type:
            choices:
            - Standard_LRS
            - StandardSSD_LRS
            - Premium_LRS
            description:
            - Managed data disk type
            version_added: '2.4'
          storage_account_name:
            description:
            - Name of an existing storage account that supports creation of VHD blobs. If
              not specified for a new VM, a new storage account named <vm name>01 will be
              created using storage type 'Standard_LRS'.
            version_added: '2.4'
          storage_blob_name:
            description:
            - Name fo the storage blob used to hold the VM's OS disk image. If no name is
              provided, defaults to the VM name + '.vhd'. If you provide a name, it must end
              with '.vhd'
            version_added: '2.4'
          storage_container_name:
            default: vhds
            description:
            - Name of the container to use within the storage account to store VHD blobs.
              If no name is specified a default container will created.
            version_added: '2.4'
        
        version_added: 2.4

- generalized
        Use with state `present' to generalize the machine. Set to true to generalize the machine.
        Please note that this operation is irreversible.
        [Default: (null)]
        type: bool
        version_added: 2.8

= image
        Specifies the image used to build the VM.
        If a string, the image is sourced from a custom image based on the name.
        If a dict with the keys `publisher', `offer', `sku', and `version', the image is sourced from a Marketplace image. NOTE: set
        image.version to `latest' to get the most recent version of a given image.
        If a dict with the keys `name' and `resource_group', the image is sourced from a custom image based on the `name' and
        `resource_group' set. NOTE: the key `resource_group' is optional and if omitted, all images in the subscription will be searched
        for by `name'.
        Custom image support was added in Ansible 2.5


- license_type
        Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain
        the Windows Server operating system.
        Note: To unset this value, it has to be set to the string 'None'.
        (Choices: Windows_Server, Windows_Client)[Default: (null)]
        version_added: 2.8
        

- location
        Valid Azure location. Defaults to location of the resource group.
        [Default: (null)]

- managed_disk_type
        Managed OS disk type
        (Choices: Standard_LRS, StandardSSD_LRS, Premium_LRS)[Default: (null)]
        version_added: 2.4

= name
        Name of the virtual machine.


- network_interface_names
        List of existing network interface names to add to the VM.
        Item can be a str of name or resource id of the network interface.
        Item can also be a dict contains `resource_group' and `name' of the network interface.
        If a network interface name is not provided when the VM is created, a default network interface will be created.
        In order for the module to create a new network interface, at least one Virtual Network with one Subnet must exist.
        (Aliases: network_interfaces)[Default: (null)]

- open_ports
        If a network interface is created when creating the VM, a security group will be created as well. For Linux hosts a rule will be
        added to the security group allowing inbound TCP connections to the default SSH port 22, and for Windows hosts ports 3389 and
        5986 will be opened. Override the default open ports by providing a list of ports.
        [Default: (null)]

- os_disk_caching
        Type of OS disk caching.
        (Aliases: disk_caching)(Choices: ReadOnly, ReadWrite)[Default: ReadOnly]

- os_disk_name
        OS disk name
        [Default: (null)]
        version_added: 2.8

- os_disk_size_gb
        Type of OS disk size in GB.
        [Default: (null)]
        version_added: 2.7

- os_type
        Base type of operating system.
        (Choices: Windows, Linux)[Default: Linux]

- password
        Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]

- plan
        A dictionary describing a third-party billing plan for an instance
        [Default: (null)]
        suboptions:
          name:
            description:
            - billing plan name
            required: true
          product:
            description:
            - product name
            required: true
          promotion_code:
            description:
            - optional promotion code
          publisher:
            description:
            - publisher offering the plan
            required: true
        
        version_added: 2.5
        

- profile
        Security profile found in ~/.azure/credentials file.
        [Default: (null)]
        type: str

- public_ip_allocation_method
        If a public IP address is created when creating the VM (because a Network Interface was not provided), determines if the public
        IP address remains permanently associated with the Network Interface. If set to 'Dynamic' the public IP address may change any
        time the VM is rebooted or power cycled.
        The `Disabled' choice was added in Ansible 2.6.
        (Aliases: public_ip_allocation)(Choices: Dynamic, Static, Disabled)[Default: Static]

- remove_on_absent
        When removing a VM using state 'absent', also remove associated resources.
        It can be 'all' or 'all_autocreated' or  a list with any of the following: ['network_interfaces', 'virtual_storage',
        'public_ips'].
        To remove all resources referred by VM use 'all'.
        To remove all resources that were automatically created while provisioning VM use 'all_autocreated'.
        Any other input will be ignored.
        [Default: [u'all']]

= resource_group
        Name of the resource group containing the virtual machine.


- restarted
        Use with state `present' to restart a running VM.
        [Default: (null)]
        type: bool

- secret
        Azure client secret. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- short_hostname
        Name assigned internally to the host. On a linux VM this is the name returned by the `hostname` command. When creating a virtual
        machine, short_hostname defaults to name.
        [Default: (null)]

- ssh_password_enabled
        When the os_type is Linux, setting ssh_password_enabled to false will disable SSH password authentication and require use of SSH
        keys.
        [Default: True]
        type: bool

- ssh_public_keys
        For os_type Linux provide a list of SSH keys. Each item in the list should be a dictionary where the dictionary contains two
        keys: path and key_data. Set the path to the default location of the authorized_keys files. On an Enterprise Linux host, for
        example, the path will be /home/<admin username>/.ssh/authorized_keys. Set key_data to the actual value of the public key.
        [Default: (null)]

- started
        Use with state `present' to start the machine. Set to false to have the machine be 'stopped'.
        [Default: True]
        type: bool

- state
        Assert the state of the virtual machine.
        State `present' will check that the machine exists with the requested configuration. If the configuration of the existing machine
        does not match, the machine will be updated. Use options started, allocated and restarted to change the machine's power state.
        State `absent' will remove the virtual machine.
        (Choices: absent, present)[Default: present]

- storage_account_name
        Name of an existing storage account that supports creation of VHD blobs. If not specified for a new VM, a new storage account
        named <vm name>01 will be created using storage type 'Standard_LRS'.
        (Aliases: storage_account)[Default: (null)]

- storage_blob_name
        Name of the storage blob used to hold the VM's OS disk image. If no name is provided, defaults to the VM name + '.vhd'. If you
        provide a name, it must end with '.vhd'
        (Aliases: storage_blob)[Default: (null)]

- storage_container_name
        Name of the container to use within the storage account to store VHD blobs. If no name is specified a default container will
        created.
        (Aliases: storage_container)[Default: vhds]

- subnet_name
        When creating a virtual machine, if a network interface name is not provided, one will be created.
        The new network interface will be assigned to the first subnet found in the virtual network.
        Use this parameter to provide a specific subnet instead.
        If the subnet is in another resource group, specific resource group by `virtual_network_resource_group'.
        (Aliases: subnet)[Default: (null)]

- subscription_id
        Your Azure subscription Id.
        [Default: (null)]
        type: str

- tags
        Dictionary of string:string pairs to assign as metadata to the object.
        Metadata tags on the object will be updated with any provided values.
        To remove tags set append_tags option to false.
        [Default: (null)]
        type: dict

- tenant
        Azure tenant ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- virtual_network_name
        When creating a virtual machine, if a network interface name is not provided, one will be created.
        The network interface will be assigned to the first virtual network found in the resource group.
        Use this parameter to provide a specific virtual network instead.
        If the virtual network in in another resource group, specific resource group by `virtual_network_resource_group'.
        (Aliases: virtual_network)[Default: (null)]

- virtual_network_resource_group
        When creating a virtual machine, if a specific virtual network from another resource group should be used, use this parameter to
        specify the resource group to use.
        [Default: (null)]
        version_added: 2.4

- vm_identity
        Identity for the virtual machine.
        (Choices: SystemAssigned)[Default: (null)]
        version_added: 2.8
        

- vm_size
        A valid Azure VM size value. For example, 'Standard_D4'. The list of choices varies depending on the subscription and location.
        Check your subscription for available choices. Required when creating a VM.
        [Default: (null)]

- winrm
        List of Windows Remote Management configurations of the VM.
        [Default: (null)]
        suboptions:
          certificate_store:
            description:
            - Specifies the certificate store on the Virtual Machine to which the certificate
              should be added. The specified certificate store is implicitly in the LocalMachine
              account.
          certificate_url:
            description:
            - This is the URL of a certificate that has been uploaded to Key Vault as a secret.
          protocol:
            choices:
            - http
            - https
            description:
            - Specifies the protocol of listener
            required: true
          source_vault:
            description:
            - The relative URL of the Key Vault containing the certificate
        
        version_added: 2.8
        

- zones
        A list of Availability Zones for your virtual machine
        [Default: (null)]
        type: list
        version_added: 2.8


NOTES:
      * For authentication with Azure you can pass parameters, set environment variables, use a profile stored in
        ~/.azure/credentials, or log in before you run your tasks or playbook with `az login'.
      * Authentication is also possible using a service principal or Active Directory user.
      * To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables
        AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
      * To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the
        environment.
      * Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and
        the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also
        possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.


SEE ALSO:
      * Sign in with Azure CLI
           How to authenticate using the `az login' command.
           https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest


REQUIREMENTS:  python >= 2.7, azure >= 2.0.0

AUTHOR: Chris Houseknecht (@chouseknecht), Matt Davis (@nitzmahone), Christopher Perrin (@cperrin88)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create VM with defaults
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm10
    admin_username: chouseknecht
    admin_password: <your password here>
    image:
      offer: CentOS
      publisher: OpenLogic
      sku: '7.1'
      version: latest

- name: Create an availability set for managed disk vm
  azure_rm_availabilityset:
    name: avs-managed-disk
    resource_group: myResourceGroup
    platform_update_domain_count: 5
    platform_fault_domain_count: 2
    sku: Aligned

- name: Create a VM with managed disk
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: vm-managed-disk
    admin_username: adminUser
    availability_set: avs-managed-disk
    managed_disk_type: Standard_LRS
    image:
      offer: CoreOS
      publisher: CoreOS
      sku: Stable
      version: latest
    vm_size: Standard_D4

- name: Create a VM with existing storage account and NIC
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm002
    vm_size: Standard_D4
    storage_account: testaccount001
    admin_username: adminUser
    ssh_public_keys:
      - path: /home/adminUser/.ssh/authorized_keys
        key_data: < insert yor ssh public key here... >
    network_interfaces: testvm001
    image:
      offer: CentOS
      publisher: OpenLogic
      sku: '7.1'
      version: latest

- name: Create a VM with OS and multiple data managed disks
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm001
    vm_size: Standard_D4
    managed_disk_type: Standard_LRS
    admin_username: adminUser
    ssh_public_keys:
      - path: /home/adminUser/.ssh/authorized_keys
        key_data: < insert yor ssh public key here... >
    image:
      offer: CoreOS
      publisher: CoreOS
      sku: Stable
      version: latest
    data_disks:
        - lun: 0
          disk_size_gb: 64
          managed_disk_type: Standard_LRS
        - lun: 1
          disk_size_gb: 128
          managed_disk_type: Premium_LRS

- name: Create a VM with OS and multiple data storage accounts
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm001
    vm_size: Standard_DS1_v2
    admin_username: adminUser
    ssh_password_enabled: false
    ssh_public_keys:
    - path: /home/adminUser/.ssh/authorized_keys
      key_data: < insert yor ssh public key here... >
    network_interfaces: testvm001
    storage_container: osdisk
    storage_blob: osdisk.vhd
    image:
      offer: CoreOS
      publisher: CoreOS
      sku: Stable
      version: latest
    data_disks:
    - lun: 0
      disk_size_gb: 64
      storage_container_name: datadisk1
      storage_blob_name: datadisk1.vhd
    - lun: 1
      disk_size_gb: 128
      storage_container_name: datadisk2
      storage_blob_name: datadisk2.vhd

- name: Create a VM with a custom image
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm001
    vm_size: Standard_DS1_v2
    admin_username: adminUser
    admin_password: password01
    image: customimage001

- name: Create a VM with a custom image from a particular resource group
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm001
    vm_size: Standard_DS1_v2
    admin_username: adminUser
    admin_password: password01
    image:
      name: customimage001
      resource_group: myResourceGroup

- name: Create VM with spcified OS disk size
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: big-os-disk
    admin_username: chouseknecht
    admin_password: <your password here>
    os_disk_size_gb: 512
    image:
      offer: CentOS
      publisher: OpenLogic
      sku: '7.1'
      version: latest

- name: Create VM with OS and Plan, accepting the terms
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: f5-nva
    admin_username: chouseknecht
    admin_password: <your password here>
    image:
      publisher: f5-networks
      offer: f5-big-ip-best
      sku: f5-bigip-virtual-edition-200m-best-hourly
      version: latest
    plan:
      name: f5-bigip-virtual-edition-200m-best-hourly
      product: f5-big-ip-best
      publisher: f5-networks

- name: Power Off
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm002
    started: no

- name: Deallocate
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm002
    allocated: no

- name: Power On
  azure_rm_virtualmachine:
    resource_group:
    name: testvm002

- name: Restart
  azure_rm_virtualmachine:
    resource_group:
    name: testvm002
    restarted: yes

- name: Create a VM with an Availability Zone
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm001
    vm_size: Standard_DS1_v2
    admin_username: adminUser
    admin_password: password01
    image: customimage001
    zones: [1]

- name: Remove a VM and all resources that were autocreated
  azure_rm_virtualmachine:
    resource_group: myResourceGroup
    name: testvm002
    remove_on_absent: all_autocreated
    state: absent


RETURN VALUES:

powerstate:
    description: Indicates if the state is running, stopped, deallocated, generalized
    returned: always
    type: str
    example: running
deleted_vhd_uris:
    description: List of deleted Virtual Hard Disk URIs.
    returned: 'on delete'
    type: list
    example: ["https://testvm104519.blob.core.windows.net/vhds/testvm10.vhd"]
deleted_network_interfaces:
    description: List of deleted NICs.
    returned: 'on delete'
    type: list
    example: ["testvm1001"]
deleted_public_ips:
    description: List of deleted public IP address names.
    returned: 'on delete'
    type: list
    example: ["testvm1001"]
azure_vm:
    description: Facts about the current state of the object. Note that facts are not part of the registered output but available directly.
    returned: always
    type: complex
    contains: {
        "properties": {
            "availabilitySet": {
                    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Compute/availabilitySets/MYAVAILABILITYSET"
            },
            "hardwareProfile": {
                "vmSize": "Standard_D1"
            },
            "instanceView": {
                "disks": [
                    {
                        "name": "testvm10.vhd",
                        "statuses": [
                            {
                                "code": "ProvisioningState/succeeded",
                                "displayStatus": "Provisioning succeeded",
                                "level": "Info",
                                "time": "2016-03-30T07:11:16.187272Z"
                            }
                        ]
                    }
                ],
                "statuses": [
                    {
                        "code": "ProvisioningState/succeeded",
                        "displayStatus": "Provisioning succeeded",
                        "level": "Info",
                        "time": "2016-03-30T20:33:38.946916Z"
                    },
                    {
                        "code": "PowerState/running",
                        "displayStatus": "VM running",
                        "level": "Info"
                    }
                ],
                "vmAgent": {
                    "extensionHandlers": [],
                    "statuses": [
                        {
                            "code": "ProvisioningState/succeeded",
                            "displayStatus": "Ready",
                            "level": "Info",
                            "message": "GuestAgent is running and accepting new configurations.",
                            "time": "2016-03-30T20:31:16.000Z"
                        }
                    ],
                    "vmAgentVersion": "WALinuxAgent-2.0.16"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkInterfaces/testvm10_NIC01",
                        "name": "testvm10_NIC01",
                        "properties": {
                            "dnsSettings": {
                                "appliedDnsServers": [],
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "ipConfigurations": [
                                {
                                    "etag": 'W/"041c8c2a-d5dd-4cd7-8465-9125cfbe2cf8"',
                                    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkInterfaces/testvm10_NIC01/ipConfigurations/default",
                                    "name": "default",
                                    "properties": {
                                        "privateIPAddress": "10.10.0.5",
                                        "privateIPAllocationMethod": "Dynamic",
                                        "provisioningState": "Succeeded",
                                        "publicIPAddress": {
                                            "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/publicIPAddresses/testvm10_PIP01",
                                            "name": "testvm10_PIP01",
                                            "properties": {
                                                "idleTimeoutInMinutes": 4,
                                                "ipAddress": "13.92.246.197",
                                                "ipConfiguration": {
                                                    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkInterfaces/testvm10_NIC01/ipConfigurations/default"
                                                },
                                                "provisioningState": "Succeeded",
                                                "publicIPAllocationMethod": "Static",
                                                "resourceGuid": "3447d987-ca0d-4eca-818b-5dddc0625b42"
                                            }
                                        }
                                    }
                                }
                            ],
                            "macAddress": "00-0D-3A-12-AA-14",
                            "primary": true,
                            "provisioningState": "Succeeded",
                            "resourceGuid": "10979e12-ccf9-42ee-9f6d-ff2cc63b3844",
                            "virtualMachine": {
                                "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Compute/virtualMachines/testvm10"
                            }
                        }
                    }
                ]
            },
            "osProfile": {
                "adminUsername": "chouseknecht",
                "computerName": "test10",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                },
                "secrets": []
            },
            "provisioningState": "Succeeded",
            "storageProfile": {
                "dataDisks": [
                    {
                        "caching": "ReadWrite",
                        "createOption": "empty",
                        "diskSizeGB": 64,
                        "lun": 0,
                        "name": "datadisk1.vhd",
                        "vhd": {
                            "uri": "https://testvm10sa1.blob.core.windows.net/datadisk/datadisk1.vhd"
                        }
                    }
                ],
                "imageReference": {
                    "offer": "CentOS",
                    "publisher": "OpenLogic",
                    "sku": "7.1",
                    "version": "7.1.20160308"
                },
                "osDisk": {
                    "caching": "ReadOnly",
                    "createOption": "fromImage",
                    "name": "testvm10.vhd",
                    "osType": "Linux",
                    "vhd": {
                        "uri": "https://testvm10sa1.blob.core.windows.net/vhds/testvm10.vhd"
                    }
                }
            }
        },
        "type": "Microsoft.Compute/virtualMachines"
    }

