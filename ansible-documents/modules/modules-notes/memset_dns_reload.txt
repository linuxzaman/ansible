> MEMSET_DNS_RELOAD    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/memset/memset_dns_reload.py)

        Request a reload of Memset's DNS infrastructure, and optionally poll until it finishes.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= api_key
        The API key obtained from the Memset control panel.


- poll
        Boolean value, if set will poll the reload job's status and return when the job has completed (unless the 30 second timeout is
        reached first). If the timeout is reached then the task will not be marked as failed, but stderr will indicate that the polling
        failed.
        [Default: False]
        type: bool


NOTES:
      * DNS reload requests are a best-effort service provided by Memset; these generally happen every 15 minutes by default,
        however you can request an immediate reload if later tasks rely on the records being created. An API key generated via the
        Memset customer control panel is required with the following minimum scope - `dns.reload'. If you wish to poll the job
        status to wait until the reload has completed, then `job.status' is also required.


AUTHOR: Simon Weald (@glitchcrab)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: submit DNS reload and poll.
  memset_dns_reload:
    api_key: 5eb86c9196ab03919abcf03857163741
    poll: True
  delegate_to: localhost


RETURN VALUES:

---
memset_api:
  description: Raw response from the Memset API.
  returned: always
  type: complex
  contains:
    error:
      description: Whether the job ended in error state.
      returned: always
      type: bool
      sample: true
    finished:
      description: Whether the job completed before the result was returned.
      returned: always
      type: bool
      sample: true
    id:
      description: Job ID.
      returned: always
      type: str
      sample: "c9cc8ad2a3e3fb8c63ed83c424928ef8"
    status:
      description: Job status.
      returned: always
      type: str
      sample: "DONE"
    type:
      description: Job type.
      returned: always
      type: str
      sample: "dns"

