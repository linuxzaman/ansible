> BIGIP_FIREWALL_DOS_VECTOR    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_firewall_dos_vector.py)

        Manage attack vector configuration in an AFM DoS profile. In addition to the normal AFM DoS profile vectors, this module can
        manage the device-configuration vectors. See the module documentation for details about this method.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- allow_advertisement
        Specifies that addresses that are identified for blacklisting are advertised to BGP routers
        [Default: (null)]
        type: bool

- attack_ceiling
        Specifies the absolute maximum allowable for packets of this type.
        This setting rate limits packets to the packets per second setting, when specified.
        To set no hard limit and allow automatic thresholds to manage all rate limiting, set this to `infinite'.
        [Default: (null)]
        type: str

- attack_floor
        Specifies packets per second to identify an attack.
        These settings provide an absolute minimum of packets to allow before the attack is identified.
        As the automatic detection thresholds adjust to traffic and CPU usage on the system over time, this attack floor becomes less
        relevant.
        This value may not exceed the value in `attack_floor'.
        [Default: (null)]
        type: str

- auto_blacklist
        Automatically blacklists detected bad actors.
        To enable this parameter, the `bad_actor_detection' must also be enabled.
        This parameter is not supported by the `dns-malformed' vector.
        This parameter is not supported by the `qdcount' vector.
        [Default: (null)]
        type: bool

- bad_actor_detection
        Whether Bad Actor detection is enabled or disabled for a vector, if available.
        This parameter must be enabled to enable the `auto_blacklist' parameter.
        This parameter is not supported by the `dns-malformed' vector.
        This parameter is not supported by the `qdcount' vector.
        [Default: (null)]
        type: bool

- blacklist_detection_seconds
        Detection, in seconds, before blacklisting occurs.
        [Default: (null)]
        type: int

- blacklist_duration
        Duration, in seconds, that the blacklist will last.
        [Default: (null)]
        type: int

- detection_threshold_eps
        Lists how many packets per second the system must discover in traffic in order to detect this attack.
        (Aliases: rate_threshold)[Default: (null)]
        type: str

- detection_threshold_percent
        Lists the threshold percent increase over time that the system must detect in traffic in order to detect this attack.
        The `tcp-half-open' vector does not support this parameter.
        (Aliases: rate_increase)[Default: (null)]
        type: str

- mitigation_threshold_eps
        Specify the maximum number of this type of packet per second the system allows for a vector.
        The system drops packets once the traffic level exceeds the rate limit.
        (Aliases: rate_limit)[Default: (null)]
        type: str

- name
        Specifies the name of the vector to modify.
        Vectors that ship with the device are "hard-coded" so-to-speak in that the list of vectors is known to the system and users
        cannot add new vectors. Users only manipulate the existing vectors; all of which are disabled by default.
        When `ext-hdr-too-large', configures the "IPv6 extension header too large" Network Security vector.
        When `hop-cnt-low', configures the "IPv6 hop count <= <tunable>" Network Security vector.
        When `host-unreachable', configures the "Host Unreachable" Network Security vector.
        When `icmp-frag', configures the "ICMP Fragment" Network Security vector.
        When `icmpv4-flood', configures the "ICMPv4 flood" Network Security vector.
        When `icmpv6-flood', configures the "ICMPv6 flood" Network Security vector.
        When `ip-frag-flood', configures the "IP Fragment Flood" Network Security vector.
        When `ip-low-ttl', configures the "TTL <= <tunable>" Network Security vector.
        When `ip-opt-frames', configures the "IP Option Frames" Network Security vector.
        When `ipv6-ext-hdr-frames', configures the "IPv6 Extended Header Frames" Network Security vector.
        When `ipv6-frag-flood', configures the "IPv6 Fragment Flood" Network Security vector.
        When `opt-present-with-illegal-len', configures the "Option Present With Illegal Length" Network Security vector.
        When `sweep', configures the "Sweep" Network Security vector.
        When `tcp-bad-urg', configures the "TCP Flags-Bad URG" Network Security vector.
        When `tcp-half-open', configures the "TCP Half Open" Network Security vector.
        When `tcp-opt-overruns-tcp-hdr', configures the "TCP Option Overruns TCP Header" Network Security vector.
        When `tcp-psh-flood', configures the "TCP PUSH Flood" Network Security vector.
        When `tcp-rst-flood', configures the "TCP RST Flood" Network Security vector.
        When `tcp-syn-flood', configures the "TCP SYN Flood" Network Security vector.
        When `tcp-syn-oversize', configures the "TCP SYN Oversize" Network Security vector.
        When `tcp-synack-flood', configures the "TCP SYN ACK Flood" Network Security vector.
        When `tcp-window-size', configures the "TCP Window Size" Network Security vector.
        When `tidcmp', configures the "TIDCMP" Network Security vector.
        When `too-many-ext-hdrs', configures the "Too Many Extension Headers" Network Security vector.
        When `udp-flood', configures the "UDP Flood" Network Security vector.
        When `unk-tcp-opt-type', configures the "Unknown TCP Option Type" Network Security vector.
        When `a', configures the "DNS A Query" DNS Protocol Security vector.
        When `aaaa', configures the "DNS AAAA Query" DNS Protocol Security vector.
        When `any', configures the "DNS ANY Query" DNS Protocol Security vector.
        When `axfr', configures the "DNS AXFR Query" DNS Protocol Security vector.
        When `cname', configures the "DNS CNAME Query" DNS Protocol Security vector.
        When `dns-malformed', configures the "dns-malformed" DNS Protocol Security vector.
        When `ixfr', configures the "DNS IXFR Query" DNS Protocol Security vector.
        When `mx', configures the "DNS MX Query" DNS Protocol Security vector.
        When `ns', configures the "DNS NS Query" DNS Protocol Security vector.
        When `other', configures the "DNS OTHER Query" DNS Protocol Security vector.
        When `ptr', configures the "DNS PTR Query" DNS Protocol Security vector.
        When `qdcount', configures the "DNS QDCOUNT Query" DNS Protocol Security vector.
        When `soa', configures the "DNS SOA Query" DNS Protocol Security vector.
        When `srv', configures the "DNS SRV Query" DNS Protocol Security vector.
        When `txt', configures the "DNS TXT Query" DNS Protocol Security vector.
        When `ack', configures the "SIP ACK Method" SIP Protocol Security vector.
        When `bye', configures the "SIP BYE Method" SIP Protocol Security vector.
        When `cancel', configures the "SIP CANCEL Method" SIP Protocol Security vector.
        When `invite', configures the "SIP INVITE Method" SIP Protocol Security vector.
        When `message', configures the "SIP MESSAGE Method" SIP Protocol Security vector.
        When `notify', configures the "SIP NOTIFY Method" SIP Protocol Security vector.
        When `options', configures the "SIP OPTIONS Method" SIP Protocol Security vector.
        When `other', configures the "SIP OTHER Method" SIP Protocol Security vector.
        When `prack', configures the "SIP PRACK Method" SIP Protocol Security vector.
        When `publish', configures the "SIP PUBLISH Method" SIP Protocol Security vector.
        When `register', configures the "SIP REGISTER Method" SIP Protocol Security vector.
        When `sip-malformed', configures the "sip-malformed" SIP Protocol Security vector.
        When `subscribe', configures the "SIP SUBSCRIBE Method" SIP Protocol Security vector.
        When `uri-limit', configures the "uri-limit" SIP Protocol Security vector.
        (Choices: ext-hdr-too-large, hop-cnt-low, host-unreachable, icmp-frag, icmpv4-flood, icmpv6-flood, ip-frag-flood, ip-low-ttl, ip-
        opt-frames, ipv6-frag-flood, opt-present-with-illegal-len, sweep, tcp-bad-urg, tcp-half-open, tcp-opt-overruns-tcp-hdr, tcp-psh-
        flood, tcp-rst-flood, tcp-syn-flood, tcp-syn-oversize, tcp-synack-flood, tcp-window-size, tidcmp, too-many-ext-hdrs, udp-flood,
        unk-tcp-opt-type, a, aaaa, any, axfr, cname, dns-malformed, ixfr, mx, ns, other, ptr, qdcount, soa, srv, txt, ack, bye, cancel,
        invite, message, notify, options, other, prack, publish, register, sip-malformed, subscribe, uri-limit)[Default: (null)]
        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- per_source_ip_detection_threshold
        Specifies the number of packets per second to identify an IP address as a bad actor.
        [Default: (null)]
        type: str

- per_source_ip_mitigation_threshold
        Specifies the rate limit applied to a source IP that is identified as a bad actor.
        [Default: (null)]
        type: str

= profile
        Specifies the name of the profile to manage vectors in.
        The name `device-config' is reserved for use by this module.
        Vectors can be managed in either DoS Profiles, or Device Configuration. By specifying a profile of 'device-config', this module
        will specifically tailor configuration of the provided vectors to the Device Configuration.

        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- simulate_auto_threshold
        Specifies that results of the current automatic thresholds are logged, though manual thresholds are enforced, and no action is
        taken on automatic thresholds.
        The `sweep' vector does not support this parameter.
        [Default: (null)]
        type: bool

= state
        When `state' is `mitigate', ensures that the vector enforces limits and thresholds.
        When `state' is `detect-only', ensures that the vector does not enforce limits and thresholds (rate limiting, dopping, etc), but
        is still tracked in logs and statistics.
        When `state' is `disabled', ensures that the vector does not enforce limits and thresholds, but is still tracked in logs and
        statistics.
        When `state' is `learn-only', ensures that the vector does not "detect" any attacks. Only learning and stat collecting is
        performed.
        (Choices: mitigate, detect-only, learn-only, disabled)
        type: str

- threshold_mode
        The `dns-malformed' vector does not support `fully-automatic', or `stress-based-mitigation' for this parameter.
        The `qdcount' vector does not support `fully-automatic', or `stress-based-mitigation' for this parameter.
        The `sip-malformed' vector does not support `fully-automatic', or `stress-based-mitigation' for this parameter.
        (Choices: manual, stress-based-mitigation, fully-automatic)[Default: (null)]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


REQUIREMENTS:  BIG-IP >= v13.0.0

AUTHOR: Tim Rupp (@caphrim007)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Enable DNS AAAA vector mitigation
  bigip_firewall_dos_vector:
    name: aaaa
    state: mitigate
    provider:
      password: secret
      server: lb.mydomain.com
      user: admin
  delegate_to: localhost


RETURN VALUES:

allow_advertisement:
  description: The new Allow External Advertisement setting.
  returned: changed
  type: bool
  sample: yes
auto_blacklist:
  description: The new Auto Blacklist setting.
  returned: changed
  type: bool
  sample: no
bad_actor_detection:
  description: The new Bad Actor Detection setting.
  returned: changed
  type: bool
  sample: no
blacklist_detection_seconds:
  description: The new Sustained Attack Detection Time setting.
  returned: changed
  type: int
  sample: 60
blacklist_duration:
  description: The new Category Duration Time setting.
  returned: changed
  type: int
  sample: 14400
attack_ceiling:
  description: The new Attack Ceiling EPS setting.
  returned: changed
  type: str
  sample: infinite
attack_floor:
  description: The new Attack Floor EPS setting.
  returned: changed
  type: str
  sample: infinite
blacklist_category:
  description: The new Category Name setting.
  returned: changed
  type: str
  sample: /Common/cloud_provider_networks
per_source_ip_detection_threshold:
  description: The new Per Source IP Detection Threshold EPS setting.
  returned: changed
  type: str
  sample: 23
per_source_ip_mitigation_threshold:
  description: The new Per Source IP Mitigation Threshold EPS setting.
  returned: changed
  type: str
  sample: infinite
detection_threshold_percent:
  description: The new Detection Threshold Percent setting.
  returned: changed
  type: str
  sample: infinite
detection_threshold_eps:
  description: The new Detection Threshold EPS setting.
  returned: changed
  type: str
  sample: infinite
mitigation_threshold_eps:
  description: The new Mitigation Threshold EPS setting.
  returned: changed
  type: str
  sample: infinite
threshold_mode:
  description: The new Mitigation Threshold EPS setting.
  returned: changed
  type: str
  sample: infinite
simulate_auto_threshold:
  description: The new Simulate Auto Threshold setting.
  returned: changed
  type: bool
  sample: no
state:
  description: The new state of the vector.
  returned: changed
  type: str
  sample: mitigate

