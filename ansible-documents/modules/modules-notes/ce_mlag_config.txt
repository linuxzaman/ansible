> CE_MLAG_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_mlag_config.py)

        Manages MLAG configuration on HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- dfs_group_id
        ID of a DFS group. The value is 1.
        [Default: present]

- eth_trunk_id
        Name of the peer-link interface. The value is in the range from 0 to 511.
        [Default: (null)]

- ip_address
        IP address bound to the DFS group. The value is in dotted decimal notation.
        [Default: (null)]

- nickname
        The nickname bound to a DFS group. The value is an integer that ranges from 1 to 65471.
        [Default: (null)]

- peer_link_id
        Number of the peer-link interface. The value is 1.
        [Default: (null)]

- priority_id
        Priority of a DFS group. The value is an integer that ranges from 1 to 254. The default value is 100.
        [Default: (null)]

- pseudo_nickname
        A pseudo nickname of a DFS group. The value is an integer that ranges from 1 to 65471.
        [Default: (null)]

- pseudo_priority
        The priority of a pseudo nickname. The value is an integer that ranges from 128 to 255. The default value is 192. A larger value
        indicates a higher priority.
        [Default: (null)]

- state
        Specify desired state of the resource.
        (Choices: present, absent)[Default: present]

- vpn_instance_name
        Name of the VPN instance bound to the DFS group. The value is a string of 1 to 31 case-sensitive characters without spaces. If
        the character string is quoted by double quotation marks, the character string can contain spaces. The value _public_ is reserved
        and cannot be used as the VPN instance name.
        [Default: (null)]


AUTHOR: Li Yanfeng (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: mlag config module test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: Create DFS Group id
    ce_mlag_config:
      dfs_group_id: 1
      provider: "{{ cli }}"
  - name: Set dfs-group priority
    ce_mlag_config:
      dfs_group_id: 1
      priority_id: 3
      state: present
      provider: "{{ cli }}"
  - name: Set pseudo nickname
    ce_mlag_config:
      dfs_group_id: 1
      pseudo_nickname: 3
      pseudo_priority: 130
      state: present
      provider: "{{ cli }}"
  - name: Set ip
    ce_mlag_config:
      dfs_group_id: 1
      ip_address: 11.1.1.2
      vpn_instance_name: 6
      provider: "{{ cli }}"
  - name: Set peer link
    ce_mlag_config:
      eth_trunk_id: 3
      peer_link_id: 2
      state: present
      provider: "{{ cli }}"


RETURN VALUES:

changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true
proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: { "eth_trunk_id": "3",
              "peer_link_id": "1",
              "state": "present"}
existing:
    description: k/v pairs of existing aaa server
    returned: always
    type: dict
    sample: { }
end_state:
    description: k/v pairs of aaa params after module execution
    returned: always
    type: dict
    sample: { "eth_trunk_id": "Eth-Trunk3",
              "peer_link_id": "1"}
updates:
    description: command sent to the device
    returned: always
    type: list
    sample: {"peer-link 1"}

