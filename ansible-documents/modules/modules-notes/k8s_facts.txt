> K8S_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/clustering/k8s/k8s_facts.py)

        Use the OpenShift Python client to perform read operations on K8s objects. Access to the full range of K8s APIs. Authenticate
        using either a config file, certificates, password or token. Supports check mode.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Token used to authenticate with the API. Can also be specified via K8S_AUTH_API_KEY environment variable.
        [Default: (null)]
        type: str

- api_version
        Use to specify the API version. in conjunction with `kind', `name', and `namespace' to identify a specific object.
        (Aliases: api, version)[Default: v1]

- ca_cert
        Path to a CA certificate used to authenticate with the API. The full certificate chain must be provided to avoid certificate
        validation errors. Can also be specified via K8S_AUTH_SSL_CA_CERT environment variable.
        (Aliases: ssl_ca_cert)[Default: (null)]
        type: path

- client_cert
        Path to a certificate used to authenticate with the API. Can also be specified via K8S_AUTH_CERT_FILE environment variable.
        (Aliases: cert_file)[Default: (null)]
        type: path

- client_key
        Path to a key file used to authenticate with the API. Can also be specified via K8S_AUTH_KEY_FILE environment variable.
        (Aliases: key_file)[Default: (null)]
        type: path

- context
        The name of a context found in the config file. Can also be specified via K8S_AUTH_CONTEXT environment variable.
        [Default: (null)]
        type: str

- field_selectors
        List of field selectors to use to filter results
        [Default: (null)]

- host
        Provide a URL for accessing the API. Can also be specified via K8S_AUTH_HOST environment variable.
        [Default: (null)]
        type: str

= kind
        Use to specify an object model. Use in conjunction with `api_version', `name', and `namespace' to identify a specific object.


- kubeconfig
        Path to an existing Kubernetes config file. If not provided, and no other connection options are provided, the openshift client
        will attempt to load the default configuration file from `~/.kube/config.json'. Can also be specified via K8S_AUTH_KUBECONFIG
        environment variable.
        [Default: (null)]
        type: path

- label_selectors
        List of label selectors to use to filter results
        [Default: (null)]

- name
        Use to specify an object name.  Use in conjunction with `api_version', `kind' and `namespace' to identify a specific object.
        [Default: (null)]

- namespace
        Use to specify an object namespace. Use in conjunction with `api_version', `kind', and `name' to identify a specfic object.
        [Default: (null)]

- password
        Provide a password for authenticating with the API. Can also be specified via K8S_AUTH_PASSWORD environment variable.
        Please read the description of the `username' option for a discussion of when this option is applicable.
        [Default: (null)]
        type: str

- username
        Provide a username for authenticating with the API. Can also be specified via K8S_AUTH_USERNAME environment variable.
        Please note that this only works with clusters configured to use HTTP Basic Auth. If your cluster has a different form of
        authentication (e.g. OAuth2 in OpenShift), this option will not work as expected and you should look into the `k8s_auth' module,
        as that might do what you need.
        [Default: (null)]
        type: str

- validate_certs
        Whether or not to verify the API server's SSL certificates. Can also be specified via K8S_AUTH_VERIFY_SSL environment variable.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool


NOTES:
      * The OpenShift Python client wraps the K8s Python client, providing full access to all of the APIS and models available on
        both platforms. For API version details and additional information visit https://github.com/openshift/openshift-restclient-
        python
      * To avoid SSL certificate validation errors when `validate_certs' is `True', the full certificate chain for the API server
        must be provided via `ca_cert' or in the kubeconfig file.


REQUIREMENTS:  python >= 2.7, openshift >= 0.6, PyYAML >= 3.11

AUTHOR: Will Thames (@willthames)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Get an existing Service object
  k8s_facts:
    api_version: v1
    kind: Service
    name: web
    namespace: testing
  register: web_service

- name: Get a list of all service objects
  k8s_facts:
    api_version: v1
    kind: Service
    namespace: testing
  register: service_list

- name: Get a list of all pods from any namespace
  k8s_facts:
    kind: Pod
  register: pod_list

- name: Search for all Pods labelled app=web
  k8s_facts:
    kind: Pod
    label_selectors:
      - app = web
      - tier in (dev, test)

- name: Search for all running pods
  k8s_facts:
    kind: Pod
    field_selectors:
      - status.phase = running


RETURN VALUES:

resources:
  description:
  - The object(s) that exists
  returned: success
  type: complex
  contains:
    api_version:
      description: The versioned schema of this representation of an object.
      returned: success
      type: str
    kind:
      description: Represents the REST resource this object represents.
      returned: success
      type: str
    metadata:
      description: Standard object metadata. Includes name, namespace, annotations, labels, etc.
      returned: success
      type: dict
    spec:
      description: Specific attributes of the object. Will vary based on the I(api_version) and I(kind).
      returned: success
      type: dict
    status:
      description: Current status details for the object.
      returned: success
      type: dict

