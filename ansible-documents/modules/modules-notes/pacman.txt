> PACMAN    (/usr/lib/python2.7/dist-packages/ansible/modules/packaging/os/pacman.py)

        Manage packages with the `pacman' package manager, which is used by Arch Linux and its variants.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- extra_args
        Additional option to pass to pacman when enforcing `state'.
        [Default: None]
        version_added: 2.8

- force
        When removing package, force remove package, without any checks. Same as `extra_args="--nodeps --nodeps"`. When update_cache,
        force redownload repo databases. Same as `update_cache_extra_args="--refresh --refresh"`.
        [Default: False]
        type: bool
        version_added: 2.0

- name
        Name or list of names of the package(s) or file(s) to install, upgrade, or remove. Can't be used in combination with `upgrade'.
        (Aliases: package, pkg)[Default: (null)]

- recurse
        When removing a package, also remove its dependencies, provided that they are not required by other packages and were not
        explicitly installed by a user. This option is deprecated since 2.8 and will be removed in 2.10, use `extra_args=--recursive`.
        [Default: False]
        type: bool
        version_added: 1.3

- state
        Desired state of the package.
        (Choices: absent, latest, present)[Default: present]

- update_cache
        Whether or not to refresh the master package lists.
        This can be run as part of a package installation or as a separate step.
        (Aliases: update-cache)[Default: False]
        type: bool

- update_cache_extra_args
        Additional option to pass to pacman when enforcing `update_cache'.
        [Default: None]
        version_added: 2.8

- upgrade
        Whether or not to upgrade the whole system. Can't be used in combination with `name'.
        [Default: False]
        type: bool
        version_added: 2.0

- upgrade_extra_args
        Additional option to pass to pacman when enforcing `upgrade'.
        [Default: None]
        version_added: 2.8


NOTES:
      * When used with a `loop:` each package will be processed individually, it is much more efficient to pass the list directly
        to the `name` option.


AUTHOR: Indrajit Raychaudhuri (@indrajitr), Aaron Bull Schaefer (@elasticdog) <aaron@elasticdog.com>, Maxime de Roucy (@tchernomax)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Install package foo from repo
  pacman:
    name: foo
    state: present

- name: Install package bar from file
  pacman:
    name: ~/bar-1.0-1-any.pkg.tar.xz
    state: present

- name: Install package foo from repo and bar from file
  pacman:
    name:
      - foo
      - ~/bar-1.0-1-any.pkg.tar.xz
    state: present

- name: Upgrade package foo
  pacman:
    name: foo
    state: latest
    update_cache: yes

- name: Remove packages foo and bar
  pacman:
    name:
      - foo
      - bar
    state: absent

- name: Recursively remove package baz
  pacman:
    name: baz
    state: absent
    extra_args: --recursive

- name: Run the equivalent of "pacman -Sy" as a separate step
  pacman:
    update_cache: yes

- name: Run the equivalent of "pacman -Su" as a separate step
  pacman:
    upgrade: yes

- name: Run the equivalent of "pacman -Syu" as a separate step
  pacman:
    update_cache: yes
    upgrade: yes

- name: Run the equivalent of "pacman -Rdd", force remove package baz
  pacman:
    name: baz
    state: absent
    force: yes


RETURN VALUES:

packages:
    description: a list of packages that have been changed
    returned: when upgrade is set to yes
    type: list
    sample: [ package, other-package ]

