> KUBERNETES    (/usr/lib/python2.7/dist-packages/ansible/modules/clustering/k8s/_kubernetes.py)

        This module can manage Kubernetes resources on an existing cluster using the Kubernetes server API. Users can specify in-line API
        data, or specify an existing Kubernetes YAML file. Currently, this module (1) Only supports HTTP Basic Auth (2) Only supports
        'strategic merge' for update, http://goo.gl/fCPYxT SSL certs are not working, use `validate_certs=off' to disable.

DEPRECATED: 

	Reason: This module used the oc command line tool, where as M(k8s_raw) goes over the REST API.
	Will be removed in: Ansible 2.9
	Alternatives: Use M(k8s_raw) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= api_endpoint
        The IPv4 API endpoint of the Kubernetes cluster.
        (Aliases: endpoint)

- certificate_authority_data
        Certificate Authority data for Kubernetes server. Should be in either standard PEM format or base64 encoded PEM data. Note that
        certificate verification is broken until ansible supports a version of 'match_hostname' that can match the IP address against the
        CA data.
        [Default: (null)]

- file_reference
        Specify full path to a Kubernets YAML file to send to API `endpoint'. This option is mutually exclusive with `'inline_data''.
        [Default: (null)]

= inline_data
        The Kubernetes YAML data to send to the API `endpoint'. This option is mutually exclusive with `'file_reference''.


- insecure
        Reverts the connection to using HTTP instead of HTTPS. This option should only be used when execuing the ['kubernetes'] module
        local to the Kubernetes cluster using the insecure local port (locahost:8080 by default).
        [Default: (null)]

- patch_operation
        Specify patch operation for Kubernetes resource update.
        For details, see the description of PATCH operations at https://github.com/kubernetes/kubernetes/blob/release-1.5/docs/devel/api-
        conventions.md#patch-operations.
        (Aliases: patch_strategy)(Choices: JSON Patch, Merge Patch, Strategic Merge Patch)[Default: Strategic Merge Patch]
        version_added: 2.4
        

= state
        The desired action to take on the Kubernetes data.
        (Choices: absent, present, replace, update)[Default: present]

- url_password
        The HTTP Basic Auth password for the API `endpoint'. This should be set unless using the `'insecure'' option.
        (Aliases: password)[Default: (null)]

- url_username
        The HTTP Basic Auth username for the API `endpoint'. This should be set unless using the `'insecure'' option.
        (Aliases: username)[Default: admin]

- validate_certs
        Enable/disable certificate validation. Note that this is set to `false' until Ansible can support IP address based certificate
        hostname matching (exists in >= python3.5.0).
        [Default: no]
        type: bool


AUTHOR: Eric Johnson (@erjohnso) <erjohnso@google.com>
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

# Create a new namespace with in-line YAML.
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    url_username: admin
    url_password: redacted
    inline_data:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: ansible-test
        labels:
          label_env: production
          label_ver: latest
        annotations:
          a1: value1
          a2: value2
    state: present

# Create a new namespace from a YAML file.
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    url_username: admin
    url_password: redacted
    file_reference: /path/to/create_namespace.yaml
    state: present

# Do the same thing, but using the insecure localhost port
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    insecure: true
    file_reference: /path/to/create_namespace.yaml
    state: present


RETURN VALUES:

# Example response from creating a Kubernetes Namespace.
api_response:
    description: Raw response from Kubernetes API, content varies with API.
    returned: success
    type: complex
    contains:
        apiVersion: "v1"
        kind: "Namespace"
        metadata:
            creationTimestamp: "2016-01-04T21:16:32Z"
            name: "test-namespace"
            resourceVersion: "509635"
            selfLink: "/api/v1/namespaces/test-namespace"
            uid: "6dbd394e-b328-11e5-9a02-42010af0013a"
        spec:
            finalizers:
                - kubernetes
        status:
            phase: "Active"

