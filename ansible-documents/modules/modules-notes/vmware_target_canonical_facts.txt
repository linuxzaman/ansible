> VMWARE_TARGET_CANONICAL_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py)

        This module can be used to gather facts about canonical (NAA) from an ESXi host based on SCSI target ID.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- cluster_name
        Name of the cluster.
        Facts about all SCSI devices for all host system in the given cluster is returned.
        This parameter is required, if `esxi_hostname' is not provided.
        [Default: (null)]
        version_added: 2.6
        

- esxi_hostname
        Name of the ESXi host system.
        Facts about all SCSI devices for the given ESXi host system is returned.
        This parameter is required, if `cluster_name' is not provided.
        [Default: (null)]
        version_added: 2.6
        

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- target_id
        The target id based on order of scsi device.
        version 2.6 onwards, this parameter is optional.
        [Default: (null)]

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


REQUIREMENTS:  Tested on vSphere 5.5 and 6.5, PyVmomi installed

AUTHOR: Joseph Callen (@jcpowermac), Abhijeet Kasurde (@Akasurde)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Get Canonical name of particular target on particular ESXi host system
  vmware_target_canonical_facts:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    target_id: 7
    esxi_hostname: esxi_hostname
  delegate_to: localhost

- name: Get Canonical name of all target on particular ESXi host system
  vmware_target_canonical_facts:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    esxi_hostname: '{{ esxi_hostname }}'
  delegate_to: localhost

- name: Get Canonical name of all ESXi hostname on particular Cluster
  vmware_target_canonical_facts:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    cluster_name: '{{ cluster_name }}'
  delegate_to: localhost


RETURN VALUES:

canonical:
    description: metadata about SCSI Target device
    returned: if host system and target id is given
    type: str
    sample: "mpx.vmhba0:C0:T0:L0"

scsi_tgt_facts:
    description: metadata about all SCSI Target devices
    returned: if host system or cluster is given
    type: dict
    sample: {
        "DC0_C0_H0": {
            "scsilun_canonical": {
                "key-vim.host.ScsiDisk-0000000000766d686261303a303a30": "mpx.vmhba0:C0:T0:L0",
                "key-vim.host.ScsiLun-0005000000766d686261313a303a30": "mpx.vmhba1:C0:T0:L0"
            },
            "target_lun_uuid": {
                "0": "key-vim.host.ScsiDisk-0000000000766d686261303a303a30"
            }
        },
        "DC0_C0_H1": {
            "scsilun_canonical": {
                "key-vim.host.ScsiDisk-0000000000766d686261303a303a30": "mpx.vmhba0:C0:T0:L0",
                "key-vim.host.ScsiLun-0005000000766d686261313a303a30": "mpx.vmhba1:C0:T0:L0"
            },
            "target_lun_uuid": {
                "0": "key-vim.host.ScsiDisk-0000000000766d686261303a303a30"
            }
        },
    }

