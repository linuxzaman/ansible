> GCP_COMPUTE_BACKEND_BUCKET    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_backend_bucket.py)

        Backend buckets allow you to use Google Cloud Storage buckets with HTTP(S) load balancing. An HTTP(S) load balancer can direct
        traffic to specified URLs to a backend bucket rather than a backend service. It can send requests for static content to a Cloud
        Storage bucket and requests for dynamic content a virtual machine instance.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

= bucket_name
        Cloud Storage bucket name.


- cdn_policy
        Cloud CDN configuration for this Backend Bucket.
        [Default: (null)]
        suboptions:
          signed_url_cache_max_age_sec:
            default: '3600'
            description:
            - Maximum number of seconds the response to a signed URL request will be considered
              fresh. Defaults to 1hr (3600s). After this time period, the response will be
              revalidated before being served.
            - 'When serving responses to signed URL requests, Cloud CDN will internally behave
              as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]"
              header, regardless of any existing Cache-Control header. The actual headers
              served in responses will not be altered.'
            required: false
        
        version_added: 2.8
        

- description
        An optional textual description of the resource; provided by the client when the resource is created.
        [Default: (null)]

- enable_cdn
        If true, enable Cloud CDN for this BackendBucket.
        [Default: (null)]
        type: bool

= name
        Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
        means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
        except the last character, which cannot be a dash.


- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]


NOTES:
      * API Reference: https://cloud.google.com/compute/docs/reference/v1/backendBuckets
      * Using a Cloud Storage bucket as a load balancer backend: https://cloud.google.com/compute/docs/load-balancing/http/backend-
        bucket
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a bucket
  gcp_storage_bucket:
    name: bucket-backendbucket
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: bucket

- name: create a backend bucket
  gcp_compute_backend_bucket:
    name: test_object
    bucket_name: "{{ bucket.name }}"
    description: A BackendBucket to connect LNB w/ Storage Bucket
    enable_cdn: 'true'
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

bucketName:
  description:
  - Cloud Storage bucket name.
  returned: success
  type: str
cdnPolicy:
  description:
  - Cloud CDN configuration for this Backend Bucket.
  returned: success
  type: complex
  contains:
    signedUrlCacheMaxAgeSec:
      description:
      - Maximum number of seconds the response to a signed URL request will be considered
        fresh. Defaults to 1hr (3600s). After this time period, the response will
        be revalidated before being served.
      - 'When serving responses to signed URL requests, Cloud CDN will internally
        behave as though all responses from this backend had a "Cache-Control: public,
        max-age=[TTL]" header, regardless of any existing Cache-Control header. The
        actual headers served in responses will not be altered.'
      returned: success
      type: int
creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
description:
  description:
  - An optional textual description of the resource; provided by the client when the
    resource is created.
  returned: success
  type: str
enableCdn:
  description:
  - If true, enable Cloud CDN for this BackendBucket.
  returned: success
  type: bool
id:
  description:
  - Unique identifier for the resource.
  returned: success
  type: int
name:
  description:
  - Name of the resource. Provided by the client when the resource is created. The
    name must be 1-63 characters long, and comply with RFC1035. Specifically, the
    name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str

