> AVI_VIRTUALSERVICE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/avi/avi_virtualservice.py)

        This module is used to configure VirtualService object more examples at https://github.com/avinetworks/devops

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- active_standby_se_tag
        This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active
        standby is enabled.
        This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine.
        Virtualservices with different tags will have different active serviceengines.
        If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active
        serviceengine.
        Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers.
        Redistribution is based on the auto redistribute property of the serviceenginegroup.
        Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2.
        Default value when not specified in API or module is interpreted by Avi Controller as ACTIVE_STANDBY_SE_1.
        [Default: (null)]

- analytics_policy
        Determines analytics settings for the application.
        [Default: (null)]

- analytics_profile_ref
        Specifies settings related to analytics.
        It is a reference to an object of type analyticsprofile.
        [Default: (null)]

- api_context
        Avi API context that includes current session ID and CSRF Token.
        This allows user to perform single login and re-use the session.
        [Default: (null)]
        type: dict
        version_added: 2.5

- api_version
        Avi API version of to use for Avi API and objects.
        [Default: 16.4.4]
        type: str

- application_profile_ref
        Enable application layer specific features for the virtual service.
        It is a reference to an object of type applicationprofile.
        [Default: (null)]

- auto_allocate_floating_ip
        Auto-allocate floating/elastic ip from the cloud infrastructure.
        Field deprecated in 17.1.1.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- auto_allocate_ip
        Auto-allocate vip from the provided subnet.
        Field deprecated in 17.1.1.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- availability_zone
        Availability-zone to place the virtual service.
        Field deprecated in 17.1.1.
        [Default: (null)]

- avi_allocated_fip
        (internal-use) fip allocated by avi in the cloud infrastructure.
        Field deprecated in 17.1.1.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- avi_allocated_vip
        (internal-use) vip allocated by avi in the cloud infrastructure.
        Field deprecated in 17.1.1.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- avi_api_patch_op
        Patch operation to use when using avi_api_update_method as patch.
        (Choices: add, replace, delete)[Default: (null)]
        version_added: 2.5

- avi_api_update_method
        Default method for object update is HTTP PUT.
        Setting to patch will override that behavior to use HTTP PATCH.
        (Choices: put, patch)[Default: put]
        version_added: 2.5

- avi_credentials
        Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details.
        [Default: (null)]
        type: dict
        version_added: 2.5

- bulk_sync_kvcache
        (this is a beta feature).
        Sync key-value cache to the new ses when vs is scaled out.
        For ex  ssl sessions are stored using vs's key-value cache.
        When the vs is scaled out, the ssl session information is synced to the new se, allowing existing ssl sessions to be reused on
        the new se.
        Field introduced in 17.2.7, 18.1.1.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool
        version_added: 2.6

- client_auth
        Http authentication configuration for protected resources.
        [Default: (null)]

- close_client_conn_on_config_update
        Close client connection on vs config update.
        Field introduced in 17.2.4.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool
        version_added: 2.5

- cloud_config_cksum
        Checksum of cloud configuration for vs.
        Internally set by cloud connector.
        [Default: (null)]

- cloud_ref
        It is a reference to an object of type cloud.
        [Default: (null)]

- cloud_type
        Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver,
        cloud_docker_ucp,
        cloud_rancher, cloud_oshift_k8s, cloud_azure.
        Default value when not specified in API or module is interpreted by Avi Controller as CLOUD_NONE.
        [Default: (null)]

- connections_rate_limit
        Rate limit the incoming connections to this virtual service.
        [Default: (null)]

- content_rewrite
        Profile used to match and rewrite strings in request and/or response body.
        [Default: (null)]

- controller
        IP address or hostname of the controller. The default value is the environment variable `AVI_CONTROLLER'.
        [Default: ]
        type: str

- created_by
        Creator name.
        [Default: (null)]

- delay_fairness
        Select the algorithm for qos fairness.
        This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- description
        User defined description for the object.
        [Default: (null)]

- discovered_network_ref
        (internal-use) discovered networks providing reachability for client facing virtual service ip.
        This field is deprecated.
        It is a reference to an object of type network.
        Field deprecated in 17.1.1.
        [Default: (null)]

- discovered_networks
        (internal-use) discovered networks providing reachability for client facing virtual service ip.
        This field is used internally by avi, not editable by the user.
        Field deprecated in 17.1.1.
        [Default: (null)]

- discovered_subnet
        (internal-use) discovered subnets providing reachability for client facing virtual service ip.
        This field is deprecated.
        Field deprecated in 17.1.1.
        [Default: (null)]

- dns_info
        Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record.
        Note that only one of fqdn and dns_info setting is allowed.
        [Default: (null)]

- dns_policies
        Dns policies applied on the dns traffic of the virtual service.
        Field introduced in 17.1.1.
        [Default: (null)]
        version_added: 2.4

- east_west_placement
        Force placement on all se's in service group (mesos mode only).
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- enable_autogw
        Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a
        default gateway.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- enable_rhi
        Enable route health injection using the bgp config in the vrf context.
        [Default: (null)]
        type: bool

- enable_rhi_snat
        Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context.
        [Default: (null)]
        type: bool

- enabled
        Enable or disable the virtual service.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- error_page_profile_ref
        Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated
        by the proxy.
        It is a reference to an object of type errorpageprofile.
        Field introduced in 17.2.4.
        [Default: (null)]
        version_added: 2.5

- floating_ip
        Floating ip to associate with this virtual service.
        Field deprecated in 17.1.1.
        [Default: (null)]

- floating_subnet_uuid
        If auto_allocate_floating_ip is true and more than one floating-ip subnets exist, then the subnet for the floating ip address
        allocation.
        This field is applicable only if the virtualservice belongs to an openstack or aws cloud.
        In openstack or aws cloud it is required when auto_allocate_floating_ip is selected.
        Field deprecated in 17.1.1.
        [Default: (null)]

- flow_dist
        Criteria for flow distribution among ses.
        Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT.
        Default value when not specified in API or module is interpreted by Avi Controller as LOAD_AWARE.
        [Default: (null)]

- flow_label_type
        Criteria for flow labelling.
        Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL.
        Default value when not specified in API or module is interpreted by Avi Controller as NO_LABEL.
        [Default: (null)]

- fqdn
        Dns resolvable, fully qualified domain name of the virtualservice.
        Only one of 'fqdn' and 'dns_info' configuration is allowed.
        [Default: (null)]

- host_name_xlate
        Translate the host name sent to the servers to this value.
        Translate the host name sent from servers back to the value used by the client.
        [Default: (null)]

- http_policies
        Http policies applied on the data traffic of the virtual service.
        [Default: (null)]

- ign_pool_net_reach
        Ignore pool servers network reachability constraints for virtual service placement.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- ip_address
        Ip address of the virtual service.
        Field deprecated in 17.1.1.
        [Default: (null)]

- ipam_network_subnet
        Subnet and/or network for allocating virtualservice ip by ipam provider module.
        Field deprecated in 17.1.1.
        [Default: (null)]

- l4_policies
        L4 policies applied to the data traffic of the virtual service.
        Field introduced in 17.2.7.
        [Default: (null)]
        version_added: 2.6

- limit_doser
        Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- max_cps_per_client
        Maximum connections per second per client ip.
        Allowed values are 10-1000.
        Special values are 0- 'unlimited'.
        Default value when not specified in API or module is interpreted by Avi Controller as 0.
        [Default: (null)]

- microservice_ref
        Microservice representing the virtual service.
        It is a reference to an object of type microservice.
        [Default: (null)]

= name
        Name for the virtual service.


- network_profile_ref
        Determines network settings such as protocol, tcp or udp, and related options for the protocol.
        It is a reference to an object of type networkprofile.
        [Default: (null)]

- network_ref
        Manually override the network on which the virtual service is placed.
        It is a reference to an object of type network.
        Field deprecated in 17.1.1.
        [Default: (null)]

- network_security_policy_ref
        Network security policies for the virtual service.
        It is a reference to an object of type networksecuritypolicy.
        [Default: (null)]

- nsx_securitygroup
        A list of nsx service groups representing the clients which can access the virtual ip of the virtual service.
        Field introduced in 17.1.1.
        [Default: (null)]
        version_added: 2.4

- password
        Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'.
        [Default: ]
        type: str

- performance_limits
        Optional settings that determine performance limits like max connections or bandwdith etc.
        [Default: (null)]

- pool_group_ref
        The pool group is an object that contains pools.
        It is a reference to an object of type poolgroup.
        [Default: (null)]

- pool_ref
        The pool is an object that contains destination servers and related attributes such as load-balancing and persistence.
        It is a reference to an object of type pool.
        [Default: (null)]

- port_uuid
        (internal-use) network port assigned to the virtual service ip address.
        Field deprecated in 17.1.1.
        [Default: (null)]

- remove_listening_port_on_vs_down
        Remove listening port if virtualservice is down.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- requests_rate_limit
        Rate limit the incoming requests to this virtual service.
        [Default: (null)]

- scaleout_ecmp
        Disable re-distribution of flows across service engines for a virtual service.
        Enable if the network itself performs flow hashing with ecmp in environments such as gcp.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- se_group_ref
        The service engine group to use for this virtual service.
        Moving to a new se group is disruptive to existing connections for this vs.
        It is a reference to an object of type serviceenginegroup.
        [Default: (null)]

- server_network_profile_ref
        Determines the network settings profile for the server side of tcp proxied connections.
        Leave blank to use the same settings as the client to vs side of the connection.
        It is a reference to an object of type networkprofile.
        [Default: (null)]

- service_metadata
        Metadata pertaining to the service provided by this virtual service.
        In openshift/kubernetes environments, egress pod info is stored.
        Any user input to this field will be overwritten by avi vantage.
        [Default: (null)]
        version_added: 2.4

- service_pool_select
        Select pool based on destination port.
        [Default: (null)]

- services
        List of services defined for this virtual service.
        [Default: (null)]

- sideband_profile
        Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external
        inspection etc.
        [Default: (null)]
        version_added: 2.4

- snat_ip
        Nat'ted floating source ip address(es) for upstream connection to servers.
        [Default: (null)]

- sp_pool_refs
        Gslb pools used to manage site-persistence functionality.
        Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager.
        This is a read-only field for the user.
        It is a reference to an object of type pool.
        Field introduced in 17.2.2.
        [Default: (null)]
        version_added: 2.5

- ssl_key_and_certificate_refs
        Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections.
        It is a reference to an object of type sslkeyandcertificate.
        [Default: (null)]

- ssl_profile_ref
        Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections.
        It is a reference to an object of type sslprofile.
        [Default: (null)]

- ssl_sess_cache_avg_size
        Expected number of ssl session cache entries (may be exceeded).
        Allowed values are 1024-16383.
        Default value when not specified in API or module is interpreted by Avi Controller as 1024.
        [Default: (null)]

- state
        The state that should be applied on the entity.
        (Choices: absent, present)[Default: present]

- static_dns_records
        List of static dns records applied to this virtual service.
        These are static entries and no health monitoring is performed against the ip addresses.
        [Default: (null)]

- subnet
        Subnet providing reachability for client facing virtual service ip.
        Field deprecated in 17.1.1.
        [Default: (null)]

- subnet_uuid
        It represents subnet for the virtual service ip address allocation when auto_allocate_ip is true.it is only applicable in
        openstack or aws cloud.
        This field is required if auto_allocate_ip is true.
        Field deprecated in 17.1.1.
        [Default: (null)]

- tenant
        Name of tenant used for all Avi API calls and context of object.
        [Default: admin]
        type: str

- tenant_ref
        It is a reference to an object of type tenant.
        [Default: (null)]

- tenant_uuid
        UUID of tenant used for all Avi API calls and context of object.
        [Default: ]
        type: str

- traffic_clone_profile_ref
        Server network or list of servers for cloning traffic.
        It is a reference to an object of type trafficcloneprofile.
        Field introduced in 17.1.1.
        [Default: (null)]
        version_added: 2.4

- traffic_enabled
        Knob to enable the virtual service traffic on its assigned service engines.
        This setting is effective only when the enabled flag is set to true.
        Field introduced in 17.2.8.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool
        version_added: 2.6

- type
        Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service.
        Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD.
        Default value when not specified in API or module is interpreted by Avi Controller as VS_TYPE_NORMAL.
        [Default: (null)]

- url
        Avi controller URL of the object.
        [Default: (null)]

- use_bridge_ip_as_vip
        Use bridge ip as vip on each host in mesos deployments.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- use_vip_as_snat
        Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine
        interface ip.
        The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode.
        Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes.
        Field introduced in 17.1.9,17.2.3.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool
        version_added: 2.5

- username
        Username used for accessing Avi controller. The default value is the environment variable `AVI_USERNAME'.
        [Default: ]
        type: str

- uuid
        Uuid of the virtualservice.
        [Default: (null)]

- vh_domain_name
        The exact name requested from the client's sni-enabled tls hello domain name field.
        If this is a match, the parent vs will forward the connection to this child vs.
        [Default: (null)]

- vh_parent_vs_uuid
        Specifies the virtual service acting as virtual hosting (sni) parent.
        [Default: (null)]

- vip
        List of virtual service ips.
        While creating a 'shared vs',please use vsvip_ref to point to the shared entities.
        Field introduced in 17.1.1.
        [Default: (null)]
        version_added: 2.4

- vrf_context_ref
        Virtual routing context that the virtual service is bound to.
        This is used to provide the isolation of the set of networks the application is attached to.
        It is a reference to an object of type vrfcontext.
        [Default: (null)]

- vs_datascripts
        Datascripts applied on the data traffic of the virtual service.
        [Default: (null)]

- vsvip_ref
        Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services.
        It is a reference to an object of type vsvip.
        Field introduced in 17.1.1.
        [Default: (null)]
        version_added: 2.4

- waf_policy_ref
        Waf policy for the virtual service.
        It is a reference to an object of type wafpolicy.
        Field introduced in 17.2.1.
        [Default: (null)]
        version_added: 2.5

- weight
        The quality of service weight to assign to traffic transmitted from this virtual service.
        A higher weight will prioritize traffic versus other virtual services sharing the same service engines.
        Allowed values are 1-128.
        Default value when not specified in API or module is interpreted by Avi Controller as 1.
        [Default: (null)]


NOTES:
      * For more information on using Ansible to manage Avi Network devices see https://www.ansible.com/ansible-avi-networks.


REQUIREMENTS:  avisdk

AUTHOR: Gaurav Rastogi (@grastogi23) <grastogi@avinetworks.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create SSL Virtual Service using Pool testpool2
  avi_virtualservice:
    controller: 10.10.27.90
    username: admin
    password: AviNetworks123!
    name: newtestvs
    state: present
    performance_limits:
    max_concurrent_connections: 1000
    services:
        - port: 443
          enable_ssl: true
        - port: 80
    ssl_profile_ref: '/api/sslprofile?name=System-Standard'
    application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'
    ssl_key_and_certificate_refs:
        - '/api/sslkeyandcertificate?name=System-Default-Cert'
    ip_address:
    addr: 10.90.131.103
    type: V4
    pool_ref: '/api/pool?name=testpool2'


RETURN VALUES:

obj:
    description: VirtualService (api/virtualservice) object
    returned: success, changed
    type: dict

