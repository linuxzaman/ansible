> NXOS_INTERFACE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nxos/nxos_interface.py)

        Manages physical attributes of interfaces of NX-OS switches.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- admin_state
        Administrative state of the interface.
        (Choices: up, down)[Default: up]

- aggregate
        List of Interfaces definitions.
        [Default: (null)]
        version_added: 2.5
        

- delay
        Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state
        arguments.
        [Default: 10]

- description
        Interface description.
        [Default: (null)]

- duplex
        Interface link status. Applicable for ethernet interface only.
        (Choices: full, half, auto)[Default: auto]
        version_added: 2.5
        

- fabric_forwarding_anycast_gateway
        Associate SVI with anycast gateway under VLAN configuration mode. Applicable for SVI interface only.
        [Default: (null)]
        type: bool
        version_added: 2.2
        

- interface_type
        Interface type to be unconfigured from the device.
        (Choices: loopback, portchannel, svi, nve)[Default: (null)]
        version_added: 2.2
        

- ip_forward
        Enable/Disable ip forward feature on SVIs.
        (Choices: enable, disable)[Default: (null)]
        version_added: 2.2
        

- mode
        Manage Layer 2 or Layer 3 state of the interface. This option is supported for ethernet and portchannel interface. Applicable for
        ethernet and portchannel interface only.
        (Choices: layer2, layer3)[Default: (null)]

- mtu
        MTU for a specific interface. Must be an even number between 576 and 9216. Applicable for ethernet interface only.
        [Default: (null)]
        version_added: 2.5
        

= name
        Full name of interface, i.e. Ethernet1/1, port-channel10.
        (Aliases: interface)

- neighbors
        Check the operational state of given interface `name' for LLDP neighbor.
        The following suboptions are available. This is state check parameter only.
        [Default: (null)]
        suboptions:
          host:
            description:
            - LLDP neighbor host for given interface `name'.
          port:
            description:
            - LLDP neighbor port to which given interface `name' is connected.
        
        version_added: 2.5
        

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using NX-API.
        For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
            version_added: 2.5.3
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
            version_added: 2.5.3
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `nxapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `nxapi'.  The port value will default to
              the appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.  This
              argument is only used for the `cli' transport. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE' will
              be used instead.
            type: str
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error. NX-API can be slow to return
              on long-running commands (sh mac, sh bgp, etc).
            type: int
            version_added: '2.3'
          transport:
            choices:
            - cli
            - nxapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.  The
              transport argument supports connectivity to the device over cli (ssh) or nxapi.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: false
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=nxapi',
              otherwise this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the nxapi
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not nxapi, this value is ignored.
            type: bool
        
        type: dict

- rx_rate
        Receiver rate in bits per second (bps).
        This is state check parameter only.
        Supports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)
        [Default: (null)]
        version_added: 2.5
        

- speed
        Interface link speed. Applicable for ethernet interface only.
        [Default: (null)]
        version_added: 2.5
        

- state
        Specify desired state of the resource.
        (Choices: present, absent, default)[Default: present]

- tx_rate
        Transmit rate in bits per second (bps).
        This is state check parameter only.
        Supports conditionals, see L(Conditionals in Networking Modules,../network/user_guide/network_working_with_command_output.html)
        [Default: (null)]
        version_added: 2.5
        


NOTES:
      * Tested against NXOSv 7.3.(0)D1(1) on VIRL
      * This module is also used to create logical interfaces such as svis and loopbacks.
      * Be cautious of platform specific idiosyncrasies. For example, when you default a loopback interface, the admin state
        toggles on certain versions of NX-OS.
      * The [nxos_overlay_global] `anycast_gateway_mac' attribute must be set before setting the
        `fabric_forwarding_anycast_gateway' property.
      * For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


AUTHOR: Jason Edelman (@jedelman8), Trishna Guha (@trishnaguha)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: Ensure an interface is a Layer 3 port and that it has the proper description
  nxos_interface:
    name: Ethernet1/1
    description: 'Configured by Ansible'
    mode: layer3

- name: Admin down an interface
  nxos_interface:
    name: Ethernet2/1
    admin_state: down

- name: Remove all loopback interfaces
  nxos_interface:
    name: loopback
    state: absent

- name: Remove all logical interfaces
  nxos_interface:
    interface_type: "{{ item }} "
    state: absent
  loop:
    - loopback
    - portchannel
    - svi
    - nve

- name: Admin up all loopback interfaces
  nxos_interface:
    name: loopback 0-1023
    admin_state: up

- name: Admin down all loopback interfaces
  nxos_interface:
    name: looback 0-1023
    admin_state: down

- name: Check neighbors intent arguments
  nxos_interface:
    name: Ethernet2/3
    neighbors:
    - port: Ethernet2/3
      host: abc.mycompany.com

- name: Add interface using aggregate
  nxos_interface:
    aggregate:
    - { name: Ethernet0/1, mtu: 256, description: test-interface-1 }
    - { name: Ethernet0/2, mtu: 516, description: test-interface-2 }
    duplex: full
    speed: 100
    state: present

- name: Delete interface using aggregate
  nxos_interface:
    aggregate:
    - name: Loopback9
    - name: Loopback10
    state: absent

- name: Check intent arguments
  nxos_interface:
    name: Ethernet0/2
    state: up
    tx_rate: ge(0)
    rx_rate: le(0)


RETURN VALUES:

commands:
    description: command list sent to the device
    returned: always
    type: list
    sample:
      - interface Ethernet2/3
      - mtu 1500
      - speed 10

