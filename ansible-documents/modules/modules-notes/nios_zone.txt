> NIOS_ZONE    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/nios/nios_zone.py)

        Adds and/or removes instances of DNS zone objects from Infoblox NIOS servers.  This module manages NIOS `zone_auth' objects using
        the Infoblox WAPI interface over REST.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- comment
        Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured
        on the object instance.
        [Default: (null)]

- extattrs
        Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value
        pairs for configuration.
        [Default: (null)]

= fqdn
        Specifies the qualified domain name to either add or remove from the NIOS instance based on the configured `state' value.
        (Aliases: name)

- grid_primary
        Configures the grid primary servers for this zone.
        [Default: (null)]
        suboptions:
          name:
            description:
            - The name of the grid primary server
        

- grid_secondaries
        Configures the grid secondary servers for this zone.
        [Default: (null)]
        suboptions:
          name:
            description:
            - The name of the grid secondary server
        

- ns_group
        Configures the name server group for this zone. Name server group is mutually exclusive with grid primary and grid secondaries.
        [Default: (null)]
        version_added: 2.6

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote instance
              of NIOS WAPI over REST
            - Value can also be specified using `INFOBLOX_HOST' environment variable.
            required: true
            type: str
          http_request_timeout:
            default: 10
            description:
            - The amount of time before to wait before receiving a response
            - Value can also be specified using `INFOBLOX_HTTP_REQUEST_TIMEOUT' environment
              variable.
            type: int
          max_results:
            default: 1000
            description:
            - Specifies the maximum number of objects to be returned, if set to a negative
              number the appliance will return an error when the number of returned objects
              would exceed the setting.
            - Value can also be specified using `INFOBLOX_MAX_RESULTS' environment variable.
            type: int
          max_retries:
            default: 3
            description:
            - Configures the number of attempted retries before the connection is declared
              usable
            - Value can also be specified using `INFOBLOX_MAX_RETRIES' environment variable.
            type: int
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote instance
              of NIOS.
            - Value can also be specified using `INFOBLOX_PASSWORD' environment variable.
            type: str
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              instance of NIOS.
            - Value can also be specified using `INFOBLOX_USERNAME' environment variable.
            type: str
          validate_certs:
            aliases:
            - ssl_verify
            default: false
            description:
            - Boolean value to enable or disable verifying SSL certificates
            - Value can also be specified using `INFOBLOX_SSL_VERIFY' environment variable.
            type: bool
          wapi_version:
            default: '2.1'
            description:
            - Specifies the version of WAPI to use
            - Value can also be specified using `INFOBLOX_WAP_VERSION' environment variable.
            - Until ansible 2.8 the default WAPI was 1.4
            type: str
        
        type: dict

- restart_if_needed
        If set to true, causes the NIOS DNS service to restart and load the new zone configuration
        [Default: (null)]
        type: bool
        version_added: 2.6

- state
        Configures the intended state of the instance of the object on the NIOS server.  When this value is set to `present', the object
        is configured on the device and when this value is set to `absent' the value is removed (if necessary) from the device.
        (Choices: present, absent)[Default: present]

= view
        Configures the DNS view name for the configured resource.  The specified DNS zone must already exist on the running NIOS instance
        prior to configuring zones.
        (Aliases: dns_view)[Default: default]

- zone_format
        Create an authorative Reverse-Mapping Zone which is an area of network space for which one or more name servers-primary and
        secondary-have the responsibility to respond to address-to-name queries. It supports reverse-mapping zones for both IPv4 and IPv6
        addresses.
        [Default: FORWARD]
        version_added: 2.7


NOTES:
      * This module must be run locally, which can be achieved by specifying `connection: local'.
      * Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible.


REQUIREMENTS:  infoblox-client

AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: configure a zone on the system using grid primary and secondaries
  nios_zone:
    name: ansible.com
    grid_primary:
      - name: gridprimary.grid.com
    grid_secondaries:
      - name: gridsecondary1.grid.com
      - name: gridsecondary2.grid.com
    restart_if_needed: true
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: configure a zone on the system using a name server group
  nios_zone:
    name: ansible.com
    ns_group: examplensg
    restart_if_needed: true
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: configure a reverse mapping zone on the system using IPV4 zone format
  nios_zone:
    name: 10.10.10.0/24
    zone_format: IPV4
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: configure a reverse mapping zone on the system using IPV6 zone format
  nios_zone:
    name: 100::1/128
    zone_format: IPV6
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: update the comment and ext attributes for an existing zone
  nios_zone:
    name: ansible.com
    comment: this is an example comment
    extattrs:
      Site: west-dc
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: remove the dns zone
  nios_zone:
    name: ansible.com
    state: absent
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local
- name: remove the reverse mapping dns zone from the system with IPV4 zone format
  nios_zone:
    name: 10.10.10.0/24
    zone_format: IPV4
    state: absent
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local


RETURN VALUES:
 # 
