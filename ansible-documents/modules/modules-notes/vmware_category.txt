> VMWARE_CATEGORY    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_category.py)

        This module can be used to create / delete / update VMware categories. Tag feature is introduced in vSphere 6 version, so this
        module is not supported in the earlier versions of vSphere. All variables and VMware object names are case sensitive.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- category_cardinality
        The category cardinality.
        This parameter is ignored, when updating existing category.
        (Choices: multiple, single)[Default: multiple]

- category_description
        The category description.
        This is required only if `state' is set to `present'.
        This parameter is ignored, when `state' is set to `absent'.
        [Default: ]

= category_name
        The name of category to manage.


- hostname
        The hostname or IP address of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        [Default: (null)]
        type: str

- new_category_name
        The new name for an existing category.
        This value is used while updating an existing category.
        [Default: (null)]

- password
        The password of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- protocol
        The connection to protocol.
        (Choices: http, https)[Default: https]
        type: str

- state
        The state of category.
        If set to `present' and category does not exists, then category is created.
        If set to `present' and category exists, then category is updated.
        If set to `absent' and category exists, then category is deleted.
        If set to `absent' and category does not exists, no action is taken.
        Process of updating category only allows name, description change.
        (Choices: present, absent)[Default: present]

- username
        The username of the vSphere vCenter server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid.
        Set to `no' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi, vSphere Automation SDK, vCloud Suite SDK

AUTHOR: Abhijeet Kasurde (@Akasurde)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a category
  vmware_category:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    category_name: Sample_Cat_0001
    category_description: Sample Description
    category_cardinality: 'multiple'
    state: present

- name: Rename category
  vmware_category:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    category_name: Sample_Category_0001
    new_category_name: Sample_Category_0002
    state: present

- name: Update category description
  vmware_category:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    category_name: Sample_Category_0001
    category_description: Some fancy description
    state: present

- name: Delete category
  vmware_category:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    category_name: Sample_Category_0002
    state: absent


RETURN VALUES:

category_results:
  description: dictionary of category metadata
  returned: on success
  type: dict
  sample: {
        "category_id": "urn:vmomi:InventoryServiceCategory:d7120bda-9fa5-4f92-9d71-aa1acff2e5a8:GLOBAL",
        "msg": "Category NewCat_0001 updated."
    }

