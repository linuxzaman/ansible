> NSO_VERIFY    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nso/nso_verify.py)

        This module provides support for verifying Cisco NSO configuration is in compliance with specified values.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

= data
        NSO data in format as `| display json' converted to YAML. List entries can be annotated with a `__state' entry. Set to in-sync
        /deep-in-sync for services to verify service is in sync with the network. Set to absent in list entries to ensure they are
        deleted if they exist in NSO.


= password
        NSO password

        type: str

- timeout
        JSON-RPC request timeout in seconds
        [Default: 300]
        type: int
        version_added: 2.6

= url
        NSO JSON-RPC URL, http://localhost:8080/jsonrpc

        type: str

= username
        NSO username

        type: str

- validate_certs
        When set to true, validates the SSL certificate of NSO when using SSL
        [Default: False]
        type: bool


REQUIREMENTS:  Cisco NSO version 3.4.12 or higher, 4.2.7 or higher, 4.3.8 or higher, 4.4.3 or higher, 4.5 or higher.

AUTHOR: Claes Nästén (@cnasten)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Verify interface is up
  nso_config:
    url: http://localhost:8080/jsonrpc
    username: username
    password: password
    data:
      ncs:devices:
        device:
        - name: ce0
          live-status:
            interfaces:
              interface:
                - name: GigabitEthernet0/12
                - state: Up


RETURN VALUES:

violations:
    description: List of value violations
    returned: failed
    type: complex
    sample:
        - path: /ncs:devices/device{ce0}/description
          expected-value: CE0 example
          value: null
    contains:
        path:
            description: Path to the value in violation
            returned: always
            type: str
        expected-value:
            description: Expected value of path
            returned: always
            type: str
        value:
            description: Current value of path
            returned: always
            type: str

