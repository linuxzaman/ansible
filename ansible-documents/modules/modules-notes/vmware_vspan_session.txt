> VMWARE_VSPAN_SESSION    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_vspan_session.py)

        This module can be used to create, delete or edit different kind of port mirroring sessions.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- description
        The description for the session.
        [Default: (null)]

- destination_port
        Destination port that received the mirrored packets. Also any port designated in the value of this property can not match the
        source port in any of the Distributed Port Mirroring session.
        [Default: (null)]

- destination_vm
        With this parameter it is possible, to add a NIC of a VM to a port mirroring session.
        Valid attributes are:
        - `name' (str): Name of the VM
        - `nic_label' (bool): Label of the Network Interface Card to use.
        [Default: (null)]

- enabled
        Whether the session is enabled.
        [Default: True]
        type: bool

- encapsulation_vlan_id
        VLAN ID used to encapsulate the mirrored traffic.
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- mirrored_packet_length
        An integer that describes how much of each frame to mirror. If unset, all of the frame would be mirrored. Setting this property
        to a smaller value is useful when the consumer will look only at the headers. The value cannot be less than 60.
        [Default: (null)]

= name
        Name of the session.


- normal_traffic_allowed
        Whether or not destination ports can send and receive "normal" traffic. Setting this to false will make mirror ports be used
        solely for mirroring and not double as normal access ports.
        [Default: (null)]
        type: bool

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- sampling_rate
        Sampling rate of the session. If its value is n, one of every n packets is mirrored. Valid values are between 1 to 65535, and
        default value is 1.
        [Default: (null)]
        type: int

- session_type
        Select the mirroring type.
        - `encapsulatedRemoteMirrorSource' (str): In encapsulatedRemoteMirrorSource session, Distributed Ports can be used as source
        entities, and Ip address can be used as destination entities.
        - `remoteMirrorDest' (str): In remoteMirrorDest session, vlan Ids can be used as source entities, and Distributed Ports can be
        used as destination entities.
        - `remoteMirrorSource' (str): In remoteMirrorSource session, Distributed Ports can be used as source entities, and uplink ports
        name can be used as destination entities.
        - `dvPortMirror' (str): In dvPortMirror session, Distributed Ports can be used as both source and destination entities.
        (Choices: encapsulatedRemoteMirrorSource, remoteMirrorDest, remoteMirrorSource, dvPortMirror)[Default: dvPortMirror]

- source_port_received
        Source port for which received packets are mirrored.
        [Default: (null)]

- source_port_transmitted
        Source port for which transmitted packets are mirrored.
        [Default: (null)]

- source_vm_received
        With this parameter it is possible, to add a NIC of a VM to a port mirroring session.
        Valid attributes are:
        - `name' (str): Name of the VM
        - `nic_label' (bool): Label of the Network Interface Card to use.
        [Default: (null)]

- source_vm_transmitted
        With this parameter it is possible, to add a NIC of a VM to a port mirroring session.
        Valid attributes are:
        - `name' (str): Name of the VM
        - `nic_label' (bool): Label of the Network Interface Card to use.
        [Default: (null)]

= state
        Create or remove the session.
        (Choices: present, absent)

- strip_original_vlan
        Whether to strip the original VLAN tag. if false, the original VLAN tag will be preserved on the mirrored traffic. If
        encapsulationVlanId has been set and this property is false, the frames will be double tagged with the original VLAN ID as the
        inner tag.
        [Default: (null)]
        type: bool

= switch
        The name of the distributed vSwitch on which to add or remove the mirroring session.
        (Aliases: switch_name)

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.7


REQUIREMENTS:  python > =  2.6, PyVmomi

AUTHOR: Peter Gyorgy (@gyorgypeter) <gyorgy.peter1996@gmail.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create distributed mirroring session.
  vmware_vspan_session:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    switch_name: dvSwitch
    state: present
    name: Basic Session
    enabled: True
    description: "Example description"
    source_port_transmitted: 817
    source_port_received: 817
    destination_port: 815
  delegate_to: localhost

- name: Create remote destination mirroring session.
  vmware_vspan_session:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    switch_name: dvSwitch
    state: present
    name: Remote Session
    enabled: True
    description: "Example description"
    source_port_received: 105
    destination_port: 815
    session_type: "remoteMirrorDest"
  delegate_to: localhost

- name: Create remote destination mirroring session.
  vmware_vspan_session:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    switch_name: dvSwitch
    state: absent
    name: Remote Session
  delegate_to: localhost


RETURN VALUES:
#

