> CE_FILE_COPY    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_file_copy.py)

        Copy a file to a remote cloudengine device over SCP on HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- file_system
        The remote file system of the device. If omitted, devices that support a `file_system' parameter will use their default values.
        File system indicates the storage medium and can be set to as follows, 1) `flash' is root directory of the flash memory on the
        master MPU. 2) `slave#flash' is root directory of the flash memory on the slave MPU. If no slave MPU exists, this drive is
        unavailable. 3) `chassis ID/slot number#flash' is root directory of the flash memory on a device in a stack. For example,
        `1/5#flash' indicates the flash memory whose chassis ID is 1 and slot number is 5.
        [Default: flash:]

= local_file
        Path to local file. Local directory must exist. The maximum length of `local_file' is `4096'.


- remote_file
        Remote file path of the copy. Remote directories must exist. If omitted, the name of the local file will be used. The maximum
        length of `remote_file' is `4096'.
        [Default: (null)]


NOTES:
      * The feature must be enabled with feature scp-server.
      * If the file is already present, no transfer will take place.


REQUIREMENTS:  paramiko

AUTHOR: Zhou Zhijin (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: File copy test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: "Copy a local file to remote device"
    ce_file_copy:
      local_file: /usr/vrpcfg.cfg
      remote_file: /vrpcfg.cfg
      file_system: 'flash:'
      provider: "{{ cli }}"


RETURN VALUES:

changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true
transfer_result:
    description: information about transfer result.
    returned: always
    type: str
    sample: 'The local file has been successfully transferred to the device.'
local_file:
    description: The path of the local file.
    returned: always
    type: str
    sample: '/usr/work/vrpcfg.zip'
remote_file:
    description: The path of the remote file.
    returned: always
    type: str
    sample: '/vrpcfg.zip'

