> CS_NETWORK_ACL_RULE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudstack/cs_network_acl_rule.py)

        Add, update and remove network ACL rules.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- account
        Account the VPC is related to.
        [Default: (null)]
        type: str

- action_policy
        Action policy of the rule.
        (Aliases: action)(Choices: allow, deny)[Default: allow]
        type: str

- api_http_method
        HTTP method used to query the API endpoint.
        If not given, the `CLOUDSTACK_METHOD' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is `get' if not specified.
        (Choices: get, post)[Default: (null)]
        type: str

- api_key
        API key of the CloudStack API.
        If not given, the `CLOUDSTACK_KEY' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_region
        Name of the ini section in the `cloustack.ini' file.
        If not given, the `CLOUDSTACK_REGION' env variable is considered.
        [Default: cloudstack]
        type: str

- api_secret
        Secret key of the CloudStack API.
        If not set, the `CLOUDSTACK_SECRET' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_timeout
        HTTP timeout in seconds.
        If not given, the `CLOUDSTACK_TIMEOUT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is 10 seconds if not specified.
        [Default: (null)]
        type: int

- api_url
        URL of the CloudStack API e.g. https://cloud.example.com/client/api.
        If not given, the `CLOUDSTACK_ENDPOINT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- cidr
        CIDR of the rule.
        [Default: 0.0.0.0/0]
        type: str

- domain
        Domain the VPC is related to.
        [Default: (null)]
        type: str

- end_port
        End port for this rule.
        Considered if `protocol=tcp' or `protocol=udp'.
        If not specified, equal `start_port'.
        [Default: (null)]
        type: int

- icmp_code
        Error code for this icmp message.
        Considered if `protocol=icmp'.
        [Default: (null)]
        type: int

- icmp_type
        Type of the icmp message being sent.
        Considered if `protocol=icmp'.
        [Default: (null)]
        type: int

= network_acl
        Name of the network ACL.
        (Aliases: acl)
        type: str

- poll_async
        Poll async jobs until job has finished.
        [Default: True]
        type: bool

- project
        Name of the project the VPC is related to.
        [Default: (null)]
        type: str

- protocol
        Protocol of the rule
        (Choices: tcp, udp, icmp, all, by_number)[Default: tcp]
        type: str

- protocol_number
        Protocol number from 1 to 256 required if `protocol=by_number'.
        [Default: (null)]
        type: int

= rule_position
        The position of the network ACL rule.
        (Aliases: number)
        type: int

- start_port
        Start port for this rule.
        Considered if `protocol=tcp' or `protocol=udp'.
        (Aliases: port)[Default: (null)]
        type: int

- state
        State of the network ACL rule.
        (Choices: present, absent)[Default: present]
        type: str

- tags
        List of tags. Tags are a list of dictionaries having keys `key' and `value'.
        If you want to delete all tags, set a empty list e.g. `tags: []'.
        (Aliases: tag)[Default: (null)]
        type: list

- traffic_type
        Traffic type of the rule.
        (Aliases: type)(Choices: ingress, egress)[Default: ingress]
        type: str

= vpc
        VPC the network ACL is related to.

        type: str

- zone
        Name of the zone the VPC related to.
        If not set, default zone is used.
        [Default: (null)]
        type: str


NOTES:
      * Ansible uses the `cs' library's configuration method if credentials are not provided by the arguments `api_url', `api_key',
        `api_secret'. Configuration is read from several locations, in the following order. The `CLOUDSTACK_ENDPOINT',
        `CLOUDSTACK_KEY', `CLOUDSTACK_SECRET' and `CLOUDSTACK_METHOD'. `CLOUDSTACK_TIMEOUT' environment variables. A
        `CLOUDSTACK_CONFIG' environment variable pointing to an `.ini' file. A `cloudstack.ini' file in the current working
        directory. A `.cloudstack.ini' file in the users home directory. Optionally multiple credentials and endpoints can be
        specified using ini sections in `cloudstack.ini'. Use the argument `api_region' to select the section name, default section
        is `cloudstack'. See https://github.com/exoscale/cs for more information.
      * A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud
        Guide,../scenario_guides/guide_cloudstack.html).
      * This module supports check mode.


REQUIREMENTS:  python >= 2.6, cs >= 0.6.10

AUTHOR: Ren√© Moser (@resmo)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a network ACL rule, allow port 80 ingress
  cs_network_acl_rule:
    network_acl: web
    rule_position: 1
    vpc: my vpc
    traffic_type: ingress
    action_policy: allow
    port: 80
    cidr: 0.0.0.0/0
  delegate_to: localhost

- name: create a network ACL rule, deny port range 8000-9000 ingress for 10.20.0.0/16
  cs_network_acl_rule:
    network_acl: web
    rule_position: 1
    vpc: my vpc
    traffic_type: ingress
    action_policy: deny
    start_port: 8000
    end_port: 8000
    cidr: 10.20.0.0/16
  delegate_to: localhost

- name: create a network ACL rule
  cs_network_acl_rule:
    network_acl: web
    rule_position: 1
    vpc: my vpc
    traffic_type: ingress
    action_policy: deny
    start_port: 8000
    end_port: 8000
    cidr: 10.20.0.0/16
  delegate_to: localhost

- name: remove a network ACL rule
  cs_network_acl_rule:
    network_acl: web
    rule_position: 1
    vpc: my vpc
    state: absent
  delegate_to: localhost


RETURN VALUES:

---
network_acl:
  description: Name of the network ACL.
  returned: success
  type: str
  sample: customer acl
cidr:
  description: CIDR of the network ACL rule.
  returned: success
  type: str
  sample: 0.0.0.0/0
rule_position:
  description: Position of the network ACL rule.
  returned: success
  type: int
  sample: 1
action_policy:
  description: Action policy of the network ACL rule.
  returned: success
  type: str
  sample: deny
traffic_type:
  description: Traffic type of the network ACL rule.
  returned: success
  type: str
  sample: ingress
protocol:
  description: Protocol of the network ACL rule.
  returned: success
  type: str
  sample: tcp
protocol_number:
  description: Protocol number in case protocol is by number.
  returned: success
  type: int
  sample: 8
start_port:
  description: Start port of the network ACL rule.
  returned: success
  type: int
  sample: 80
end_port:
  description: End port of the network ACL rule.
  returned: success
  type: int
  sample: 80
icmp_code:
  description: ICMP code of the network ACL rule.
  returned: success
  type: int
  sample: 8
icmp_type:
  description: ICMP type of the network ACL rule.
  returned: success
  type: int
  sample: 0
state:
  description: State of the network ACL rule.
  returned: success
  type: str
  sample: Active
vpc:
  description: VPC of the network ACL.
  returned: success
  type: str
  sample: customer vpc
tags:
  description: List of resource tags associated with the network ACL rule.
  returned: success
  type: list
  sample: '[ { "key": "foo", "value": "bar" } ]'
domain:
  description: Domain the network ACL rule is related to.
  returned: success
  type: str
  sample: example domain
account:
  description: Account the network ACL rule is related to.
  returned: success
  type: str
  sample: example account
project:
  description: Name of project the network ACL rule is related to.
  returned: success
  type: str
  sample: Production
zone:
  description: Zone the VPC is related to.
  returned: success
  type: str
  sample: ch-gva-2

