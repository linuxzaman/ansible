> NXOS_AAA_SERVER_HOST    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nxos/nxos_aaa_server_host.py)

        Manages AAA server host-specific configuration.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- acct_port
        Alternate UDP port for RADIUS accounting or keyword 'default'.
        [Default: (null)]

= address
        Address or name of the radius or tacacs host.


- auth_port
        Alternate UDP port for RADIUS authentication or keyword 'default'.
        [Default: (null)]

- encrypt_type
        The state of encryption applied to the entered key. O for clear text, 7 for encrypted. Type-6 encryption is not supported.
        (Choices: 0, 7)[Default: (null)]

- host_timeout
        Timeout period for specified host, in seconds or keyword 'default. Range is 1-60.
        [Default: (null)]

- key
        Shared secret for the specified host or keyword 'default'.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using NX-API.
        For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
            version_added: 2.5.3
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
            version_added: 2.5.3
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `nxapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `nxapi'.  The port value will default to
              the appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.  This
              argument is only used for the `cli' transport. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE' will
              be used instead.
            type: str
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error. NX-API can be slow to return
              on long-running commands (sh mac, sh bgp, etc).
            type: int
            version_added: '2.3'
          transport:
            choices:
            - cli
            - nxapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.  The
              transport argument supports connectivity to the device over cli (ssh) or nxapi.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: false
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=nxapi',
              otherwise this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the nxapi
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not nxapi, this value is ignored.
            type: bool
        
        type: dict

= server_type
        The server type is either radius or tacacs.
        (Choices: radius, tacacs)

- state
        Manage the state of the resource.
        (Choices: present, absent)[Default: present]

- tacacs_port
        Alternate TCP port TACACS Server or keyword 'default'.
        [Default: (null)]


NOTES:
      * Tested against NXOSv 7.3.(0)D1(1) on VIRL
      * Changes to the host key (shared secret) are not idempotent for type 0.
      * If `state=absent' removes the whole host configuration.
      * For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


AUTHOR: Jason Edelman (@jedelman8)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

# Radius Server Host Basic settings
  - name: "Radius Server Host Basic settings"
    nxos_aaa_server_host:
        state: present
        server_type: radius
        address: 1.2.3.4
        acct_port: 2084
        host_timeout: 10

# Radius Server Host Key Configuration
  - name: "Radius Server Host Key Configuration"
    nxos_aaa_server_host:
        state: present
        server_type: radius
        address: 1.2.3.4
        key: hello
        encrypt_type: 7

# TACACS Server Host Configuration
  - name: "Tacacs Server Host Configuration"
    nxos_aaa_server_host:
        state: present
        server_type: tacacs
        tacacs_port: 89
        host_timeout: 10
        address: 5.6.7.8


RETURN VALUES:

proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {"address": "1.2.3.4", "auth_port": "2084",
            "host_timeout": "10", "server_type": "radius"}
existing:
    description:
        - k/v pairs of existing configuration
    returned: always
    type: dict
    sample: {}
end_state:
    description: k/v pairs of configuration after module execution
    returned: always
    type: dict
    sample: {"address": "1.2.3.4", "auth_port": "2084",
            "host_timeout": "10", "server_type": "radius"}
updates:
    description: command sent to the device
    returned: always
    type: list
    sample: ["radius-server host 1.2.3.4 auth-port 2084 timeout 10"]
changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true

