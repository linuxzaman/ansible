> NETCONF_RPC    (/usr/lib/python2.7/dist-packages/ansible/modules/network/netconf/netconf_rpc.py)

        NETCONF is a network management protocol developed and standardized by the IETF. It is documented in RFC 6241. This module allows
        the user to execute NETCONF RPC requests as defined by IETF RFC standards as well as proprietary requests.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- content
        This argument specifies the optional request content (all RPC attributes). The `content' value can either be provided as XML
        formatted string or as dictionary.
        [Default: (null)]

- display
        Encoding scheme to use when serializing output from the device. The option `json' will serialize the output as JSON data. If the
        option value is `json' it requires jxmlease to be installed on control node. The option `pretty' is similar to received XML
        response but is using human readable format (spaces, new lines). The option value `xml' is similar to received XML response but
        removes all XML namespaces.
        (Choices: json, pretty, xml)[Default: (null)]

- rpc
        This argument specifies the request (name of the operation) to be executed on the remote NETCONF enabled device.
        [Default: (null)]

- xmlns
        NETCONF operations not defined in rfc6241 typically require the appropriate XML namespace to be set. In the case the `request'
        option is not already provided in XML format, the namespace can be defined by the `xmlns' option.
        [Default: (null)]


NOTES:
      * This module requires the NETCONF system service be enabled on the remote device being managed.
      * This module supports the use of connection=netconf
      * To execute `get-config', `get' or `edit-config' requests it is recommended to use the Ansible `netconf_get' and
        `netconf_config' modules.
      * This module is supported on `ansible_network_os' network platforms. See the :ref:`Network Platform Options
        <platform_options>` for details.


REQUIREMENTS:  ncclient (>=v0.5.2), jxmlease

AUTHOR: Ganesh Nalawade (@ganeshrn), Sven Wisotzky (@wisotzky)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: lock candidate
  netconf_rpc:
    rpc: lock
    content:
      target:
        candidate:

- name: unlock candidate
  netconf_rpc:
    rpc: unlock
    xmlns: "urn:ietf:params:xml:ns:netconf:base:1.0"
    content: "{'target': {'candidate': None}}"

- name: discard changes
  netconf_rpc:
    rpc: discard-changes

- name: get-schema
  netconf_rpc:
    rpc: get-schema
    xmlns: urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring
    content:
      identifier: ietf-netconf
      version: "2011-06-01"

- name: copy running to startup
  netconf_rpc:
    rpc: copy-config
    content:
      source:
        running:
      target:
        startup:

- name: get schema list with JSON output
  netconf_rpc:
    rpc: get
    content: |
      <filter>
        <netconf-state xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring">
          <schemas/>
        </netconf-state>
      </filter>
    display: json

- name: get schema using XML request
  netconf_rpc:
    rpc: "get-schema"
    xmlns: "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring"
    content: |
      <identifier>ietf-netconf-monitoring</identifier>
      <version>2010-10-04</version>
    display: json


RETURN VALUES:

stdout:
  description: The raw XML string containing configuration or state data
               received from the underlying ncclient library.
  returned: always apart from low-level errors (such as action plugin)
  type: str
  sample: '...'
stdout_lines:
  description: The value of stdout split into a list
  returned: always apart from low-level errors (such as action plugin)
  type: list
  sample: ['...', '...']
output:
  description: Based on the value of display option will return either the set of
               transformed XML to JSON format from the RPC response with type dict
               or pretty XML string response (human-readable) or response with
               namespace removed from XML string.
  returned: when the display format is selected as JSON it is returned as dict type, if the
            display format is xml or pretty pretty it is retured as a string apart from low-level
            errors (such as action plugin).
  type: complex
  contains:
    formatted_output:
      - Contains formatted response received from remote host as per the value in display format.

