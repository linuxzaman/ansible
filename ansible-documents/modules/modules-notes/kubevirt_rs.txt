> KUBEVIRT_RS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/kubevirt/kubevirt_rs.py)

        Use Openshift Python SDK to manage the state of KubeVirt virtual machine replica sets.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Token used to authenticate with the API. Can also be specified via K8S_AUTH_API_KEY environment variable.
        [Default: (null)]
        type: str

- bootloader
        Specify the bootloader of the virtual machine.
        All virtual machines use BIOS by default for booting.
        [Default: (null)]
        type: str

- ca_cert
        Path to a CA certificate used to authenticate with the API. The full certificate chain must be provided to avoid certificate
        validation errors. Can also be specified via K8S_AUTH_SSL_CA_CERT environment variable.
        (Aliases: ssl_ca_cert)[Default: (null)]
        type: path

- client_cert
        Path to a certificate used to authenticate with the API. Can also be specified via K8S_AUTH_CERT_FILE environment variable.
        (Aliases: cert_file)[Default: (null)]
        type: path

- client_key
        Path to a key file used to authenticate with the API. Can also be specified via K8S_AUTH_KEY_FILE environment variable.
        (Aliases: key_file)[Default: (null)]
        type: path

- cloud_init_nocloud
        Represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the virtual machine. A proper
        cloud-init installation is required inside the guest. More information https://kubevirt.io/api-
        reference/master/definitions.html#_v1_cloudinitnocloudsource
        [Default: (null)]
        type: dict

- context
        The name of a context found in the config file. Can also be specified via K8S_AUTH_CONTEXT environment variable.
        [Default: (null)]
        type: str

- cpu_cores
        Number of CPU cores.
        [Default: (null)]
        type: int

- cpu_features
        List of dictionary to fine-tune features provided by the selected CPU model.
        `Note': Policy attribute can either be omitted or contain one of the following policies: force, require, optional, disable,
        forbid.
        `Note': In case a policy is omitted for a feature, it will default to require.
        More information about policies: https://libvirt.org/formatdomain.html#elementsCPU
        [Default: (null)]
        type: list

- cpu_limit
        Is converted to its millicore value and multiplied by 100. The resulting value is the total amount of CPU time that a container
        can use every 100ms. A virtual machine cannot use more than its share of CPU time during this interval.
        [Default: (null)]
        type: int

- cpu_model
        CPU model.
        You can check list of available models here: https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml.
        `Note:' User can define default CPU model via as `default-cpu-model' in `kubevirt-config' `ConfigMap', if not set `host-model' is
        used.
        `Note:' Be sure that node CPU model where you run a VM, has the same or higher CPU family.
        `Note:' If CPU model wasn't defined, the VM will have CPU model closest to one that used on the node where the VM is running.
        [Default: (null)]
        type: str

- cpu_shares
        Specify CPU shares.
        [Default: (null)]
        type: int

- disks
        List of dictionaries which specify disks of the virtual machine.
        A disk can be made accessible via four different types: `disk', `lun', `cdrom', `floppy'.
        All possible configuration options are available in https://kubevirt.io/api-reference/master/definitions.html#_v1_disk
        Each disk must have specified a `volume' that declares which volume type of the disk All possible configuration options of volume
        are available in https://kubevirt.io/api-reference/master/definitions.html#_v1_volume.
        [Default: (null)]
        type: list

- force
        If set to `no', and `state' is `present', an existing object will be replaced.
        [Default: False]
        type: bool

- headless
        Specify if the virtual machine should have attached a  minimal Video and Graphics device configuration.
        By default a minimal Video and Graphics device configuration will be applied to the VirtualMachineInstance. The video device is
        vga compatible and comes with a memory size of 16 MB.
        [Default: (null)]

- host
        Provide a URL for accessing the API. Can also be specified via K8S_AUTH_HOST environment variable.
        [Default: (null)]
        type: str

- hugepage_size
        Specify huge page size.
        [Default: (null)]
        type: str

- interfaces
        An interface defines a virtual network interface of a virtual machine (also called a frontend).
        All possible configuration options interfaces are available in https://kubevirt.io/api-
        reference/master/definitions.html#_v1_interface
        Each interface must have specified a `network' that declares which logical or physical device it is connected to (also called as
        backend). All possible configuration options of network are available in https://kubevirt.io/api-
        reference/master/definitions.html#_v1_network.
        [Default: (null)]
        type: list

- kubeconfig
        Path to an existing Kubernetes config file. If not provided, and no other connection options are provided, the openshift client
        will attempt to load the default configuration file from `~/.kube/config.json'. Can also be specified via K8S_AUTH_KUBECONFIG
        environment variable.
        [Default: (null)]
        type: path

- labels
        Labels are key/value pairs that are attached to virtual machines. Labels are intended to be used to specify identifying
        attributes of virtual machines that are meaningful and relevant to users, but do not directly imply semantics to the core system.
        Labels can be used to organize and to select subsets of virtual machines. Labels can be attached to virtual machines at creation
        time and subsequently added and modified at any time.
        More on labels that are used for internal implementation https://kubevirt.io/user-guide/#/misc/annotations_and_labels
        [Default: (null)]
        type: dict

- machine_type
        QEMU machine type is the actual chipset of the virtual machine.
        [Default: (null)]
        type: str

- memory
        The amount of memory to be requested by virtual machine.
        For example 1024Mi.
        [Default: (null)]
        type: str

- memory_limit
        The maximum memory to be used by virtual machine.
        For example 1024Mi.
        [Default: (null)]
        type: str

- merge_type
        Whether to override the default patch merge approach with a specific type.
        If more than one merge type is given, the merge types will be tried in order.
        Defaults to `['strategic-merge', 'merge']', which is ideal for using the same parameters on resource kinds that combine Custom
        Resources and built-in resources, as Custom Resource Definitions typically aren't updatable by the usual strategic merge.
        See https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-
        update-a-deployment
        (Choices: json, merge, strategic-merge)[Default: (null)]
        type: list

= name
        Name of the virtual machine replica set.

        type: str

= namespace
        Namespace where the virtual machine replica set exists.

        type: str

- password
        Provide a password for authenticating with the API. Can also be specified via K8S_AUTH_PASSWORD environment variable.
        Please read the description of the `username' option for a discussion of when this option is applicable.
        [Default: (null)]
        type: str

- replicas
        Number of desired pods. This is a pointer to distinguish between explicit zero and not specified.
        Replicas defaults to 1 if newly created replica set.
        [Default: (null)]
        type: int

- resource_definition
        A partial YAML definition of the object being created/updated. Here you can define Kubernetes resource parameters not covered by
        this module's parameters.
        NOTE: `resource_definition' has lower priority than module parameters. If you try to define e.g. `metadata.namespace' here, that
        value will be ignored and `namespace' used instead.
        (Aliases: definition, inline)[Default: (null)]
        type: dict

= selector
        Selector is a label query over a set of virtual machine.

        type: dict

- smbios_uuid
        In order to provide a consistent view on the virtualized hardware for the guest OS, the SMBIOS UUID can be set.
        [Default: (null)]
        type: str

- state
        Create or delete virtual machine replica sets.
        (Choices: present, absent)[Default: present]
        type: str

- tablets
        Specify tablets to be used as input devices
        [Default: (null)]
        type: list

- username
        Provide a username for authenticating with the API. Can also be specified via K8S_AUTH_USERNAME environment variable.
        Please note that this only works with clusters configured to use HTTP Basic Auth. If your cluster has a different form of
        authentication (e.g. OAuth2 in OpenShift), this option will not work as expected and you should look into the `k8s_auth' module,
        as that might do what you need.
        [Default: (null)]
        type: str

- validate_certs
        Whether or not to verify the API server's SSL certificates. Can also be specified via K8S_AUTH_VERIFY_SSL environment variable.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool

- wait
        `True' if the module should wait for the resource to get into desired state.
        [Default: True]
        type: bool

- wait_timeout
        The amount of time in seconds the module should wait for the resource to get into desired state.
        [Default: 120]
        type: int


NOTES:
      * The OpenShift Python client wraps the K8s Python client, providing full access to all of the APIS and models available on
        both platforms. For API version details and additional information visit https://github.com/openshift/openshift-restclient-
        python
      * To avoid SSL certificate validation errors when `validate_certs' is `True', the full certificate chain for the API server
        must be provided via `ca_cert' or in the kubeconfig file.
      * In order to use this module you have to install Openshift Python SDK. To ensure it's installed with correct version you can
        create the following task: `pip: name=openshift>=0.8.2'


REQUIREMENTS:  openshift >= 0.8.2, python >= 2.7

AUTHOR: KubeVirt Team (@kubevirt)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create virtual machine replica set 'myvmir'
  kubevirt_rs:
      state: presnet
      name: myvmir
      namespace: vms
      wait: true
      replicas: 3
      memory: 64M
      labels:
        myvmi: myvmi
      selector:
        matchLabels:
            myvmi: myvmi
      disks:
         - name: containerdisk
           volume:
             containerDisk:
               image: kubevirt/cirros-container-disk-demo:latest
               path: /custom-disk/cirros.img
           disk:
             bus: virtio

- name: Remove virtual machine replica set 'myvmir'
  kubevirt_rs:
      state: absent
      name: myvmir
      namespace: vms
      wait: true


RETURN VALUES:

kubevirt_rs:
  description:
    - The virtual machine virtual machine replica set managed by the user.
    - "This dictionary contains all values returned by the KubeVirt API all options
       are described here U(https://kubevirt.io/api-reference/master/definitions.html#_v1_virtualmachineinstance)"
  returned: success
  type: complex
  contains: {}

