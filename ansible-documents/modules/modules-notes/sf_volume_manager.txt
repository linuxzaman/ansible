> SF_VOLUME_MANAGER    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/netapp/_sf_volume_manager.py)

        Create, destroy, or update volumes on SolidFire

DEPRECATED: 

	Reason: This Module has been replaced
	Will be removed in: Ansible 2.11
	Alternatives: please use M(na_elementsw_volume)


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- 512emulation
        Should the volume provide 512-byte sector emulation?
        Required when `state=present'
        [Default: (null)]

- access
        Access allowed for the volume.
        readOnly: Only read operations are allowed.
        readWrite: Reads and writes are allowed.
        locked: No reads or writes are allowed.
        replicationTarget: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access
        status is locked.
        If unspecified, the access settings of the clone will be the same as the source.
        (Choices: readOnly, readWrite, locked, replicationTarget)[Default: (null)]

= account_id
        Account ID for the owner of this volume.


- attributes
        A YAML dictionary of attributes that you would like to apply on this volume.
        [Default: (null)]

= hostname
        The hostname or IP address of the SolidFire cluster.


= name
        The name of the volume to manage.


= password
        Password for the specified user.
        (Aliases: pass)

- qos
        Initial quality of service settings for this volume. Configure as dict in playbooks.
        [Default: (null)]

- size
        The size of the volume in (size_unit).
        Required when `state = present'.
        [Default: (null)]

- size_unit
        The unit used to interpret the size parameter.
        (Choices: bytes, b, kb, mb, gb, tb, pb, eb, zb, yb)[Default: gb]

= state
        Whether the specified volume should exist or not.
        (Choices: present, absent)

= username
        Please ensure that the user has the adequate permissions. For more information, please read the official documentation
        https://mysupport.netapp.com/documentation/docweb/index.html?productID=62636&language=en-US.
        (Aliases: user)

- volume_id
        The ID of the volume to manage or update.
        In order to create multiple volumes with the same name, but different volume_ids, please declare the `volume_id' parameter with
        an arbitrary value. However, the specified volume_id will not be assigned to the newly created volume (since it's an auto-
        generated property).
        [Default: (null)]


NOTES:
      * The modules prefixed with na\\_elementsw are built to support the SolidFire storage platform.


REQUIREMENTS:  The modules were developed with SolidFire 10.1, solidfire-sdk-python (1.1.0.92) or greater. Install using 'pip install
        solidfire-sdk-python'

AUTHOR: Sumit Kumar (@timuster) <sumit4@netapp.com>
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

- name: Create Volume
     sf_volume_manager:
       hostname: "{{ solidfire_hostname }}"
       username: "{{ solidfire_username }}"
       password: "{{ solidfire_password }}"
       state: present
       name: AnsibleVol
       qos: {minIOPS: 1000, maxIOPS: 20000, burstIOPS: 50000}
       account_id: 3
       enable512e: False
       size: 1
       size_unit: gb

   - name: Update Volume
     sf_volume_manager:
       hostname: "{{ solidfire_hostname }}"
       username: "{{ solidfire_username }}"
       password: "{{ solidfire_password }}"
       state: present
       name: AnsibleVol
       account_id: 3
       access: readWrite

   - name: Delete Volume
     sf_volume_manager:
       hostname: "{{ solidfire_hostname }}"
       username: "{{ solidfire_username }}"
       password: "{{ solidfire_password }}"
       state: absent
       name: AnsibleVol
       account_id: 2


RETURN VALUES:


msg:
    description: Success message
    returned: success
    type: str


