> BIGIP_PROFILE_SERVER_SSL    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_profile_server_ssl.py)

        Manages server SSL profiles on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- certificate
        Specifies the name of the certificate that the system uses for server-side SSL processing.
        [Default: (null)]
        type: str

- chain
        Specifies the certificates-key chain to associate with the SSL profile.
        [Default: (null)]
        type: str

- ciphers
        Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the
        parent profile.
        [Default: (null)]
        type: str

- key
        Specifies the file name of the SSL key.
        [Default: (null)]
        type: str

= name
        Specifies the name of the profile.

        type: str

- ocsp_profile
        Specifies the name of the OCSP profile for purpose of validating status of server certificate.
        [Default: (null)]
        type: str

- parent
        The parent template of this monitor template. Once this value has been set, it cannot be changed.
        [Default: /Common/serverssl]
        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str

- passphrase
        Specifies a passphrase used to encrypt the key.
        [Default: (null)]
        type: str

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

- secure_renegotiation
        Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the
        parent profile.
        When `request' is set the system request secure renegotation of SSL connections.
        `require' is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations
        from unpatched clients.
        The `require-strict' setting the system requires strict renegotiation of SSL connections. In this mode the system refuses
        connections to insecure servers, and terminates existing SSL connections to insecure servers.
        (Choices: require, require-strict, request)[Default: (null)]
        type: str

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_certificate
        Specifies the way the system handles server certificates.
        When `ignore', specifies that the system ignores certificates from server systems.
        When `require', specifies that the system requires a server to present a valid certificate.
        (Choices: ignore, require)[Default: (null)]
        type: str

- server_name
        Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new
        profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- sni_default
        Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the
        client provides no SNI extension support.
        When creating a new profile, the setting is provided by the parent profile.
        There can be only one SSL profile with this setting enabled.
        [Default: (null)]
        type: bool

- sni_require
        Requires that the network peers also provide SNI support, setting only takes effect when `sni_default' is `yes'.
        When creating a new profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: bool

- state
        When `present', ensures that the profile exists.
        When `absent', ensures the profile is removed.
        (Choices: present, absent)[Default: present]
        type: str

- update_password
        `always' will allow to update passwords if the user chooses to do so. `on_create' will only set the password for newly created
        profiles.
        (Choices: always, on_create)[Default: always]
        type: str

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create a new server SSL profile
  bigip_profile_server_ssl:
    name: foo
    provider:
      password: secret
      server: lb.mydomain.com
      user: admin
  delegate_to: localhost


RETURN VALUES:

ciphers:
  description: The ciphers applied to the profile.
  returned: changed
  type: str
  sample: "!SSLv3:!SSLv2:ECDHE+AES-GCM+SHA256:ECDHE-RSA-AES128-CBC-SHA"
secure_renegotiation:
  description: The method of secure SSL renegotiation.
  returned: changed
  type: str
  sample: request

