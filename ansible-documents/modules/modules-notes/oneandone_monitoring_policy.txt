> ONEANDONE_MONITORING_POLICY    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/oneandone/oneandone_monitoring_policy.py)

        Create, remove, update monitoring policies (and add/remove ports, processes, and servers). This module has a dependency on 1and1
        >= 1.0

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- add_ports
        Ports to add to the monitoring policy.
        [Default: (null)]

- add_processes
        Processes to add to the monitoring policy.
        [Default: (null)]

- add_servers
        Servers to add to the monitoring policy.
        [Default: (null)]

= agent
        Set true for using agent.


- api_url
        Custom API URL. Overrides the ONEANDONE_API_URL environement variable.
        [Default: (null)]

= auth_token
        Authenticating API token provided by 1&1.


- description
        Monitoring policy description. maxLength=256
        [Default: (null)]

= email
        User's email. maxLength=128


= monitoring_policy
        The identifier (id or name) of the monitoring policy used with update state.


= name
        Monitoring policy name used with present state. Used as identifier (id or name) when used with absent state. maxLength=128


= ports
        Array of ports that will be monitoring.

        suboptions:
          alert_if:
            choices:
            - RESPONDING
            - NOT_RESPONDING
            description:
            - Case of alert.
            required: true
          email_notification:
            description:
            - Set true for sending e-mail notifications.
            required: true
          port:
            description:
            - Port number. minimum=1, maximum=65535
            required: true
          protocol:
            choices:
            - TCP
            - UDP
            description:
            - Internet protocol.
            required: true
        

= processes
        Array of processes that will be monitoring.

        suboptions:
          alert_if:
            choices:
            - RUNNING
            - NOT_RUNNING
            description:
            - Case of alert.
            required: true
          process:
            description:
            - Name of the process. maxLength=50
            required: true
        

- remove_ports
        Ports to remove from the monitoring policy.
        [Default: (null)]

- remove_processes
        Processes to remove from the monitoring policy.
        [Default: (null)]

- remove_servers
        Servers to remove from the monitoring policy.
        [Default: (null)]

- state
        Define a monitoring policy's state to create, remove, update.
        (Choices: present, absent, update)[Default: present]

= thresholds
        Monitoring policy thresholds. Each of the suboptions have warning and critical, which both have alert and value suboptions.
        Warning is used to set limits for warning alerts, critical is used to set critical alerts. alert enables alert, and value is used
        to advise when the value is exceeded.

        suboptions:
          cpu:
            description:
            - Consumption limits of CPU.
            required: true
          disk:
            description:
            - Consumption limits of hard disk.
            required: true
          internal_ping:
            description:
            - Response limits of internal ping.
            required: true
          ram:
            description:
            - Consumption limits of RAM.
            required: true
          transfer:
            description:
            - Consumption limits for transfer.
            required: true
        

- update_ports
        Ports to be updated on the monitoring policy.
        [Default: (null)]

- update_processes
        Processes to be updated on the monitoring policy.
        [Default: (null)]

- wait
        wait for the instance to be in state 'running' before returning
        [Default: yes]
        type: bool

- wait_interval
        Defines the number of seconds to wait when using the _wait_for methods
        [Default: 5]

- wait_timeout
        how long before wait gives up, in seconds
        [Default: 600]


REQUIREMENTS:  1and1, python >= 2.6

AUTHOR: Amel Ajdinovic (@aajdinov), Ethan Devenport (@edevenport)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Provisioning example. Create and destroy a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    name: ansible monitoring policy
    description: Testing creation of a monitoring policy with ansible
    email: your@emailaddress.com
    agent: true
    thresholds:
     -
       cpu:
         warning:
           value: 80
           alert: false
         critical:
           value: 92
           alert: false
     -
       ram:
         warning:
           value: 80
           alert: false
         critical:
           value: 90
           alert: false
     -
       disk:
         warning:
           value: 80
           alert: false
         critical:
           value: 90
           alert: false
     -
       internal_ping:
         warning:
           value: 50
           alert: false
         critical:
           value: 100
           alert: false
     -
       transfer:
         warning:
           value: 1000
           alert: false
         critical:
           value: 2000
           alert: false
    ports:
     -
       protocol: TCP
       port: 22
       alert_if: RESPONDING
       email_notification: false
    processes:
     -
       process: test
       alert_if: NOT_RUNNING
       email_notification: false
    wait: true

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    state: absent
    name: ansible monitoring policy

# Update a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy
    name: ansible monitoring policy updated
    description: Testing creation of a monitoring policy with ansible updated
    email: another@emailaddress.com
    thresholds:
     -
       cpu:
         warning:
           value: 70
           alert: false
         critical:
           value: 90
           alert: false
     -
       ram:
         warning:
           value: 70
           alert: false
         critical:
           value: 80
           alert: false
     -
       disk:
         warning:
           value: 70
           alert: false
         critical:
           value: 80
           alert: false
     -
       internal_ping:
         warning:
           value: 60
           alert: false
         critical:
           value: 90
           alert: false
     -
       transfer:
         warning:
           value: 900
           alert: false
         critical:
           value: 1900
           alert: false
    wait: true
    state: update

# Add a port to a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    add_ports:
     -
       protocol: TCP
       port: 33
       alert_if: RESPONDING
       email_notification: false
    wait: true
    state: update

# Update existing ports of a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    update_ports:
     -
       id: existing_port_id
       protocol: TCP
       port: 34
       alert_if: RESPONDING
       email_notification: false
     -
       id: existing_port_id
       protocol: TCP
       port: 23
       alert_if: RESPONDING
       email_notification: false
    wait: true
    state: update

# Remove a port from a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    remove_ports:
     - port_id
    state: update

# Add a process to a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    add_processes:
     -
       process: test_2
       alert_if: NOT_RUNNING
       email_notification: false
    wait: true
    state: update

# Update existing processes of a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    update_processes:
     -
       id: process_id
       process: test_1
       alert_if: NOT_RUNNING
       email_notification: false
     -
       id: process_id
       process: test_3
       alert_if: NOT_RUNNING
       email_notification: false
    wait: true
    state: update

# Remove a process from a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    remove_processes:
     - process_id
    wait: true
    state: update

# Add server to a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    add_servers:
     - server id or name
    wait: true
    state: update

# Remove server from a monitoring policy.

- oneandone_moitoring_policy:
    auth_token: oneandone_private_api_key
    monitoring_policy: ansible monitoring policy updated
    remove_servers:
     - server01
    wait: true
    state: update


RETURN VALUES:

monitoring_policy:
    description: Information about the monitoring policy that was processed
    type: dict
    sample: '{"id": "92B74394A397ECC3359825C1656D67A6", "name": "Default Policy"}'
    returned: always

