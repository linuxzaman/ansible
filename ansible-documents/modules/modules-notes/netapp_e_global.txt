> NETAPP_E_GLOBAL    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/netapp/netapp_e_global.py)

        Allow the user to configure several of the global settings associated with an E-Series storage-system

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= api_password
        The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.


= api_url
        The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2


= api_username
        The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.


- log_path
        A local path to a file to be used for debug logging
        [Default: (null)]

- name
        Set the name of the E-Series storage-system
        This label/name doesn't have to be unique.
        May be up to 30 characters in length.
        (Aliases: label)[Default: (null)]

- ssid
        The ID of the array to manage. This value must be unique for each array.
        [Default: 1]

- validate_certs
        Should https certificates be validated?
        [Default: True]
        type: bool


NOTES:
      * Check mode is supported.
      * This module requires Web Services API v1.3 or newer.
      * The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the
        storage-system, or an E-Series storage-system that supports the Embedded Web Services API.
      * Embedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.
      * [netapp_e_storage_system] may be utilized for configuring the systems managed by a WSP instance.


AUTHOR: Michael Price (@lmprice)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Set the storage-system name
      netapp_e_global:
        name: myArrayName
        api_url: "10.1.1.1:8443"
        api_username: "admin"
        api_password: "myPass"


RETURN VALUES:

msg:
    description: Success message
    returned: on success
    type: str
    sample: The settings have been updated.
name:
    description:
        - The current name/label of the storage-system.
    returned: on success
    sample: myArrayName
    type: str

