> CE_ACL    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_acl.py)

        Manages base ACL configurations on HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- acl_description
        ACL description. The value is a string of 1 to 127 characters.
        [Default: (null)]

= acl_name
        ACL number or name. For a numbered rule group, the value ranging from 2000 to 2999 indicates a basic ACL. For a named rule group,
        the value is a string of 1 to 32 case-sensitive characters starting with a letter, spaces not supported.


- acl_num
        ACL number. The value is an integer ranging from 2000 to 2999.
        [Default: (null)]

- acl_step
        ACL step. The value is an integer ranging from 1 to 20. The default value is 5.
        [Default: (null)]

- frag_type
        Type of packet fragmentation.
        (Choices: fragment, clear_fragment)[Default: (null)]

- log_flag
        Flag of logging matched data packets.
        [Default: no]
        type: bool

- rule_action
        Matching mode of basic ACL rules.
        (Choices: permit, deny)[Default: (null)]

- rule_description
        Description about an ACL rule. The value is a string of 1 to 127 characters.
        [Default: (null)]

- rule_id
        ID of a basic ACL rule in configuration mode. The value is an integer ranging from 0 to 4294967294.
        [Default: (null)]

- rule_name
        Name of a basic ACL rule. The value is a string of 1 to 32 characters. The value is case-insensitive, and cannot contain spaces
        or begin with an underscore (_).
        [Default: (null)]

- source_ip
        Source IP address. The value is a string of 0 to 255 characters.The default value is 0.0.0.0. The value is in dotted decimal
        notation.
        [Default: (null)]

- src_mask
        Mask of a source IP address. The value is an integer ranging from 1 to 32.
        [Default: (null)]

- state
        Specify desired state of the resource.
        (Choices: present, absent, delete_acl)[Default: present]

- time_range
        Name of a time range in which an ACL rule takes effect. The value is a string of 1 to 32 characters. The value is case-
        insensitive, and cannot contain spaces. The name must start with an uppercase or lowercase letter. In addition, the word "all"
        cannot be specified as a time range name.
        [Default: (null)]

- vrf_name
        VPN instance name. The value is a string of 1 to 31 characters.The default value is _public_.
        [Default: (null)]


AUTHOR: wangdezhuang (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: CloudEngine acl test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: "Config ACL"
    ce_acl:
      state: present
      acl_name: 2200
      provider: "{{ cli }}"

  - name: "Undo ACL"
    ce_acl:
      state: delete_acl
      acl_name: 2200
      provider: "{{ cli }}"

  - name: "Config ACL base rule"
    ce_acl:
      state: present
      acl_name: 2200
      rule_name: test_rule
      rule_id: 111
      rule_action: permit
      source_ip: 10.10.10.10
      src_mask: 24
      frag_type: fragment
      time_range: wdz_acl_time
      provider: "{{ cli }}"

  - name: "undo ACL base rule"
    ce_acl:
      state: absent
      acl_name: 2200
      rule_name: test_rule
      rule_id: 111
      rule_action: permit
      source_ip: 10.10.10.10
      src_mask: 24
      frag_type: fragment
      time_range: wdz_acl_time
      provider: "{{ cli }}"


RETURN VALUES:

changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true
proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {"acl_name": "test", "state": "delete_acl"}
existing:
    description: k/v pairs of existing aaa server
    returned: always
    type: dict
    sample: {"aclNumOrName": "test", "aclType": "Basic"}
end_state:
    description: k/v pairs of aaa params after module execution
    returned: always
    type: dict
    sample: {}
updates:
    description: command sent to the device
    returned: always
    type: list
    sample: ["undo acl name test"]

