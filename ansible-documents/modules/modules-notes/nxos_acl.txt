> NXOS_ACL    (/usr/lib/python2.7/dist-packages/ansible/modules/network/nxos/nxos_acl.py)

        Manages access list entries for ACLs.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- ack
        Match on the ACK bit.
        (Choices: enable)[Default: (null)]

- action
        Action of the ACE.
        (Choices: permit, deny, remark)[Default: (null)]

- dest
        Destination ip and mask using IP/MASK notation and supports the keyword 'any'.
        [Default: (null)]

- dest_port1
        Port/protocol and also first (lower) port when using range operand.
        [Default: (null)]

- dest_port2
        Second (end) port when using range operand.
        [Default: (null)]

- dest_port_op
        Destination port operands such as eq, neq, gt, lt, range.
        (Choices: any, eq, gt, lt, neq, range)[Default: (null)]

- dscp
        Match packets with given dscp value.
        (Choices: af11, af12, af13, af21, af22, af23, af31, af32, af33, af41, af42, af43, cs1, cs2, cs3, cs4, cs5, cs6, cs7, default,
        ef)[Default: (null)]

- established
        Match established connections.
        (Choices: enable)[Default: (null)]

- fin
        Match on the FIN bit.
        (Choices: enable)[Default: (null)]

- fragments
        Check non-initial fragments.
        (Choices: enable)[Default: (null)]

- log
        Log matches against this entry.
        (Choices: enable)[Default: (null)]

= name
        Case sensitive name of the access list (ACL).


- precedence
        Match packets with given precedence.
        (Choices: critical, flash, flash-override, immediate, internet, network, priority, routine)[Default: (null)]

- proto
        Port number or protocol (as supported by the switch).
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using NX-API.
        For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
            version_added: 2.5.3
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
            version_added: 2.5.3
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `nxapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `nxapi'.  The port value will default to
              the appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.  This
              argument is only used for the `cli' transport. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE' will
              be used instead.
            type: str
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error. NX-API can be slow to return
              on long-running commands (sh mac, sh bgp, etc).
            type: int
            version_added: '2.3'
          transport:
            choices:
            - cli
            - nxapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.  The
              transport argument supports connectivity to the device over cli (ssh) or nxapi.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: false
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=nxapi',
              otherwise this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the nxapi
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not nxapi, this value is ignored.
            type: bool
        
        type: dict

- psh
        Match on the PSH bit.
        (Choices: enable)[Default: (null)]

- remark
        If action is set to remark, this is the description.
        [Default: (null)]

- rst
        Match on the RST bit.
        (Choices: enable)[Default: (null)]

- seq
        Sequence number of the entry (ACE).
        [Default: (null)]

- src
        Source ip and mask using IP/MASK notation and supports keyword 'any'.
        [Default: (null)]

- src_port1
        Port/protocol and also first (lower) port when using range operand.
        [Default: (null)]

- src_port2
        Second (end) port when using range operand.
        [Default: (null)]

- src_port_op
        Source port operands such as eq, neq, gt, lt, range.
        (Choices: any, eq, gt, lt, neq, range)[Default: (null)]

- state
        Specify desired state of the resource.
        (Choices: present, absent, delete_acl)[Default: present]

- syn
        Match on the SYN bit.
        (Choices: enable)[Default: (null)]

- time_range
        Name of time-range to apply.
        [Default: (null)]

- urg
        Match on the URG bit.
        (Choices: enable)[Default: (null)]


NOTES:
      * Tested against NXOSv 7.3.(0)D1(1) on VIRL
      * `state=absent' removes the ACE if it exists.
      * `state=delete_acl' deletes the ACL if it exists.
      * For idempotency, use port numbers for the src/dest port params like `src_port1' and names for the well defined protocols
        for the `proto' param.
      * Although this module is idempotent in that if the ace as presented in the task is identical to the one on the switch, no
        changes will be made. If there is any difference, what is in Ansible will be pushed (configured options will be
        overridden).  This is to improve security, but at the same time remember an ACE is removed, then re-added, so if there is a
        change, the new ACE will be exactly what parameters you are sending to the module.
      * For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Cisco devices see the `Cisco integration page
        <https://www.ansible.com/integrations/networks/cisco>`_.


AUTHOR: Jason Edelman (@jedelman8), Gabriele Gerbino (@GGabriele)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

# configure ACL ANSIBLE
- nxos_acl:
    name: ANSIBLE
    seq: 10
    action: permit
    proto: tcp
    src: 192.0.2.1/24
    dest: any
    state: present


RETURN VALUES:

commands:
    description: commands sent to the device
    returned: always
    type: list
    sample: ["ip access-list ANSIBLE", "10 permit tcp 192.0.2.1/24 any"]

