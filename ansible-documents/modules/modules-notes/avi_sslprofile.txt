> AVI_SSLPROFILE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/avi/avi_sslprofile.py)

        This module is used to configure SSLProfile object more examples at https://github.com/avinetworks/devops

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- accepted_ciphers
        Ciphers suites represented as defined by http://www.openssl.org/docs/apps/ciphers.html.
        Default value when not specified in API or module is interpreted by Avi Controller as AES:3DES:RC4.
        [Default: (null)]

- accepted_versions
        Set of versions accepted by the server.
        [Default: (null)]

- api_context
        Avi API context that includes current session ID and CSRF Token.
        This allows user to perform single login and re-use the session.
        [Default: (null)]
        type: dict
        version_added: 2.5

- api_version
        Avi API version of to use for Avi API and objects.
        [Default: 16.4.4]
        type: str

- avi_api_patch_op
        Patch operation to use when using avi_api_update_method as patch.
        (Choices: add, replace, delete)[Default: (null)]
        version_added: 2.5

- avi_api_update_method
        Default method for object update is HTTP PUT.
        Setting to patch will override that behavior to use HTTP PATCH.
        (Choices: put, patch)[Default: put]
        version_added: 2.5

- avi_credentials
        Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details.
        [Default: (null)]
        type: dict
        version_added: 2.5

- cipher_enums
        Enum options - tls_ecdhe_ecdsa_with_aes_128_gcm_sha256, tls_ecdhe_ecdsa_with_aes_256_gcm_sha384,
        tls_ecdhe_rsa_with_aes_128_gcm_sha256,
        tls_ecdhe_rsa_with_aes_256_gcm_sha384, tls_ecdhe_ecdsa_with_aes_128_cbc_sha256, tls_ecdhe_ecdsa_with_aes_256_cbc_sha384,
        tls_ecdhe_rsa_with_aes_128_cbc_sha256, tls_ecdhe_rsa_with_aes_256_cbc_sha384, tls_rsa_with_aes_128_gcm_sha256,
        tls_rsa_with_aes_256_gcm_sha384,
        tls_rsa_with_aes_128_cbc_sha256, tls_rsa_with_aes_256_cbc_sha256, tls_ecdhe_ecdsa_with_aes_128_cbc_sha,
        tls_ecdhe_ecdsa_with_aes_256_cbc_sha,
        tls_ecdhe_rsa_with_aes_128_cbc_sha, tls_ecdhe_rsa_with_aes_256_cbc_sha, tls_rsa_with_aes_128_cbc_sha,
        tls_rsa_with_aes_256_cbc_sha,
        tls_rsa_with_3des_ede_cbc_sha, tls_rsa_with_rc4_128_sha.
        [Default: (null)]

- controller
        IP address or hostname of the controller. The default value is the environment variable `AVI_CONTROLLER'.
        [Default: ]
        type: str

- description
        User defined description for the object.
        [Default: (null)]

- dhparam
        Dh parameters used in ssl.
        At this time, it is not configurable and is set to 2048 bits.
        [Default: (null)]

- enable_ssl_session_reuse
        Enable ssl session re-use.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

= name
        Name of the object.


- password
        Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'.
        [Default: ]
        type: str

- prefer_client_cipher_ordering
        Prefer the ssl cipher ordering presented by the client during the ssl handshake over the one specified in the ssl profile.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- send_close_notify
        Send 'close notify' alert message for a clean shutdown of the ssl connection.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- ssl_rating
        Sslrating settings for sslprofile.
        [Default: (null)]

- ssl_session_timeout
        The amount of time before an ssl session expires.
        Default value when not specified in API or module is interpreted by Avi Controller as 86400.
        Units(SEC).
        [Default: (null)]

- state
        The state that should be applied on the entity.
        (Choices: absent, present)[Default: present]

- tags
        List of tag.
        [Default: (null)]

- tenant
        Name of tenant used for all Avi API calls and context of object.
        [Default: admin]
        type: str

- tenant_ref
        It is a reference to an object of type tenant.
        [Default: (null)]

- tenant_uuid
        UUID of tenant used for all Avi API calls and context of object.
        [Default: ]
        type: str

- type
        Ssl profile type.
        Enum options - SSL_PROFILE_TYPE_APPLICATION, SSL_PROFILE_TYPE_SYSTEM.
        Field introduced in 17.2.8.
        Default value when not specified in API or module is interpreted by Avi Controller as SSL_PROFILE_TYPE_APPLICATION.
        [Default: (null)]
        version_added: 2.6

- url
        Avi controller URL of the object.
        [Default: (null)]

- username
        Username used for accessing Avi controller. The default value is the environment variable `AVI_USERNAME'.
        [Default: ]
        type: str

- uuid
        Unique object identifier of the object.
        [Default: (null)]


NOTES:
      * For more information on using Ansible to manage Avi Network devices see https://www.ansible.com/ansible-avi-networks.


REQUIREMENTS:  avisdk

AUTHOR: Gaurav Rastogi (@grastogi23) <grastogi@avinetworks.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create SSL profile with list of allowed ciphers
    avi_sslprofile:
      controller: '{{ controller }}'
      username: '{{ username }}'
      password: '{{ password }}'
      accepted_ciphers: >
        ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:
        ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:
        AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:
        AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:
        ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA
      accepted_versions:
      - type: SSL_VERSION_TLS1
      - type: SSL_VERSION_TLS1_1
      - type: SSL_VERSION_TLS1_2
      cipher_enums:
      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
      - TLS_RSA_WITH_AES_128_GCM_SHA256
      - TLS_RSA_WITH_AES_256_GCM_SHA384
      - TLS_RSA_WITH_AES_128_CBC_SHA256
      - TLS_RSA_WITH_AES_256_CBC_SHA256
      - TLS_RSA_WITH_AES_128_CBC_SHA
      - TLS_RSA_WITH_AES_256_CBC_SHA
      - TLS_RSA_WITH_3DES_EDE_CBC_SHA
      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
      - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
      name: PFS-BOTH-RSA-EC
      send_close_notify: true
      ssl_rating:
        compatibility_rating: SSL_SCORE_EXCELLENT
        performance_rating: SSL_SCORE_EXCELLENT
        security_score: '100.0'
      tenant_ref: Demo


RETURN VALUES:

obj:
    description: SSLProfile (api/sslprofile) object
    returned: success, changed
    type: dict

