> VMWARE_PORTGROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_portgroup.py)

        Create a VMware portgroup on given host/s or hosts of given cluster

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- cluster_name
        Name of cluster name for host membership.
        Portgroup will be created on all hosts of the given cluster.
        This option is required if `hosts' is not specified.
        [Default: (null)]
        version_added: 2.5

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- hosts
        List of name of host or hosts on which portgroup needs to be added.
        This option is required if `cluster_name' is not specified.
        (Aliases: esxi_hostname)[Default: (null)]
        version_added: 2.5

- network_policy
        Network policy specifies layer 2 security settings for a portgroup such as promiscuous mode, where guest adapter listens to all
        the packets, MAC address changes and forged transmits.
        Dict which configures the different security values for portgroup.
        Valid attributes are:
        - `promiscuous_mode' (bool): indicates whether promiscuous mode is allowed. (default: false)
        - `forged_transmits' (bool): indicates whether forged transmits are allowed. (default: false)
        - `mac_changes' (bool): indicates whether mac changes are allowed. (default: false)
        [Default: {u'mac_changes': False, u'promiscuous_mode': False, u'forged_transmits': False}]
        version_added: 2.2

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

= portgroup_name
        Portgroup name to add.


- state
        Determines if the portgroup should be present or not.
        (Choices: present, absent)[Default: present]
        version_added: 2.5

= switch_name
        vSwitch to modify.


- teaming_policy
        Dictionary which configures the different teaming values for portgroup.
        Valid attributes are:
        - `load_balance_policy' (string): Network adapter teaming policy. (default: loadbalance_srcid)
           - choices: [ loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, failover_explicit ]
        - `inbound_policy' (bool): Indicate whether or not the teaming policy is applied to inbound frames as well. (default: False)
        - `notify_switches' (bool): Indicate whether or not to notify the physical switch if a link fails. (default: True)
        - `rolling_order' (bool): Indicate whether or not to use a rolling policy when restoring links. (default: False)
        [Default: {u'notify_switches': True, u'load_balance_policy': u'loadbalance_srcid', u'inbound_policy': False, u'rolling_order':
        False}]
        version_added: 2.6

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool

= vlan_id
        VLAN ID to assign to portgroup.



NOTES:
      * Tested on vSphere 5.5, 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Joseph Callen (@jcpowermac), Russell Teague (@mtnbikenc), Abhijeet Kasurde (@Akasurde) <akasurde@redhat.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Add Management Network VM Portgroup
  vmware_portgroup:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    vlan_id: "{{ vlan_id }}"
  delegate_to: localhost

- name: Add Portgroup with Promiscuous Mode Enabled
  vmware_portgroup:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    network_policy:
        promiscuous_mode: True
  delegate_to: localhost

- name: Add Management Network VM Portgroup to specific hosts
  vmware_portgroup:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    hosts: [esxi_hostname_one]
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    vlan_id: "{{ vlan_id }}"
  delegate_to: localhost

- name: Add Management Network VM Portgroup to all hosts in a cluster
  vmware_portgroup:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    cluster_name: "{{ cluster_name }}"
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    vlan_id: "{{ vlan_id }}"
  delegate_to: localhost

- name: Remove Management Network VM Portgroup to all hosts in a cluster
  vmware_portgroup:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    cluster_name: "{{ cluster_name }}"
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    vlan_id: "{{ vlan_id }}"
    state: absent
  delegate_to: localhost

- name: Add Portgroup with teaming policy
  vmware_portgroup:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    switch_name: "{{ vswitch_name }}"
    portgroup_name: "{{ portgroup_name }}"
    teaming_policy:
      load_balance_policy: 'failover_explicit'
      inbound_policy: True
  delegate_to: localhost
  register: teaming_result


RETURN VALUES:

result:
    description: metadata about the portgroup
    returned: always
    type: dict
    sample: {
        "esxi01.example.com": {
            "portgroup_name": "pg0010",
            "switch_name": "vswitch_0001",
            "vlan_id": 1
        }
    }

