> CS_VOLUME    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudstack/cs_volume.py)

        Create, destroy, attach, detach, extract or upload volumes.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- account
        Account the volume is related to.
        [Default: (null)]
        type: str

- api_http_method
        HTTP method used to query the API endpoint.
        If not given, the `CLOUDSTACK_METHOD' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is `get' if not specified.
        (Choices: get, post)[Default: (null)]
        type: str

- api_key
        API key of the CloudStack API.
        If not given, the `CLOUDSTACK_KEY' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_region
        Name of the ini section in the `cloustack.ini' file.
        If not given, the `CLOUDSTACK_REGION' env variable is considered.
        [Default: cloudstack]
        type: str

- api_secret
        Secret key of the CloudStack API.
        If not set, the `CLOUDSTACK_SECRET' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_timeout
        HTTP timeout in seconds.
        If not given, the `CLOUDSTACK_TIMEOUT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is 10 seconds if not specified.
        [Default: (null)]
        type: int

- api_url
        URL of the CloudStack API e.g. https://cloud.example.com/client/api.
        If not given, the `CLOUDSTACK_ENDPOINT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- custom_id
        Custom id to the resource.
        Allowed to Root Admins only.
        [Default: (null)]
        type: str

- device_id
        ID of the device on a VM the volume is attached to.
        Only considered if `state' is `attached'.
        [Default: (null)]
        type: int

- disk_offering
        Name of the disk offering to be used.
        Required one of `disk_offering', `snapshot' if volume is not already `state=present'.
        [Default: (null)]
        type: str

- display_volume
        Whether to display the volume to the end user or not.
        Allowed to Root Admins only.
        [Default: (null)]
        type: bool

- domain
        Name of the domain the volume to be deployed in.
        [Default: (null)]
        type: str

- force
        Force removal of volume even it is attached to a VM.
        Considered on `state=absent' only.
        [Default: False]
        type: bool

- format
        The format for the volume.
        Only considered if `state=uploaded'.
        (Choices: QCOW2, RAW, VHD, VHDX, OVA)[Default: (null)]
        type: str
        version_added: 2.8

- max_iops
        Max iops
        [Default: (null)]
        type: int

- min_iops
        Min iops
        [Default: (null)]
        type: int

- mode
        Mode for the volume extraction.
        Only considered if `state=extracted'.
        (Choices: http_download, ftp_upload)[Default: http_download]
        type: str
        version_added: 2.8

= name
        Name of the volume.
        `name' can only contain ASCII letters.

        type: str

- poll_async
        Poll async jobs until job has finished.
        [Default: True]
        type: bool

- project
        Name of the project the volume to be deployed in.
        [Default: (null)]
        type: str

- shrink_ok
        Whether to allow to shrink the volume.
        [Default: False]
        type: bool

- size
        Size of disk in GB
        [Default: (null)]
        type: int

- snapshot
        The snapshot name for the disk volume.
        Required one of `disk_offering', `snapshot' if volume is not already `state=present'.
        [Default: (null)]
        type: str

- state
        State of the volume.
        The choices `extracted' and `uploaded' were added in version 2.8.
        (Choices: present, absent, attached, detached, extracted, uploaded)[Default: present]
        type: str

- tags
        List of tags. Tags are a list of dictionaries having keys `key' and `value'.
        To delete all tags, set a empty list e.g. `tags: []'.
        (Aliases: tag)[Default: (null)]
        type: list
        version_added: 2.4

- url
        URL to which the volume would be extracted on `state=extracted'
        or the URL where to download the volume on `state=uploaded'.
        Only considered if `state' is `extracted' or `uploaded'.
        [Default: (null)]
        type: str
        version_added: 2.8

- vm
        Name of the virtual machine to attach the volume to.
        [Default: (null)]
        type: str

- zone
        Name of the zone in which the volume should be deployed.
        If not set, default zone is used.
        [Default: (null)]
        type: str


NOTES:
      * Ansible uses the `cs' library's configuration method if credentials are not provided by the arguments `api_url', `api_key',
        `api_secret'. Configuration is read from several locations, in the following order. The `CLOUDSTACK_ENDPOINT',
        `CLOUDSTACK_KEY', `CLOUDSTACK_SECRET' and `CLOUDSTACK_METHOD'. `CLOUDSTACK_TIMEOUT' environment variables. A
        `CLOUDSTACK_CONFIG' environment variable pointing to an `.ini' file. A `cloudstack.ini' file in the current working
        directory. A `.cloudstack.ini' file in the users home directory. Optionally multiple credentials and endpoints can be
        specified using ini sections in `cloudstack.ini'. Use the argument `api_region' to select the section name, default section
        is `cloudstack'. See https://github.com/exoscale/cs for more information.
      * A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud
        Guide,../scenario_guides/guide_cloudstack.html).
      * This module supports check mode.


REQUIREMENTS:  python >= 2.6, cs >= 0.6.10

AUTHOR: Jefferson Girão (@jeffersongirao), René Moser (@resmo)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

- name: create volume within project and zone with specified storage options
  cs_volume:
    name: web-vm-1-volume
    project: Integration
    zone: ch-zrh-ix-01
    disk_offering: PerfPlus Storage
    size: 20
  delegate_to: localhost

- name: create/attach volume to instance
  cs_volume:
    name: web-vm-1-volume
    disk_offering: PerfPlus Storage
    size: 20
    vm: web-vm-1
    state: attached
  delegate_to: localhost

- name: detach volume
  cs_volume:
    name: web-vm-1-volume
    state: detached
  delegate_to: localhost

- name: remove volume
  cs_volume:
    name: web-vm-1-volume
    state: absent
  delegate_to: localhost

# New in version 2.8
- name: Extract DATA volume to make it downloadable
  cs_volume:
    state: extracted
    name: web-vm-1-volume
  register: data_vol_out
  delegate_to: localhost

- name: Create new volume by downloading source volume
  cs_volume:
    state: uploaded
    name: web-vm-1-volume-2
    format: VHD
    url: "{{ data_vol_out.url }}"
  delegate_to: localhost


RETURN VALUES:

id:
  description: ID of the volume.
  returned: success
  type: str
  sample:
name:
  description: Name of the volume.
  returned: success
  type: str
  sample: web-volume-01
display_name:
  description: Display name of the volume.
  returned: success
  type: str
  sample: web-volume-01
group:
  description: Group the volume belongs to
  returned: success
  type: str
  sample: web
domain:
  description: Domain the volume belongs to
  returned: success
  type: str
  sample: example domain
project:
  description: Project the volume belongs to
  returned: success
  type: str
  sample: Production
zone:
  description: Name of zone the volume is in.
  returned: success
  type: str
  sample: ch-gva-2
created:
  description: Date of the volume was created.
  returned: success
  type: str
  sample: 2014-12-01T14:57:57+0100
attached:
  description: Date of the volume was attached.
  returned: success
  type: str
  sample: 2014-12-01T14:57:57+0100
type:
  description: Disk volume type.
  returned: success
  type: str
  sample: DATADISK
size:
  description: Size of disk volume.
  returned: success
  type: int
  sample: 20
vm:
  description: Name of the vm the volume is attached to (not returned when detached)
  returned: success
  type: str
  sample: web-01
state:
  description: State of the volume
  returned: success
  type: str
  sample: Attached
device_id:
  description: Id of the device on user vm the volume is attached to (not returned when detached)
  returned: success
  type: int
  sample: 1
url:
  description: The url of the uploaded volume or the download url depending extraction mode.
  returned: success when I(state=extracted)
  type: str
  sample: http://1.12.3.4/userdata/387e2c7c-7c42-4ecc-b4ed-84e8367a1965.vhd
  version_added: '2.8'

