> CNOS_BGP    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cnos/cnos_bgp.py)

        This module allows you to work with Border Gateway Protocol (BGP) related configurations. The operators used are overloaded to
        ensure control over switch BGP configurations. This module is invoked using method with asNumber as one of its arguments. The
        first level of the BGP configuration allows to set up an AS number, with the following attributes going into various
        configuration operations under the context of BGP. After passing this level, there are eight BGP arguments that will perform
        further configurations. They are bgpArg1, bgpArg2, bgpArg3, bgpArg4, bgpArg5, bgpArg6, bgpArg7, and bgpArg8. For more details on
        how to use these arguments, see [Overloaded Variables]. This module uses SSH to manage network device configuration. The results
        of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where
        the playbook is run.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= asNum
        AS number
        [Default: None]

= bgpArg1
        This is an overloaded bgp first argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: address-family, bestpath, bgp, cluster-id, confederation, enforce-first-as, fast-external-failover, graceful-restart,
        graceful-restart-helper, log-neighbor-changes, maxas-limit, neighbor, router-id, shutdown, synchronization, timers, vrf)[Default:
        None]

- bgpArg2
        This is an overloaded bgp second argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: ipv4 or ipv6, always-compare-med, compare-confed-aspath, compare-routerid, dont-compare-originator-id, tie-break-on-
        age, as-path, med, identifier, peers)[Default: None]

- bgpArg3
        This is an overloaded bgp third argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: aggregate-address, client-to-client, dampening, distance, maximum-paths, network, nexthop, redistribute, save,
        synchronization, ignore or multipath-relax, confed or missing-as-worst or non-deterministic or remove-recv-med or remove-send-
        med)[Default: None]

- bgpArg4
        This is an overloaded bgp fourth argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: Aggregate prefix, Reachability Half-life time, route-map, Distance for routes ext, ebgp or ibgp, IP prefix <network>,
        IP prefix <network>/<length>, synchronization, Delay value, direct, ospf, static, memory)[Default: None]

- bgpArg5
        This is an overloaded bgp fifth argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: as-set, summary-only, Value to start reusing a route, Distance for routes internal, Supported multipath numbers,
        backdoor, map, route-map)[Default: None]

- bgpArg6
        This is an overloaded bgp sixth argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: summary-only, as-set, route-map name, Value to start suppressing a route, Distance local routes, Network mask, Pointer
        to route-map entries)[Default: None]

- bgpArg7
        This is an overloaded bgp seventh argument. Use of this argument can be found is the User Guide referenced above.
        (Choices: Maximum duration to suppress a stable route(minutes), backdoor, route-map, Name of the route map)[Default: None]

- bgpArg8
        This is an overloaded bgp eigth argument. Usage of this argument can be found is the User Guide referenced above.
        (Choices: Un-reachability Half-life time for the penalty(minutes), backdoor)[Default: None]

= deviceType
        This specifies the type of device where the method is executed. The choices NE1072T,NE1032,NE1032T,NE10032,NE2572 are added since
        Ansible 2.4. The choice NE0152T is added since 2.8
        (Choices: g8272_cnos, g8296_cnos, g8332_cnos, NE0152T, NE1072T, NE1032, NE1032T, NE10032, NE2572)
        type: str
        version_added: 2.3

- enablePassword
        Configures the password used to enter Global Configuration command mode on the switch. If the switch does not request this
        password, the parameter is ignored.While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.
        [Default: (null)]
        type: str
        version_added: 2.3

= host
        This is the variable used to search the hosts file at /etc/ansible/hosts and identify the IP address of the device on which the
        template is going to be applied. Usually the Ansible keyword {{ inventory_hostname }} is specified in the playbook as an
        abstraction of the group of network elements that need to be configured.

        type: str
        version_added: 2.3

= outputfile
        This specifies the file path where the output of each command execution is saved. Each command that is specified in the merged
        template file and each response from the device are saved here. Usually the location is the results folder, but you can choose
        another location based on your write permission.

        type: str
        version_added: 2.3

= password
        Configures the password used to authenticate the connection to the remote device. The value of the password parameter is used to
        authenticate the SSH session. While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.

        type: str
        version_added: 2.3

= username
        Configures the username used to authenticate the connection to the remote device. The value of the username parameter is used to
        authenticate the SSH session. While generally the value should come from the inventory file, you can also specify it as a
        variable. This parameter is optional. If it is not specified, no default value will be used.

        type: str
        version_added: 2.3


NOTES:
      * For more information on using Ansible to manage Lenovo Network devices see https://www.ansible.com/ansible-lenovo.


AUTHOR: Anil Kumar Muraleedharan (@amuraleedhar)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

Tasks: The following are examples of using the module cnos_bgp. These are
 written in the main.yml file of the tasks directory.
---
- name: Test BGP  - neighbor
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "neighbor"
      bgpArg2: "10.241.107.40"
      bgpArg3: 13
      bgpArg4: "address-family"
      bgpArg5: "ipv4"
      bgpArg6: "next-hop-self"

- name: Test BGP  - BFD
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "neighbor"
      bgpArg2: "10.241.107.40"
      bgpArg3: 13
      bgpArg4: "bfd"

- name: Test BGP  - address-family - dampening
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "address-family"
      bgpArg2: "ipv4"
      bgpArg3: "dampening"
      bgpArg4: 13
      bgpArg5: 233
      bgpArg6: 333
      bgpArg7: 15
      bgpArg8: 33

- name: Test BGP  - address-family - network
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "address-family"
      bgpArg2: "ipv4"
      bgpArg3: "network"
      bgpArg4: "1.2.3.4/5"
      bgpArg5: "backdoor"

- name: Test BGP - bestpath - always-compare-med
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "bestpath"
      bgpArg2: "always-compare-med"

- name: Test BGP - bestpath-compare-confed-aspat
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "bestpath"
      bgpArg2: "compare-confed-aspath"

- name: Test BGP - bgp
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "bgp"
      bgpArg2: 33

- name: Test BGP  - cluster-id
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "cluster-id"
      bgpArg2: "1.2.3.4"

- name: Test BGP - confederation-identifier
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "confederation"
      bgpArg2: "identifier"
      bgpArg3: 333

- name: Test BGP - enforce-first-as
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "enforce-first-as"

- name: Test BGP - fast-external-failover
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "fast-external-failover"

- name: Test BGP  - graceful-restart
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "graceful-restart"
      bgpArg2: 333

- name: Test BGP - graceful-restart-helper
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "graceful-restart-helper"

- name: Test BGP - maxas-limit
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "maxas-limit"
      bgpArg2: 333

- name: Test BGP  - neighbor
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "neighbor"
      bgpArg2: "10.241.107.40"
      bgpArg3: 13
      bgpArg4: "address-family"
      bgpArg5: "ipv4"
      bgpArg6: "next-hop-self"

- name: Test BGP - router-id
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "router-id"
      bgpArg2: "1.2.3.4"

- name: Test BGP - synchronization
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "synchronization"

- name: Test BGP - timers
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "timers"
      bgpArg2: 333
      bgpArg3: 3333

- name: Test BGP - vrf
  cnos_bgp:
      deviceType: "{{ hostvars[inventory_hostname]['deviceType'] }}"
      outputfile: "./results/test_bgp_{{ inventory_hostname }}_output.txt"
      asNum: 33
      bgpArg1: "vrf"


RETURN VALUES:

msg:
  description: Success or failure message. Upon any failure, the method returns
   an error display string.
  returned: always
  type: str

