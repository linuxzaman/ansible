> CE_ACL_ADVANCE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_acl_advance.py)

        Manages advanced ACL configurations on HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- acl_description
        ACL description. The value is a string of 1 to 127 characters.
        [Default: (null)]

= acl_name
        ACL number or name. For a numbered rule group, the value ranging from 3000 to 3999 indicates a advance ACL. For a named rule
        group, the value is a string of 1 to 32 case-sensitive characters starting with a letter, spaces not supported.


- acl_num
        ACL number. The value is an integer ranging from 3000 to 3999.
        [Default: (null)]

- acl_step
        ACL step. The value is an integer ranging from 1 to 20. The default value is 5.
        [Default: (null)]

- dest_ip
        Destination IP address. The value is a string of 0 to 255 characters.The default value is 0.0.0.0. The value is in dotted decimal
        notation.
        [Default: (null)]

- dest_mask
        Destination IP address mask. The value is an integer ranging from 1 to 32.
        [Default: (null)]

- dest_pool_name
        Name of a destination pool. The value is a string of 1 to 32 characters.
        [Default: (null)]

- dest_port_begin
        Start port number of the destination port. The value is an integer ranging from 0 to 65535.
        [Default: (null)]

- dest_port_end
        End port number of the destination port. The value is an integer ranging from 0 to 65535.
        [Default: (null)]

- dest_port_op
        Range type of the destination port.
        (Choices: lt, eq, gt, range)[Default: (null)]

- dest_port_pool_name
        Name of a destination port pool. The value is a string of 1 to 32 characters.
        [Default: (null)]

- dscp
        Differentiated Services Code Point. The value is an integer ranging from 0 to 63.
        [Default: (null)]

- established
        Match established connections.
        [Default: no]
        type: bool

- frag_type
        Type of packet fragmentation.
        (Choices: fragment, clear_fragment)[Default: (null)]

- icmp_code
        ICMP message code. Data packets can be filtered based on the ICMP message code. The value is an integer ranging from 0 to 255.
        [Default: (null)]

- icmp_name
        ICMP name.
        (Choices: unconfiged, echo, echo-reply, fragmentneed-DFset, host-redirect, host-tos-redirect, host-unreachable, information-
        reply, information-request, net-redirect, net-tos-redirect, net-unreachable, parameter-problem, port-unreachable, protocol-
        unreachable, reassembly-timeout, source-quench, source-route-failed, timestamp-reply, timestamp-request, ttl-exceeded, address-
        mask-reply, address-mask-request, custom)[Default: (null)]

- icmp_type
        ICMP type. This parameter is available only when the packet protocol is ICMP. The value is an integer ranging from 0 to 255.
        [Default: (null)]

- igmp_type
        Internet Group Management Protocol.
        (Choices: host-query, mrouter-adver, mrouter-solic, mrouter-termi, mtrace-resp, mtrace-route, v1host-report, v2host-report,
        v2leave-group, v3host-report)[Default: (null)]

- log_flag
        Flag of logging matched data packets.
        [Default: no]
        type: bool

- precedence
        Data packets can be filtered based on the priority field. The value is an integer ranging from 0 to 7.
        [Default: (null)]

- protocol
        Protocol type.
        (Choices: ip, icmp, igmp, ipinip, tcp, udp, gre, ospf)[Default: (null)]

- rule_action
        Matching mode of basic ACL rules.
        (Choices: permit, deny)[Default: (null)]

- rule_description
        Description about an ACL rule.
        [Default: (null)]

- rule_id
        ID of a basic ACL rule in configuration mode. The value is an integer ranging from 0 to 4294967294.
        [Default: (null)]

- rule_name
        Name of a basic ACL rule. The value is a string of 1 to 32 characters.
        [Default: (null)]

- source_ip
        Source IP address. The value is a string of 0 to 255 characters.The default value is 0.0.0.0. The value is in dotted decimal
        notation.
        [Default: (null)]

- src_mask
        Source IP address mask. The value is an integer ranging from 1 to 32.
        [Default: (null)]

- src_pool_name
        Name of a source pool. The value is a string of 1 to 32 characters.
        [Default: (null)]

- src_port_begin
        Start port number of the source port. The value is an integer ranging from 0 to 65535.
        [Default: (null)]

- src_port_end
        End port number of the source port. The value is an integer ranging from 0 to 65535.
        [Default: (null)]

- src_port_op
        Range type of the source port.
        (Choices: lt, eq, gt, range)[Default: (null)]

- src_port_pool_name
        Name of a source port pool. The value is a string of 1 to 32 characters.
        [Default: (null)]

- state
        Specify desired state of the resource.
        (Choices: present, absent, delete_acl)[Default: present]

- syn_flag
        TCP flag value. The value is an integer ranging from 0 to 63.
        [Default: (null)]

- tcp_flag_mask
        TCP flag mask value. The value is an integer ranging from 0 to 63.
        [Default: (null)]

- time_range
        Name of a time range in which an ACL rule takes effect.
        [Default: (null)]

- tos
        ToS value on which data packet filtering is based. The value is an integer ranging from 0 to 15.
        [Default: (null)]

- ttl_expired
        Whether TTL Expired is matched, with the TTL value of 1.
        [Default: no]
        type: bool

- vrf_name
        VPN instance name. The value is a string of 1 to 31 characters.The default value is _public_.
        [Default: (null)]


AUTHOR: wangdezhuang (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: CloudEngine advance acl test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: "Config ACL"
    ce_acl_advance:
      state: present
      acl_name: 3200
      provider: "{{ cli }}"

  - name: "Undo ACL"
    ce_acl_advance:
      state: delete_acl
      acl_name: 3200
      provider: "{{ cli }}"

  - name: "Config ACL advance rule"
    ce_acl_advance:
      state: present
      acl_name: test
      rule_name: test_rule
      rule_id: 111
      rule_action: permit
      protocol: tcp
      source_ip: 10.10.10.10
      src_mask: 24
      frag_type: fragment
      provider: "{{ cli }}"

  - name: "Undo ACL advance rule"
    ce_acl_advance:
      state: absent
      acl_name: test
      rule_name: test_rule
      rule_id: 111
      rule_action: permit
      protocol: tcp
      source_ip: 10.10.10.10
      src_mask: 24
      frag_type: fragment
      provider: "{{ cli }}"


RETURN VALUES:

changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true
proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {"acl_name": "test", "state": "delete_acl"}
existing:
    description: k/v pairs of existing aaa server
    returned: always
    type: dict
    sample: {"aclNumOrName": "test", "aclType": "Advance"}
end_state:
    description: k/v pairs of aaa params after module execution
    returned: always
    type: dict
    sample: {}
updates:
    description: command sent to the device
    returned: always
    type: list
    sample: ["undo acl name test"]

