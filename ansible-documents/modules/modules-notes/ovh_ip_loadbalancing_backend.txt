> OVH_IP_LOADBALANCING_BACKEND    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py)

        Manage OVH (French European hosting provider) LoadBalancing IP backends

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= application_key
        The applicationKey to use


= application_secret
        The application secret to use


= backend
        The IP address of the backend to update / modify / delete


= consumer_key
        The consumer key to use


= endpoint
        The endpoint to use ( for instance ovh-eu)


= name
        Name of the LoadBalancing internal name (ip-X.X.X.X)


- probe
        Determines the type of probe to use for this backend
        (Choices: none, http, icmp, oco)[Default: none]

- state
        Determines whether the backend is to be created/modified or deleted
        (Choices: present, absent)[Default: present]

- timeout
        The timeout in seconds used to wait for a task to be completed.
        [Default: 120]

- weight
        Determines the weight for this backend
        [Default: 8]


NOTES:
      * Uses the python OVH Api https://github.com/ovh/python-ovh. You have to create an application (a key and secret) with a
        consummer key as described into https://eu.api.ovh.com/g934.first_step_with_api


REQUIREMENTS:  ovh >  0.3.5

AUTHOR: Pascal Heraud (@pascalheraud)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Adds or modify the backend '212.1.1.1' to a
# loadbalancing 'ip-1.1.1.1'
- ovh_ip_loadbalancing:
    name: ip-1.1.1.1
    backend: 212.1.1.1
    state: present
    probe: none
    weight: 8
    endpoint: ovh-eu
    application_key: yourkey
    application_secret: yoursecret
    consumer_key: yourconsumerkey

# Removes a backend '212.1.1.1' from a loadbalancing 'ip-1.1.1.1'
- ovh_ip_loadbalancing:
    name: ip-1.1.1.1
    backend: 212.1.1.1
    state: absent
    endpoint: ovh-eu
    application_key: yourkey
    application_secret: yoursecret
    consumer_key: yourconsumerkey


RETURN VALUES:


