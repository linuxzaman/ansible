> PROXYSQL_MYSQL_USERS    (/usr/lib/python2.7/dist-packages/ansible/modules/database/proxysql/proxysql_mysql_users.py)

        The [proxysql_mysql_users] module adds or removes mysql users using the proxysql admin interface.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- active
        A user with `active' set to `False' will be tracked in the database, but will be never loaded in the in-memory data structures.
        If omitted the proxysql database default for `active' is `True'.
        [Default: (null)]
        type: bool

- backend
        If `backend' is set to `True', this (username, password) pair is used for authenticating to the ProxySQL instance.
        [Default: True]
        type: bool

- config_file
        Specify a config file from which `login_user' and `login_password' are to be read.
        [Default: ]
        type: path

- default_hostgroup
        If there is no matching rule for the queries sent by this user, the traffic it generates is sent to the specified hostgroup. If
        omitted the proxysql database default for `use_ssl' is 0.
        [Default: (null)]

- default_schema
        The schema to which the connection should change to by default.
        [Default: (null)]

- fast_forward
        If `fast_forward' is set to `True', `fast_forward' will bypass the query processing layer (rewriting, caching) and pass through
        the query directly as is to the backend server. If omitted the proxysql database default for `fast_forward' is `False'.
        [Default: (null)]
        type: bool

- frontend
        If `frontend' is set to `True', this (username, password) pair is used for authenticating to the mysqld servers against any
        hostgroup.
        [Default: True]
        type: bool

- load_to_runtime
        Dynamically load config to runtime memory.
        [Default: yes]
        type: bool

- login_host
        The host used to connect to ProxySQL admin interface.
        [Default: 127.0.0.1]
        type: str

- login_password
        The password used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str

- login_port
        The port used to connect to ProxySQL admin interface.
        [Default: 6032]
        type: int

- login_user
        The username used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str

- max_connections
        The maximum number of connections ProxySQL will open to the backend for this user. If omitted the proxysql database default for
        `max_connections' is 10000.
        [Default: (null)]

- password
        Password of the user connecting to the mysqld or ProxySQL instance.
        [Default: (null)]

- save_to_disk
        Save config to sqlite db on disk to persist the configuration.
        [Default: yes]
        type: bool

- state
        When `present' - adds the user, when `absent' - removes the user.
        (Choices: present, absent)[Default: present]

- transaction_persistent
        If this is set for the user with which the MySQL client is connecting to ProxySQL (thus a "frontend" user), transactions started
        within a hostgroup will remain within that hostgroup regardless of any other rules. If omitted the proxysql database default for
        `transaction_persistent' is `False'.
        [Default: (null)]
        type: bool

- use_ssl
        If `use_ssl' is set to `True', connections by this user will be made using SSL connections. If omitted the proxysql database
        default for `use_ssl' is `False'.
        [Default: (null)]
        type: bool

= username
        Name of the user connecting to the mysqld or ProxySQL instance.



REQUIREMENTS:  PyMySQL (Python 2.7 and Python 3.X), or, MySQLdb (Python 2.x)

AUTHOR: Ben Mildren (@bmildren)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

---
# This example adds a user, it saves the mysql user config to disk, but
# avoids loading the mysql user config to runtime (this might be because
# several users are being added and the user wants to push the config to
# runtime in a single batch using the M(proxysql_manage_config) module).  It
# uses supplied credentials to connect to the proxysql admin interface.

- proxysql_mysql_users:
    login_user: 'admin'
    login_password: 'admin'
    username: 'productiondba'
    state: present
    load_to_runtime: False

# This example removes a user, saves the mysql user config to disk, and
# dynamically loads the mysql user config to runtime.  It uses credentials
# in a supplied config file to connect to the proxysql admin interface.

- proxysql_mysql_users:
    config_file: '~/proxysql.cnf'
    username: 'mysqlboy'
    state: absent


RETURN VALUES:

stdout:
    description: The mysql user modified or removed from proxysql
    returned: On create/update will return the newly modified user, on delete
              it will return the deleted record.
    type: dict
    sample:
        changed: true
        msg: Added user to mysql_users
        state: present
        user:
            active: 1
            backend: 1
            default_hostgroup: 1
            default_schema: null
            fast_forward: 0
            frontend: 1
            max_connections: 10000
            password: VALUE_SPECIFIED_IN_NO_LOG_PARAMETER
            schema_locked: 0
            transaction_persistent: 0
            use_ssl: 0
            username: guest_ro
        username: guest_ro

