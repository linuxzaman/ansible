> WIN_SAY    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_say.py)

        Uses .NET libraries to convert text to speech and optionally play .wav sounds.  Audio Service needs to be running and some kind
        of speakers or headphones need to be attached to the windows target(s) for the speech to be audible.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- end_sound_path
        Full path to a `.wav' file containing a sound to play after the text has been spoken.
        Useful on conference calls to alert other speakers that ansible has finished speaking.
        [Default: (null)]
        type: path

- msg
        The text to be spoken.
        Use either `msg' or `msg_file'.
        Optional so that you can use this module just to play sounds.
        [Default: (null)]
        type: str

- msg_file
        Full path to a windows format text file containing the text to be spokend.
        Use either `msg' or `msg_file'.
        Optional so that you can use this module just to play sounds.
        [Default: (null)]
        type: path

- speech_speed
        How fast or slow to speak the text.
        Must be an integer value in the range -10 to 10.
        -10 is slowest, 10 is fastest.
        [Default: 0]
        type: int

- start_sound_path
        Full path to a `.wav' file containing a sound to play before the text is spoken.
        Useful on conference calls to alert other speakers that ansible has something to say.
        [Default: (null)]
        type: path

- voice
        Which voice to use. See notes for how to discover installed voices.
        If the requested voice is not available the default voice will be used. Example voice names from Windows 10 are `Microsoft Zira
        Desktop' and `Microsoft Hazel Desktop'.
        [Default: (null)]
        type: str


NOTES:
      * Needs speakers or headphones to do anything useful.
      * To find which voices are installed, run the following Powershell commands.              Add-Type -AssemblyName
        System.Speech             $speech = New-Object -TypeName System.Speech.Synthesis.SpeechSynthesizer
        $speech.GetInstalledVoices() | ForEach-Object { $_.VoiceInfo }             $speech.Dispose()
      * Speech can be surprisingly slow, so it's best to keep message text short.


SEE ALSO:
      * Module win_msg
           The official documentation on the win_msg module.
           https://docs.ansible.com/ansible/latest/modules/win_msg_module.html
      * Module win_toast
           The official documentation on the win_toast module.
           https://docs.ansible.com/ansible/latest/modules/win_toast_module.html


AUTHOR: Jon Hawkesworth (@jhawkesworth)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Warn of impending deployment
  win_say:
    msg: Warning, deployment commencing in 5 minutes, please log out.

- name: Using a different voice and a start sound
  win_say:
    start_sound_path: C:\Windows\Media\ding.wav
    msg: Warning, deployment commencing in 5 minutes, please log out.
    voice: Microsoft Hazel Desktop

- name: With start and end sound
  win_say:
    start_sound_path: C:\Windows\Media\Windows Balloon.wav
    msg: New software installed
    end_sound_path: C:\Windows\Media\chimes.wav

- name: Text from file example
  win_say:
    start_sound_path: C:\Windows\Media\Windows Balloon.wav
    msg_file: AppData\Local\Temp\morning_report.txt
    end_sound_path: C:\Windows\Media\chimes.wav


RETURN VALUES:

message_text:
    description: The text that the module attempted to speak.
    returned: success
    type: str
    sample: "Warning, deployment commencing in 5 minutes."
voice:
    description: The voice used to speak the text.
    returned: success
    type: str
    sample: Microsoft Hazel Desktop
voice_info:
    description: The voice used to speak the text.
    returned: when requested voice could not be loaded
    type: str
    sample: Could not load voice TestVoice, using system default voice

