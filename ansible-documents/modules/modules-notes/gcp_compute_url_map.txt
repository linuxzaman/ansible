> GCP_COMPUTE_URL_MAP    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_url_map.py)

        UrlMaps are used to route requests to a backend service based on rules that you define for the host and path of an incoming URL.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

= default_service
        A reference to BackendService resource if none of the hostRules match.
        This field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a
        dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a
        gcp_compute_backend_service task and then set this default_service field to "{{ name-of-resource }}"


- description
        An optional description of this resource. Provide this property when you create the resource.
        [Default: (null)]

- host_rules
        The list of HostRules to use against the URL.
        [Default: (null)]
        suboptions:
          description:
            description:
            - An optional description of this HostRule. Provide this property when you create
              the resource.
            required: false
          hosts:
            description:
            - The list of host patterns to match. They must be valid hostnames, except * will
              match any string of ([a-z0-9-.]*). In that case, * must be the first character
              and must be followed in the pattern by either - or .
            required: true
          path_matcher:
            description:
            - The name of the PathMatcher to use to match the path portion of the URL if the
              hostRule matches the URL's host portion.
            required: true
        

= name
        Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
        means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
        except the last character, which cannot be a dash.


- path_matchers
        The list of named PathMatchers to use against the URL.
        [Default: (null)]
        suboptions:
          default_service:
            description:
            - A reference to a BackendService resource. This will be used if none of the pathRules
              defined by this PathMatcher is matched by the URL's path portion.
            - 'This field represents a link to a BackendService resource in GCP. It can be
              specified in two ways. First, you can place a dictionary with key ''selfLink''
              and value of your resource''s selfLink Alternatively, you can add `register:
              name-of-resource` to a gcp_compute_backend_service task and then set this default_service
              field to "{{ name-of-resource }}"'
            required: true
          description:
            description:
            - An optional description of this resource.
            required: false
          name:
            description:
            - The name to which this PathMatcher is referred by the HostRule.
            required: true
          path_rules:
            description:
            - The list of path rules.
            required: false
            suboptions:
              paths:
                description:
                - 'The list of path patterns to match. Each must start with / and the only
                  place a * is allowed is at the end following a /. The string fed to the
                  path matcher does not include any text after the first ? or #, and those
                  chars are not allowed here.'
                required: true
              service:
                description:
                - A reference to the BackendService resource if this rule is matched.
                - 'This field represents a link to a BackendService resource in GCP. It can
                  be specified in two ways. First, you can place a dictionary with key ''selfLink''
                  and value of your resource''s selfLink Alternatively, you can add `register:
                  name-of-resource` to a gcp_compute_backend_service task and then set this
                  service field to "{{ name-of-resource }}"'
                required: true
        

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- tests
        The list of expected URL mappings. Requests to update this UrlMap will succeed only if all of the test cases pass.
        [Default: (null)]
        suboptions:
          description:
            description:
            - Description of this test case.
            required: false
          host:
            description:
            - Host portion of the URL.
            required: true
          path:
            description:
            - Path portion of the URL.
            required: true
          service:
            description:
            - A reference to expected BackendService resource the given URL should be mapped
              to.
            - 'This field represents a link to a BackendService resource in GCP. It can be
              specified in two ways. First, you can place a dictionary with key ''selfLink''
              and value of your resource''s selfLink Alternatively, you can add `register:
              name-of-resource` to a gcp_compute_backend_service task and then set this service
              field to "{{ name-of-resource }}"'
            required: true
        


NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a instance group
  gcp_compute_instance_group:
    name: instancegroup-urlmap
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instancegroup

- name: create a http health check
  gcp_compute_http_health_check:
    name: httphealthcheck-urlmap
    healthy_threshold: 10
    port: 8080
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: healthcheck

- name: create a backend service
  gcp_compute_backend_service:
    name: backendservice-urlmap
    backends:
    - group: "{{ instancegroup }}"
    health_checks:
    - "{{ healthcheck.selfLink }}"
    enable_cdn: 'true'
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: backendservice

- name: create a url map
  gcp_compute_url_map:
    name: test_object
    default_service: "{{ backendservice }}"
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
defaultService:
  description:
  - A reference to BackendService resource if none of the hostRules match.
  returned: success
  type: dict
description:
  description:
  - An optional description of this resource. Provide this property when you create
    the resource.
  returned: success
  type: str
hostRules:
  description:
  - The list of HostRules to use against the URL.
  returned: success
  type: complex
  contains:
    description:
      description:
      - An optional description of this HostRule. Provide this property when you create
        the resource.
      returned: success
      type: str
    hosts:
      description:
      - The list of host patterns to match. They must be valid hostnames, except *
        will match any string of ([a-z0-9-.]*). In that case, * must be the first
        character and must be followed in the pattern by either - or .
      returned: success
      type: list
    pathMatcher:
      description:
      - The name of the PathMatcher to use to match the path portion of the URL if
        the hostRule matches the URL's host portion.
      returned: success
      type: str
id:
  description:
  - The unique identifier for the resource.
  returned: success
  type: int
fingerprint:
  description:
  - Fingerprint of this resource. This field is used internally during updates of
    this resource.
  returned: success
  type: str
name:
  description:
  - Name of the resource. Provided by the client when the resource is created. The
    name must be 1-63 characters long, and comply with RFC1035. Specifically, the
    name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str
pathMatchers:
  description:
  - The list of named PathMatchers to use against the URL.
  returned: success
  type: complex
  contains:
    defaultService:
      description:
      - A reference to a BackendService resource. This will be used if none of the
        pathRules defined by this PathMatcher is matched by the URL's path portion.
      returned: success
      type: dict
    description:
      description:
      - An optional description of this resource.
      returned: success
      type: str
    name:
      description:
      - The name to which this PathMatcher is referred by the HostRule.
      returned: success
      type: str
    pathRules:
      description:
      - The list of path rules.
      returned: success
      type: complex
      contains:
        paths:
          description:
          - 'The list of path patterns to match. Each must start with / and the only
            place a * is allowed is at the end following a /. The string fed to the
            path matcher does not include any text after the first ? or #, and those
            chars are not allowed here.'
          returned: success
          type: list
        service:
          description:
          - A reference to the BackendService resource if this rule is matched.
          returned: success
          type: dict
tests:
  description:
  - The list of expected URL mappings. Requests to update this UrlMap will succeed
    only if all of the test cases pass.
  returned: success
  type: complex
  contains:
    description:
      description:
      - Description of this test case.
      returned: success
      type: str
    host:
      description:
      - Host portion of the URL.
      returned: success
      type: str
    path:
      description:
      - Path portion of the URL.
      returned: success
      type: str
    service:
      description:
      - A reference to expected BackendService resource the given URL should be mapped
        to.
      returned: success
      type: dict

