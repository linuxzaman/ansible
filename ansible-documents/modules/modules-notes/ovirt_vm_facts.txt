> OVIRT_VM_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/ovirt/ovirt_vm_facts.py)

        Retrieve facts about one or more oVirt/RHV virtual machines.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- all_content
        If `true' all the attributes of the virtual machines should be included in the response.
        [Default: (null)]
        type: bool

= auth
        Dictionary with values needed to create HTTP/HTTPS connection to oVirt:
        `username'[`required'] - The name of the user, something like `admin@internal'. Default value is set by `OVIRT_USERNAME'
        environment variable.
        `password'[`required'] - The password of the user. Default value is set by `OVIRT_PASSWORD' environment variable.
        `url'- A string containing the API URL of the server, usually something like ``https://server.example.com/ovirt-engine/api'`.
        Default value is set by `OVIRT_URL' environment variable. Either `url' or `hostname' is required.
        `hostname' - A string containing the hostname of the server, usually something like ``server.example.com'`. Default value is set
        by `OVIRT_HOSTNAME' environment variable. Either `url' or `hostname' is required.
        `token' - Token to be used instead of login with username/password. Default value is set by `OVIRT_TOKEN' environment variable.
        `insecure' - A boolean flag that indicates if the server TLS certificate and host name should be checked.
        `ca_file' - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using
        these CA certificates. If ``ca_file'` parameter is not set, system wide CA certificate store is used. Default value is set by
        `OVIRT_CAFILE' environment variable.
        `kerberos' - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication.
        `headers' - Dictionary of HTTP headers to be added to each API call.

        type: dict

- case_sensitive
        If `true' performed search will take case into account.
        [Default: True]
        type: bool

- fetch_nested
        If `yes' the module will fetch additional data from the API.
        It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by
        specifying `nested_attributes'.
        [Default: (null)]
        type: bool
        version_added: 2.3

- max
        The maximum number of results to return.
        [Default: (null)]

- nested_attributes
        Specifies list of the attributes which should be fetched from the API.
        This parameter apply only when `fetch_nested' is `true'.
        [Default: (null)]
        type: list
        version_added: 2.3

- next_run
        Indicates if the returned result describes the virtual machine as it is currently running or if describes the virtual machine
        with the modifications that have already been performed but that will only come into effect when the virtual machine is
        restarted. By default the value is set by engine.
        [Default: (null)]
        type: bool
        version_added: 2.8

- pattern
        Search term which is accepted by oVirt/RHV search backend.
        For example to search VM X from cluster Y use following pattern: name=X and cluster=Y
        [Default: (null)]


NOTES:
      * This module creates a new top-level `ovirt_vms' fact, which contains a list of virtual machines.
      * In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can
        create the following task: pip: name=ovirt-engine-sdk-python version=4.3.0


REQUIREMENTS:  python >= 2.7, ovirt-engine-sdk-python >= 4.3.0

AUTHOR: Ondra Machacek (@machacekondra)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Examples don't contain auth parameter for simplicity,
# look at ovirt_auth module to see how to reuse authentication:

# Gather facts about all VMs which names start with C(centos) and
# belong to cluster C(west):
- ovirt_vm_facts:
    pattern: name=centos* and cluster=west
- debug:
    var: ovirt_vms

# Gather info about next run configuration of virtual machine named myvm
- ovirt_vm_facts:
    pattern: name=myvm
    next_run: true
- debug:
    var: ovirt_vms[0]


RETURN VALUES:

ovirt_vms:
    description: "List of dictionaries describing the VMs. VM attributes are mapped to dictionary keys,
                  all VMs attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/vm."
    returned: On success.
    type: list

