> RDS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/rds.py)

        Creates, deletes, or modifies rds instances.  When creating an instance it can be either a new instance or a read-only replica of
        an existing instance. This module has a dependency on python-boto >= 2.5. The 'promote' command requires boto >= 2.18.0. Certain
        features such as tags rely on boto.rds2 (boto >= 2.26.0)

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- apply_immediately
        Used only when command=modify.  If enabled, the modifications will be applied as soon as possible rather than waiting for the
        next preferred maintenance window.
        [Default: no]
        type: bool

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- backup_retention
        Number of days backups are retained.  Set to 0 to disable backups.  Default is 1 day.  Valid range: 0-35. Used only when
        command=create or command=modify.
        [Default: (null)]

- backup_window
        Backup window in format of hh24:mi-hh24:mi.  If not specified then a random backup window is assigned. Used only when
        command=create or command=modify.
        [Default: (null)]

- character_set_name
        Associate the DB instance with a specified character set. Used with command=create.
        [Default: (null)]
        version_added: 1.9

= command
        Specifies the action to take. The 'reboot' option is available starting at version 2.0
        (Choices: create, replicate, delete, facts, modify, promote, snapshot, reboot, restore)

- db_engine
        The type of database.  Used only when command=create.
        mariadb was added in version 2.2
        (Choices: mariadb, MySQL, oracle-se1, oracle-se2, oracle-se, oracle-ee, sqlserver-ee, sqlserver-se, sqlserver-ex, sqlserver-web,
        postgres, aurora)[Default: (null)]

- db_name
        Name of a database to create within the instance.  If not specified then no database is created. Used only when command=create.
        [Default: (null)]

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

- engine_version
        Version number of the database engine to use. Used only when command=create. If not specified then the current Amazon RDS default
        engine version is used
        [Default: (null)]

- force_failover
        Used only when command=reboot.  If enabled, the reboot is done using a MultiAZ failover.
        [Default: no]
        type: bool
        version_added: 2.0

- instance_name
        Database instance identifier. Required except when using command=facts or command=delete on just a snapshot
        [Default: (null)]

- instance_type
        The instance type of the database.  Must be specified when command=create. Optional when command=replicate, command=modify or
        command=restore. If not specified then the replica inherits the same instance type as the source instance.
        [Default: (null)]

- iops
        Specifies the number of IOPS for the instance.  Used only when command=create or command=modify. Must be an integer greater than
        1000.
        [Default: (null)]

- license_model
        The license model for this DB instance. Used only when command=create or command=restore.
        (Choices: license-included, bring-your-own-license, general-public-license, postgresql-license)[Default: (null)]

- maint_window
        Maintenance window in format of ddd:hh24:mi-ddd:hh24:mi.  (Example: Mon:22:00-Mon:23:15) If not specified then a random
        maintenance window is assigned. Used only when command=create or command=modify.
        [Default: (null)]

- multi_zone
        Specifies if this is a Multi-availability-zone deployment. Can not be used in conjunction with zone parameter. Used only when
        command=create or command=modify.
        [Default: (null)]
        type: bool

- new_instance_name
        Name to rename an instance to. Used only when command=modify.
        [Default: (null)]
        version_added: 1.5

- option_group
        The name of the option group to use.  If not specified then the default option group is used. Used only when command=create.
        [Default: (null)]

- parameter_group
        Name of the DB parameter group to associate with this instance.  If omitted then the RDS default DBParameterGroup will be used.
        Used only when command=create or command=modify.
        [Default: (null)]

- password
        Password for the master database username. Used only when command=create or command=modify.
        [Default: (null)]

- port
        Port number that the DB instance uses for connections. Used only when command=create or command=replicate.
        Prior to 2.0 it always defaults to null and the API would use 3306, it had to be set to other DB default values when not using
        MySql. Starting at 2.0 it automatically defaults to what is expected for each `db_engine'.
        [Default: 3306 for mysql, 1521 for Oracle, 1433 for SQL Server, 5432 for PostgreSQL.]

- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- publicly_accessible
        explicitly set whether the resource should be publicly accessible or not. Used with command=create, command=replicate. Requires
        boto >= 2.26.0
        [Default: (null)]
        version_added: 1.9

= region
        The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used.
        (Aliases: aws_region, ec2_region)
        type: str

- security_groups
        Comma separated list of one or more security groups.  Used only when command=create or command=modify.
        [Default: (null)]

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

- size
        Size in gigabytes of the initial storage for the DB instance. Used only when command=create or command=modify.
        [Default: (null)]

- snapshot
        Name of snapshot to take. When command=delete, if no snapshot name is provided then no snapshot is taken. If used with
        command=delete with no instance_name, the snapshot is deleted. Used with command=facts, command=delete or command=snapshot.
        [Default: (null)]

- source_instance
        Name of the database to replicate. Used only when command=replicate.
        [Default: (null)]

- subnet
        VPC subnet group.  If specified then a VPC instance is created. Used only when command=create.
        [Default: (null)]

- tags
        tags dict to apply to a resource. Used with command=create, command=replicate, command=restore. Requires boto >= 2.26.0
        [Default: (null)]
        version_added: 1.9

- upgrade
        Indicates that minor version upgrades should be applied automatically.
        Used only when command=create or command=modify or command=restore or command=replicate.
        [Default: no]
        type: bool

- username
        Master database username. Used only when command=create.
        [Default: (null)]

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5

- vpc_security_groups
        Comma separated list of one or more vpc security group ids. Also requires `subnet` to be specified. Used only when command=create
        or command=modify.
        [Default: (null)]

- wait
        When command=create, replicate, modify or restore then wait for the database to enter the 'available' state.  When command=delete
        wait for the database to be terminated.
        [Default: no]
        type: bool

- wait_timeout
        how long before wait gives up, in seconds
        [Default: 300]

- zone
        availability zone in which to launch the instance. Used only when command=create, command=replicate or command=restore.
        (Aliases: aws_zone, ec2_zone)[Default: (null)]


NOTES:
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, python >= 2.6

AUTHOR: Bruce Pennypacker (@bpennypacker), Will Thames (@willthames)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

# Basic mysql provisioning example
- rds:
    command: create
    instance_name: new-database
    db_engine: MySQL
    size: 10
    instance_type: db.m1.small
    username: mysql_admin
    password: 1nsecure
    tags:
      Environment: testing
      Application: cms

# Create a read-only replica and wait for it to become available
- rds:
    command: replicate
    instance_name: new-database-replica
    source_instance: new_database
    wait: yes
    wait_timeout: 600

# Delete an instance, but create a snapshot before doing so
- rds:
    command: delete
    instance_name: new-database
    snapshot: new_database_snapshot

# Get facts about an instance
- rds:
    command: facts
    instance_name: new-database
  register: new_database_facts

# Rename an instance and wait for the change to take effect
- rds:
    command: modify
    instance_name: new-database
    new_instance_name: renamed-database
    wait: yes

# Reboot an instance and wait for it to become available again
- rds:
    command: reboot
    instance_name: database
    wait: yes

# Restore a Postgres db instance from a snapshot, wait for it to become available again, and
#  then modify it to add your security group. Also, display the new endpoint.
#  Note that the "publicly_accessible" option is allowed here just as it is in the AWS CLI
- local_action:
     module: rds
     command: restore
     snapshot: mypostgres-snapshot
     instance_name: MyNewInstanceName
     region: us-west-2
     zone: us-west-2b
     subnet: default-vpc-xx441xxx
     publicly_accessible: yes
     wait: yes
     wait_timeout: 600
     tags:
         Name: pg1_test_name_tag
  register: rds

- local_action:
     module: rds
     command: modify
     instance_name: MyNewInstanceName
     region: us-west-2
     vpc_security_groups: sg-xxx945xx

- debug:
    msg: "The new db endpoint is {{ rds.instance.endpoint }}"


RETURN VALUES:

instance:
    description: the rds instance
    returned: always
    type: complex
    contains:
        engine:
            description: the name of the database engine
            returned: when RDS instance exists
            type: string
            sample: "oracle-se"
        engine_version:
            description: the version of the database engine
            returned: when RDS instance exists
            type: string
            sample: "11.2.0.4.v6"
        license_model:
            description: the license model information
            returned: when RDS instance exists
            type: string
            sample: "bring-your-own-license"
        character_set_name:
            description: the name of the character set that this instance is associated with
            returned: when RDS instance exists
            type: string
            sample: "AL32UTF8"
        allocated_storage:
            description: the allocated storage size in gigabytes (GB)
            returned: when RDS instance exists
            type: string
            sample: "100"
        publicly_accessible:
            description: the accessibility options for the DB instance
            returned: when RDS instance exists
            type: boolean
            sample: "true"
        latest_restorable_time:
            description: the latest time to which a database can be restored with point-in-time restore
            returned: when RDS instance exists
            type: string
            sample: "1489707802.0"
        secondary_availability_zone:
            description: the name of the secondary AZ for a DB instance with multi-AZ support
            returned: when RDS instance exists and is multy-AZ
            type: string
            sample: "eu-west-1b"
        backup_window:
            description: the daily time range during which automated backups are created if automated backups are enabled
            returned: when RDS instance exists and automated backups are enabled
            type: string
            sample: "03:00-03:30"
        auto_minor_version_upgrade:
            description: indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window
            returned: when RDS instance exists
            type: boolean
            sample: "true"
        read_replica_source_dbinstance_identifier:
            description: the identifier of the source DB instance if this RDS instance is a read replica
            returned: when read replica RDS instance exists
            type: string
            sample: "null"
        db_name:
            description: the name of the database to create when the DB instance is created
            returned: when RDS instance exists
            type: string
            sample: "ASERTG"
        endpoint:
            description: the endpoint uri of the database instance
            returned: when RDS instance exists
            type: string
            sample: "my-ansible-database.asdfaosdgih.us-east-1.rds.amazonaws.com"
        port:
            description: the listening port of the database instance
            returned: when RDS instance exists
            type: int
            sample: 3306
        parameter_groups:
            description: the list of DB parameter groups applied to this RDS instance
            returned: when RDS instance exists and parameter groups are defined
            type: complex
            contains:
                parameter_apply_status:
                    description: the status of parameter updates
                    returned: when RDS instance exists
                    type: string
                    sample: "in-sync"
                parameter_group_name:
                    description: the name of the DP parameter group
                    returned: when RDS instance exists
                    type: string
                    sample: "testawsrpprodb01spfile-1ujg7nrs7sgyz"
        option_groups:
            description: the list of option group memberships for this RDS instance
            returned: when RDS instance exists
            type: complex
            contains:
                option_group_name:
                    description: the option group name for this RDS instance
                    returned: when RDS instance exists
                    type: string
                    sample: "default:oracle-se-11-2"
                status:
                    description: the status of the RDS instance's option group membership
                    returned: when RDS instance exists
                    type: string
                    sample: "in-sync"
        pending_modified_values:
            description: a dictionary of changes to the RDS instance that are pending
            returned: when RDS instance exists
            type: complex
            contains:
                db_instance_class:
                    description: the new DB instance class for this RDS instance that will be applied or is in progress
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                db_instance_identifier:
                    description: the new DB instance identifier this RDS instance that will be applied or is in progress
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                allocated_storage:
                    description: the new allocated storage size for this RDS instance that will be applied or is in progress
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                backup_retention_period:
                    description: the pending number of days for which automated backups are retained
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                engine_version:
                    description: indicates the database engine version
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                iops:
                    description: the new provisioned IOPS value for this RDS instance that will be applied or is being applied
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                master_user_password:
                    description: the pending or in-progress change of the master credentials for this RDS instance
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                multi_az:
                    description: indicates that the single-AZ RDS instance is to change to a multi-AZ deployment
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
                port:
                    description: specifies the pending port for this RDS instance
                    returned: when RDS instance exists
                    type: string
                    sample: "null"
        db_subnet_groups:
            description: information on the subnet group associated with this RDS instance
            returned: when RDS instance exists
            type: complex
            contains:
                description:
                    description: the subnet group associated with the DB instance
                    returned: when RDS instance exists
                    type: string
                    sample: "Subnets for the UAT RDS SQL DB Instance"
                name:
                    description: the name of the DB subnet group
                    returned: when RDS instance exists
                    type: string
                    sample: "samplesubnetgrouprds-j6paiqkxqp4z"
                status:
                    description: the status of the DB subnet group
                    returned: when RDS instance exists
                    type: string
                    sample: "complete"
                subnets:
                    description: the description of the DB subnet group
                    returned: when RDS instance exists
                    type: complex
                    contains:
                        availability_zone:
                            description: subnet availability zone information
                            returned: when RDS instance exists
                            type: complex
                            contains:
                                name:
                                    description: avaialbility zone
                                    returned: when RDS instance exists
                                    type: string
                                    sample: "eu-west-1b"
                                provisioned_iops_capable:
                                    description: whether provisioned iops are available in AZ subnet
                                    returned: when RDS instance exists
                                    type: boolean
                                    sample: "false"
                        identifier:
                            description: the identifier of the subnet
                            returned: when RDS instance exists
                            type: string
                            sample: "subnet-3fdba63e"
                        status:
                            description: the status of the subnet
                            returned: when RDS instance exists
                            type: string
                            sample: "active"

