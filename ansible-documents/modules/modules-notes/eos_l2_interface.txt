> EOS_L2_INTERFACE    (/usr/lib/python2.7/dist-packages/ansible/modules/network/eos/eos_l2_interface.py)

        This module provides declarative management of L2 interfaces on Arista EOS network devices.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- access_vlan
        Configure given VLAN in access port. If `mode=access', used as the access VLAN ID.
        [Default: (null)]

- aggregate
        List of Layer-2 interface definitions.
        [Default: (null)]

- auth_pass
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes' with `become_pass'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' is false, then this
        argument does nothing. If the value is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS' will
        be used instead.
        [Default: (null)]
        type: str

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

- mode
        Mode in which interface needs to be configured.
        (Choices: access, trunk)[Default: (null)]

= name
        Name of the interface
        (Aliases: interface)

- native_vlan
        Native VLAN to be configured in trunk port. If `mode=trunk', used as the trunk native VLAN ID.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `eapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `eapi'.  The port value will default to the
              appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports. If the value is not
              specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - eapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: true
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=eapi'.  If
              the transport argument is not eapi, this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the eAPI
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not eapi, this value is ignored.
            type: bool
        
        type: dict

- state
        Manage the state of the Layer-2 Interface configuration.
        (Choices: present, absent, unconfigured)[Default: present]

- trunk_allowed_vlans
        List of allowed VLANs in a given trunk port. If `mode=trunk', these are the ONLY VLANs that will be configured on the trunk, i.e.
        `2-10,15'.
        (Aliases: trunk_vlans)[Default: (null)]


NOTES:
      * Tested against EOS 4.15
      * For information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Arista EOS devices see the `Arista integration page
        <https://www.ansible.com/ansible-arista-networks>`_.


AUTHOR: Ricardo Carrillo Cruz (@rcarrillocruz)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: Ensure Ethernet1 does not have any switchport
  eos_l2_interface:
    name: Ethernet1
    state: absent

- name: Ensure Ethernet1 is configured for access vlan 20
  eos_l2_interface:
    name: Ethernet1
    mode: access
    access_vlan: 20

- name: Ensure Ethernet1 is a trunk port and ensure 2-50 are being tagged (doesn't mean others aren't also being tagged)
  eos_l2_interface:
    name: Ethernet1
    mode: trunk
    native_vlan: 10
    trunk_allowed_vlans: 2-50

- name: Set switchports on aggregate
  eos_l2_interface:
    aggregate:
      - { name: ethernet1, mode: access, access_vlan: 20}
      - { name: ethernet2, mode: trunk, native_vlan: 10}


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always.
  type: list
  sample:
    - interface ethernet1
    - switchport access vlan 20

