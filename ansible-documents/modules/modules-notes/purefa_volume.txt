> PUREFA_VOLUME    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/purestorage/purefa_volume.py)

        Create, delete or extend the capacity of a volume on Pure Storage FlashArray.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= api_token
        FlashArray API token for admin privileged user.

        type: str

- eradicate
        Define whether to eradicate the volume on delete or leave in trash.
        [Default: no]
        type: bool

= fa_url
        FlashArray management IPv4 address or Hostname.

        type: str

= name
        The name of the volume.

        type: str

- overwrite
        Define whether to overwrite a target volume if it already exisits.
        [Default: no]
        type: bool

- qos
        Bandwidth limit for volume in M or G units. M will set MB/s G will set GB/s To clear an existing Qos setting using 0 (zero)
        [Default: (null)]
        type: str
        version_added: 2.8

- size
        Volume size in M, G, T or P units.
        [Default: (null)]
        type: str

- state
        Define whether the volume should exist or not.
        (Choices: absent, present)[Default: present]
        type: str

- target
        The name of the target volume, if copying.
        [Default: (null)]
        type: str


NOTES:
      * This module requires the `purestorage' Python library
      * You must set `PUREFA_URL' and `PUREFA_API' environment variables if `fa_url' and `api_token' arguments are not passed to
        the module directly


REQUIREMENTS:  python >= 2.7, purestorage

AUTHOR: Pure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create new volume named foo with a QoS limit
  purefa_volume:
    name: foo
    size: 1T
    qos: 58M
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: present

- name: Extend the size of an existing volume named foo
  purefa_volume:
    name: foo
    size: 2T
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: present

- name: Delete and eradicate volume named foo
  purefa_volume:
    name: foo
    eradicate: yes
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: absent

- name: Create clone of volume bar named foo
  purefa_volume:
    name: foo
    target: bar
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: present

- name: Overwrite volume bar with volume foo
  purefa_volume:
    name: foo
    target: bar
    overwrite: yes
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: present

- name: Clear volume QoS from volume foo
  purefa_volume:
    name: foo
    qos: 0
    fa_url: 10.10.10.2
    api_token: e31060a7-21fc-e277-6240-25983c6c4592
    state: present


RETURN VALUES:

volume:
    description: A dictionary describing the changed volume.  Only some
        attributes below will be returned with various actions.
    type: dict
    returned: success
    contains:
        source:
            description: Volume name of source volume used for volume copy
            type: str
        serial:
            description: Volume serial number
            type: str
            sample: '361019ECACE43D83000120A4'
        created:
            description: Volume creation time
            type: str
            sample: '2019-03-13T22:49:24Z'
        name:
            description: Volume name
            type: str
        size:
            description: Volume size in bytes
            type: int

