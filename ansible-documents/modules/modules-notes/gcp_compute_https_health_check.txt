> GCP_COMPUTE_HTTPS_HEALTH_CHECK    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_https_health_check.py)

        An HttpsHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTPS.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- check_interval_sec
        How often (in seconds) to send a health check. The default value is 5 seconds.
        [Default: (null)]

- description
        An optional description of this resource. Provide this property when you create the resource.
        [Default: (null)]

- healthy_threshold
        A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
        [Default: (null)]

- host
        The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which
        this health check is performed will be used.
        [Default: (null)]

= name
        Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
        means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
        except the last character, which cannot be a dash.


- port
        The TCP port number for the HTTPS health check request.
        The default value is 80.
        [Default: (null)]

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- request_path
        The request path of the HTTPS health check request.
        The default value is /.
        [Default: (null)]

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- timeout_sec
        How long (in seconds) to wait before claiming failure.
        The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
        (Aliases: timeout_seconds)[Default: (null)]

- unhealthy_threshold
        A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
        [Default: (null)]


NOTES:
      * API Reference: https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks
      * Adding Health Checks: https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a https health check
  gcp_compute_https_health_check:
    name: test_object
    healthy_threshold: 10
    port: 8080
    timeout_sec: 2
    unhealthy_threshold: 5
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

checkIntervalSec:
  description:
  - How often (in seconds) to send a health check. The default value is 5 seconds.
  returned: success
  type: int
creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
description:
  description:
  - An optional description of this resource. Provide this property when you create
    the resource.
  returned: success
  type: str
healthyThreshold:
  description:
  - A so-far unhealthy instance will be marked healthy after this many consecutive
    successes. The default value is 2.
  returned: success
  type: int
host:
  description:
  - The value of the host header in the HTTPS health check request. If left empty
    (default value), the public IP on behalf of which this health check is performed
    will be used.
  returned: success
  type: str
id:
  description:
  - The unique identifier for the resource. This identifier is defined by the server.
  returned: success
  type: int
name:
  description:
  - Name of the resource. Provided by the client when the resource is created. The
    name must be 1-63 characters long, and comply with RFC1035. Specifically, the
    name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str
port:
  description:
  - The TCP port number for the HTTPS health check request.
  - The default value is 80.
  returned: success
  type: int
requestPath:
  description:
  - The request path of the HTTPS health check request.
  - The default value is /.
  returned: success
  type: str
timeoutSec:
  description:
  - How long (in seconds) to wait before claiming failure.
  - The default value is 5 seconds. It is invalid for timeoutSec to have greater value
    than checkIntervalSec.
  returned: success
  type: int
unhealthyThreshold:
  description:
  - A so-far healthy instance will be marked unhealthy after this many consecutive
    failures. The default value is 2.
  returned: success
  type: int

