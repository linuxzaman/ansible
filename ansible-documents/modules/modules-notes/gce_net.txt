> GCE_NET    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gce_net.py)

        This module can create and destroy Google Compute Engine networks and firewall rules
        https://cloud.google.com/compute/docs/networking. The `name' parameter is reserved for referencing a network while the `fwname'
        parameter is used to reference firewall rules. IPv4 Address ranges must be specified using the CIDR http://en.wikipedia.org/wiki
        /Classless_Inter-Domain_Routing format. Full install/configuration instructions for the gce* modules can be found in the comments
        of ansible/test/gce_tests.py.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- allowed
        the protocol:ports to allow (`tcp:80' or `tcp:80,443' or `tcp:80-800;udp:1-25') this parameter is mandatory when creating or
        updating a firewall rule
        [Default: (null)]

- credentials_file
        path to the JSON file associated with the service account email
        [Default: (null)]
        version_added: 2.1.0

- fwname
        name of the firewall rule
        (Aliases: fwrule)[Default: (null)]

- ipv4_range
        the IPv4 address range in CIDR notation for the network this parameter is not mandatory when you specified existing network in
        name parameter, but when you create new network, this parameter is mandatory
        (Aliases: cidr)[Default: (null)]

- mode
        network mode for Google Cloud `legacy' indicates a network with an IP address range; `auto' automatically generates subnetworks
        in different regions; `custom' uses networks to group subnets of user specified IP address ranges
        https://cloud.google.com/compute/docs/networking#network_types
        (Choices: legacy, auto, custom)[Default: legacy]
        version_added: 2.2

- name
        name of the network
        [Default: (null)]

- pem_file
        path to the pem file associated with the service account email This option is deprecated. Use `credentials_file'.
        [Default: (null)]
        version_added: 1.6

- project_id
        your GCE project ID
        [Default: (null)]
        version_added: 1.6

- service_account_email
        service account email
        [Default: (null)]
        version_added: 1.6

- src_range
        the source IPv4 address range in CIDR notation
        (Aliases: src_cidr)[Default: []]

- src_tags
        the source instance tags for creating a firewall rule
        [Default: []]

- state
        desired state of the network or firewall
        (Choices: active, present, absent, deleted)[Default: present]

- subnet_desc
        description of subnet to create
        [Default: (null)]
        version_added: 2.2

- subnet_name
        name of subnet to create
        [Default: (null)]
        version_added: 2.2

- subnet_region
        region of subnet to create
        [Default: (null)]
        version_added: 2.2

- target_tags
        the target instance tags for creating a firewall rule
        [Default: []]
        version_added: 1.9


REQUIREMENTS:  python >= 2.6, apache-libcloud >= 0.13.3, >= 0.17.0 if using JSON credentials

AUTHOR: Eric Johnson (@erjohnso) <erjohnso@google.com>, Tom Melendez (@supertom) <supertom@google.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create a 'legacy' Network
- name: Create Legacy Network
  gce_net:
    name: legacynet
    ipv4_range: '10.24.17.0/24'
    mode: legacy
    state: present

# Create an 'auto' Network
- name: Create Auto Network
  gce_net:
    name: autonet
    mode: auto
    state: present

# Create a 'custom' Network
- name: Create Custom Network
  gce_net:
    name: customnet
    mode: custom
    subnet_name: "customsubnet"
    subnet_region: us-east1
    ipv4_range: '10.240.16.0/24'
    state: "present"

# Create Firewall Rule with Source Tags
- name: Create Firewall Rule w/Source Tags
  gce_net:
    name: default
    fwname: "my-firewall-rule"
    allowed: tcp:80
    state: "present"
    src_tags: "foo,bar"

# Create Firewall Rule with Source Range
- name: Create Firewall Rule w/Source Range
  gce_net:
    name: default
    fwname: "my-firewall-rule"
    allowed: tcp:80
    state: "present"
    src_range: ['10.1.1.1/32']

# Create Custom Subnetwork
- name: Create Custom Subnetwork
  gce_net:
    name: privatenet
    mode: custom
    subnet_name: subnet_example
    subnet_region: us-central1
    ipv4_range: '10.0.0.0/16'


RETURN VALUES:

allowed:
    description: Rules (ports and protocols) specified by this firewall rule.
    returned: When specified
    type: str
    sample: "tcp:80;icmp"

fwname:
    description: Name of the firewall rule.
    returned: When specified
    type: str
    sample: "my-fwname"

ipv4_range:
    description: IPv4 range of the specified network or subnetwork.
    returned: when specified or when a subnetwork is created
    type: str
    sample: "10.0.0.0/16"

name:
    description: Name of the network.
    returned: always
    type: str
    sample: "my-network"

src_range:
    description: IP address blocks a firewall rule applies to.
    returned: when specified
    type: list
    sample: [ '10.1.1.12/8' ]

src_tags:
    description: Instance Tags firewall rule applies to.
    returned: when specified while creating a firewall rule
    type: list
    sample: [ 'foo', 'bar' ]

state:
    description: State of the item operated on.
    returned: always
    type: str
    sample: "present"

subnet_name:
    description: Name of the subnetwork.
    returned: when specified or when a subnetwork is created
    type: str
    sample: "my-subnetwork"

subnet_region:
    description: Region of the specified subnet.
    returned: when specified or when a subnetwork is created
    type: str
    sample: "us-east1"

target_tags:
    description: Instance Tags with these tags receive traffic allowed by firewall rule.
    returned: when specified while creating a firewall rule
    type: list
    sample: [ 'foo', 'bar' ]

