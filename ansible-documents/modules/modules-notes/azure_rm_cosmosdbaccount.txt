> AZURE_RM_COSMOSDBACCOUNT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/azure/azure_rm_cosmosdbaccount.py)

        Create, update and delete instance of Azure Database Account.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- ad_user
        Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]
        type: str

- adfs_authority_url
        Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
        [Default: (null)]
        type: str
        version_added: 2.6

- api_profile
        Selects an API profile to use when communicating with Azure services. Default value of `latest' is appropriate for public clouds;
        future values will allow use with Azure Stack.
        [Default: latest]
        type: str
        version_added: 2.5

- append_tags
        Use to control if tags field is canonical or just appends to existing tags.
        When canonical, any tags not found in the tags parameter will be removed from the object's metadata.
        [Default: True]
        type: bool

- auth_source
        Controls the source of the credentials to use for authentication.
        If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to `auto' if variable is not defined.
        `auto' will follow the default precedence of module parameters -> environment variables -> default profile in credential file
        `~/.azure/credentials'.
        When set to `cli', the credentials will be sources from the default Azure CLI profile.
        Can also be set via the `ANSIBLE_AZURE_AUTH_SOURCE' environment variable.
        When set to `msi', the host machine must be an azure resource with an enabled MSI extension. `subscription_id' or the environment
        variable `AZURE_SUBSCRIPTION_ID' can be used to identify the subscription ID if the resource is granted access to more than one
        subscription, otherwise the first subscription is chosen.
        The `msi' was added in Ansible 2.6.
        (Choices: auto, cli, credential_file, env, msi)[Default: (null)]
        type: str
        version_added: 2.5

- cert_validation_mode
        Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate,
        but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing `ignore'. Can
        also be set via credential file profile or the `AZURE_CERT_VALIDATION' environment variable.
        (Choices: ignore, validate)[Default: (null)]
        type: str
        version_added: 2.5

- client_id
        Azure client ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- cloud_environment
        For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg,
        `AzureChinaCloud', `AzureUSGovernment'), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via
        credential file profile or the `AZURE_CLOUD_ENVIRONMENT' environment variable.
        [Default: AzureCloud]
        type: str
        version_added: 2.4

- consistency_policy
        The consistency policy for the Cosmos DB account.
        [Default: (null)]
        suboptions:
          default_consistency_level:
            choices:
            - eventual
            - session
            - bounded_staleness
            - strong
            - consistent_prefix
            description:
            - The default consistency level and configuration settings of the Cosmos DB account.
            - Required when `state' is `present'.
          max_interval_in_seconds:
            description:
            - When used with the Bounded Staleness consistency level, this value represents
              the time amount of staleness (in seconds) tolerated. Accepted range for this
              value is 5 - 86400. Required when `default_consistency_policy' is set to `bounded_staleness'.
            type: int
          max_staleness_prefix:
            description:
            - When used with the Bounded Staleness consistency level, this value represents
              the number of stale requests tolerated. Accepted range for this value is 1 -
              2,147,483,647. Required when `default_consistency_policy' is set to `bounded_staleness'.
            type: int
        

- database_account_offer_type
        Database account offer type, for example `Standard'
        Required when `state' is `present'.
        [Default: (null)]

- enable_automatic_failover
        Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic
        failover will result in a new write region for the account and is chosen based on the failover priorities configured for the
        account.
        [Default: (null)]
        type: bool

- enable_cassandra
        Enable Cassandra.
        [Default: (null)]
        type: bool

- enable_gremlin
        Enable Gremlin.
        [Default: (null)]
        type: bool

- enable_multiple_write_locations
        Enables the account to write in multiple locations
        [Default: (null)]
        type: bool

- enable_table
        Enable Table.
        [Default: (null)]
        type: bool

- geo_rep_locations
        An array that contains the georeplication locations enabled for the Cosmos DB account.
        Required when `state' is `present'.
        [Default: (null)]
        suboptions:
          failover_priority:
            description:
            - The failover priority of the region. A failover priority of 0 indicates a write
              region. The maximum value for a failover priority = (total number of regions
              - 1). Failover priority values must be unique for each of the regions in which
              the database account exists.
            type: int
          name:
            description:
            - The name of the region.
        
        type: list

- ip_range_filter
        Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the
        allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any
        spaces.
        [Default: (null)]

- is_virtual_network_filter_enabled
        Flag to indicate whether to enable/disable Virtual Network ACL rules.
        [Default: (null)]
        type: bool

- kind
        Indicates the type of database account. This can only be set at database account creation.
        (Choices: global_document_db, mongo_db, parse)[Default: (null)]

- location
        The location of the resource group to which the resource belongs.
        Required when `state' is `present'.
        [Default: (null)]

= name
        Cosmos DB database account name.


- password
        Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]

- profile
        Security profile found in ~/.azure/credentials file.
        [Default: (null)]
        type: str

= resource_group
        Name of an Azure resource group.


- secret
        Azure client secret. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- state
        Assert the state of the Database Account.
        Use `present' to create or update an Database Account and `absent' to delete it.
        (Choices: absent, present)[Default: present]

- subscription_id
        Your Azure subscription Id.
        [Default: (null)]
        type: str

- tags
        Dictionary of string:string pairs to assign as metadata to the object.
        Metadata tags on the object will be updated with any provided values.
        To remove tags set append_tags option to false.
        [Default: (null)]
        type: dict

- tenant
        Azure tenant ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- virtual_network_rules
        List of Virtual Network ACL rules configured for the Cosmos DB account.
        [Default: (null)]
        suboptions:
          ignore_missing_vnet_service_endpoint:
            description:
            - Create Cosmos DB account without existing virtual network service endpoint.
            type: bool
          subnet:
            description:
            - It can be a string containing resource id of a subnet.
            - It can be a dictionary containing 'resource_group', 'virtual_network_name' and
              'subnet_name'
        
        type: list


NOTES:
      * For authentication with Azure you can pass parameters, set environment variables, use a profile stored in
        ~/.azure/credentials, or log in before you run your tasks or playbook with `az login'.
      * Authentication is also possible using a service principal or Active Directory user.
      * To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables
        AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
      * To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the
        environment.
      * Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and
        the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also
        possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.


SEE ALSO:
      * Sign in with Azure CLI
           How to authenticate using the `az login' command.
           https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest


REQUIREMENTS:  python >= 2.7, azure >= 2.0.0

AUTHOR: Zim Kalinowski (@zikalino)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create Cosmos DB Account - min
    azure_rm_cosmosdbaccount:
      resource_group: myResourceGroup
      name: myDatabaseAccount
      location: westus
      geo_rep_locations:
        - name: southcentralus
          failover_priority: 0
      database_account_offer_type: Standard

  - name: Create Cosmos DB Account - max
    azure_rm_cosmosdbaccount:
      resource_group: myResourceGroup
      name: myDatabaseAccount
      location: westus
      kind: mongo_db
      geo_rep_locations:
        - name: southcentralus
          failover_priority: 0
      database_account_offer_type: Standard
      ip_range_filter: 10.10.10.10
      enable_multiple_write_locations: yes
      virtual_network_rules:
        - subnet: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVi
                   rtualNetwork/subnets/mySubnet"
      consistency_policy:
        default_consistency_level: bounded_staleness
        max_staleness_prefix: 10
        max_interval_in_seconds: 1000


RETURN VALUES:

id:
    description:
        - The unique resource identifier of the database account.
    returned: always
    type: str
    sample: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/myData
             baseAccount"

