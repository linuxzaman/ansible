> WIN_COMMAND    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_command.py)

        The `win_command' module takes the command name followed by a list of space-delimited arguments. The given command will be
        executed on all selected nodes. It will not be processed through the shell, so variables like `$env:HOME' and operations like
        `"<"', `">"', `"|"', and `";"' will not work (use the [win_shell] module if you need these features). For non-Windows targets,
        use the [command] module instead.

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- chdir
        Set the specified path as the current working directory before executing a command.
        [Default: (null)]
        type: path

- creates
        A path or path filter pattern; when the referenced path exists on the target host, the task will be skipped.
        [Default: (null)]
        type: path

= free_form
        The `win_command' module takes a free form command to run.
        There is no parameter actually named 'free form'. See the examples!

        type: str

- removes
        A path or path filter pattern; when the referenced path *does not* exist on the target host, the task will be skipped.
        [Default: (null)]
        type: path

- stdin
        Set the stdin of the command directly to the specified value.
        [Default: (null)]
        type: str
        version_added: 2.5


NOTES:
      * If you want to run a command through a shell (say you are using `<', `>', `|', etc), you actually want the [win_shell]
        module instead. The `win_command' module is much more secure as it's not affected by the user's environment.
      * `creates', `removes', and `chdir' can be specified after the command. For instance, if you only want to run a command if a
        certain file does not exist, use this.


SEE ALSO:
      * Module command
           The official documentation on the command module.
           https://docs.ansible.com/ansible/latest/modules/command_module.html
      * Module psexec
           The official documentation on the psexec module.
           https://docs.ansible.com/ansible/latest/modules/psexec_module.html
      * Module raw
           The official documentation on the raw module.
           https://docs.ansible.com/ansible/latest/modules/raw_module.html
      * Module win_psexec
           The official documentation on the win_psexec module.
           https://docs.ansible.com/ansible/latest/modules/win_psexec_module.html
      * Module win_shell
           The official documentation on the win_shell module.
           https://docs.ansible.com/ansible/latest/modules/win_shell_module.html


AUTHOR: Matt Davis (@nitzmahone)
        METADATA:
          status:
          - preview
          supported_by: core
        

EXAMPLES:

- name: Save the result of 'whoami' in 'whoami_out'
  win_command: whoami
  register: whoami_out

- name: Run command that only runs if folder exists and runs from a specific folder
  win_command: wbadmin -backupTarget:C:\backup\
  args:
    chdir: C:\somedir\
    creates: C:\backup\

- name: Run an executable and send data to the stdin for the executable
  win_command: powershell.exe -
  args:
    stdin: Write-Host test


RETURN VALUES:

msg:
    description: changed
    returned: always
    type: bool
    sample: true
start:
    description: The command execution start time
    returned: always
    type: str
    sample: '2016-02-25 09:18:26.429568'
end:
    description: The command execution end time
    returned: always
    type: str
    sample: '2016-02-25 09:18:26.755339'
delta:
    description: The command execution delta time
    returned: always
    type: str
    sample: '0:00:00.325771'
stdout:
    description: The command standard output
    returned: always
    type: str
    sample: 'Clustering node rabbit@slave1 with rabbit@master ...'
stderr:
    description: The command standard error
    returned: always
    type: str
    sample: 'ls: cannot access foo: No such file or directory'
cmd:
    description: The command executed by the task
    returned: always
    type: str
    sample: 'rabbitmqctl join_cluster rabbit@master'
rc:
    description: The command return code (0 means success)
    returned: always
    type: int
    sample: 0
stdout_lines:
    description: The command standard output split in lines
    returned: always
    type: list
    sample: [u'Clustering node rabbit@slave1 with rabbit@master ...']

