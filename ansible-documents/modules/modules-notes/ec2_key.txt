> EC2_KEY    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/amazon/ec2_key.py)

        create or delete an ec2 key pair.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- aws_access_key
        AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is
        used.
        (Aliases: ec2_access_key, access_key)[Default: (null)]
        type: str

- aws_secret_key
        AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is
        used.
        (Aliases: ec2_secret_key, secret_key)[Default: (null)]
        type: str

- debug_botocore_endpoint_logs
        Use a botocore.endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, outputing
        the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during
        a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used.
        [Default: no]
        type: bool
        version_added: 2.8

- ec2_url
        Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where
        region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL
        environment variable, if any, is used.
        [Default: (null)]
        type: str

- force
        Force overwrite of already existing key pair if key has changed.
        [Default: True]
        type: bool
        version_added: 2.3

- key_material
        Public key material.
        [Default: (null)]

= name
        Name of the key pair.


- profile
        Uses a boto profile. Only works with boto >= 2.24.0.
        [Default: (null)]
        type: str
        version_added: 1.6

- region
        The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See
        http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region
        (Aliases: aws_region, ec2_region)[Default: (null)]
        type: str

- security_token
        AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used.
        (Aliases: access_token)[Default: (null)]
        type: str
        version_added: 1.6

- state
        create or delete keypair
        (Choices: present, absent)[Default: present]

- validate_certs
        When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
        [Default: True]
        type: bool
        version_added: 1.5

- wait
        Wait for the specified action to complete before returning. This option has no effect since version 2.5.
        [Default: False]
        type: bool
        version_added: 1.6

- wait_timeout
        How long before wait gives up, in seconds. This option has no effect since version 2.5.
        [Default: 300]
        version_added: 1.6


NOTES:
      * If parameters are not set within the module, the following environment variables can be used in decreasing order of
        precedence `AWS_URL' or `EC2_URL', `AWS_ACCESS_KEY_ID' or `AWS_ACCESS_KEY' or `EC2_ACCESS_KEY', `AWS_SECRET_ACCESS_KEY' or
        `AWS_SECRET_KEY' or `EC2_SECRET_KEY', `AWS_SECURITY_TOKEN' or `EC2_SECURITY_TOKEN', `AWS_REGION' or `EC2_REGION'
      * Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See
        https://boto.readthedocs.io/en/latest/boto_config_tut.html
      * `AWS_REGION' or `EC2_REGION' can be typically be used to specify the AWS region, when required, but this can also be
        configured in the boto config file


REQUIREMENTS:  boto, boto3, python >= 2.6

AUTHOR: Vincent Viallet (@zbal), Prasad Katti (@prasadkatti)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

# Note: These examples do not set authentication details, see the AWS Guide for details.

- name: create a new ec2 key pair, returns generated private key
  ec2_key:
    name: my_keypair

- name: create key pair using provided key_material
  ec2_key:
    name: my_keypair
    key_material: 'ssh-rsa AAAAxyz...== me@example.com'

- name: create key pair using key_material obtained using 'file' lookup plugin
  ec2_key:
    name: my_keypair
    key_material: "{{ lookup('file', '/path/to/public_key/id_rsa.pub') }}"

# try creating a key pair with the name of an already existing keypair
# but don't overwrite it even if the key is different (force=false)
- name: try creating a key pair with name of an already existing keypair
  ec2_key:
    name: my_existing_keypair
    key_material: 'ssh-rsa AAAAxyz...== me@example.com'
    force: false

- name: remove key pair by name
  ec2_key:
    name: my_keypair
    state: absent


RETURN VALUES:

changed:
  description: whether a keypair was created/deleted
  returned: always
  type: bool
  sample: true
msg:
  description: short message describing the action taken
  returned: always
  type: str
  sample: key pair created
key:
  description: details of the keypair (this is set to null when state is absent)
  returned: always
  type: complex
  contains:
    fingerprint:
      description: fingerprint of the key
      returned: when state is present
      type: str
      sample: 'b0:22:49:61:d9:44:9d:0c:7e:ac:8a:32:93:21:6c:e8:fb:59:62:43'
    name:
      description: name of the keypair
      returned: when state is present
      type: str
      sample: my_keypair
    private_key:
      description: private key of a newly created keypair
      returned: when a new keypair is created by AWS (key_material is not provided)
      type: str
      sample: '-----BEGIN RSA PRIVATE KEY-----
        MIIEowIBAAKC...
        -----END RSA PRIVATE KEY-----'

