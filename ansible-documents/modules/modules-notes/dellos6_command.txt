> DELLOS6_COMMAND    (/usr/lib/python2.7/dist-packages/ansible/modules/network/dellos6/dellos6_command.py)

        Sends arbitrary commands to a Dell OS6 node and returns the results read from the device. This module includes an argument that
        will cause the module to wait for a specific condition before returning or timing out if the condition is not met. This module
        does not support running commands in configuration mode. Please use [dellos6_config] to configure Dell OS6 devices.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= commands
        List of commands to send to the remote dellos6 device over the configured provider. The resulting output from the command is
        returned. If the `wait_for' argument is provided, the module is not returned until the condition is satisfied or the number of
        retries has expired.

        type: list

- interval
        Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions,
        the interval indicates how long to wait before trying the command again.
        [Default: 1]
        type: int

- match
        The `match' argument is used in conjunction with the `wait_for' argument to specify the match policy.  Valid values are `all' or
        `any'.  If the value is set to `all' then all conditionals in the wait_for must be satisfied.  If the value is set to `any' then
        only one of the values must be satisfied.
        (Choices: all, any)[Default: all]
        type: str
        version_added: 2.5

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Password to authenticate the SSH session to the remote device. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Path to an ssh key used to authenticate the SSH session to the remote device.  If
              the value is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies idle timeout (in seconds) for the connection. Useful if the console
              freezes before continuing. For example when saving configurations.
            type: int
          username:
            description:
            - User to authenticate the SSH session to the remote device. If the value is not
              specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- retries
        Specifies the number of retries a command should be tried before it is considered failed. The command is run on the target device
        every retry and evaluated against the `wait_for' conditions.
        [Default: 10]
        type: int

- wait_for
        List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving
        forward. If the conditional is not true within the configured number of `retries', the task fails. See examples.
        [Default: (null)]
        type: list
        version_added: 2.2


NOTES:
      * For more information on using Ansible to manage Dell EMC Network devices see https://www.ansible.com/ansible-dell-
        networking.


AUTHOR: Abirami N (@abirami-n)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

tasks:
  - name: run show version on remote devices
    dellos6_command:
      commands: show version

  - name: run show version and check to see if output contains Dell
    dellos6_command:
      commands: show version
      wait_for: result[0] contains Dell

  - name: run multiple commands on remote nodes
    dellos6_command:
      commands:
       - show version
       - show interfaces

  - name: run multiple commands and evaluate the output
    dellos6_command:
      commands:
       - show version
       - show interfaces
      wait_for:
       - result[0] contains Dell
       - result[1] contains Access


RETURN VALUES:

stdout:
  description: The set of responses from the commands
  returned: always apart from low level errors (such as action plugin)
  type: list
  sample: ['...', '...']
stdout_lines:
  description: The value of stdout split into a list
  returned: always apart from low level errors (such as action plugin)
  type: list
  sample: [['...', '...'], ['...'], ['...']]
failed_conditions:
  description: The list of conditionals that have failed
  returned: failed
  type: list
  sample: ['...', '...']
warnings:
  description: The list of warnings (if any) generated by module based on arguments
  returned: always
  type: list
  sample: ['...', '...']

