> CLOUDSCALE_VOLUME    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudscale/cloudscale_volume.py)

        Create, attach/detach and delete volumes on the cloudscale.ch IaaS service.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_timeout
        Timeout in seconds for calls to the cloudscale.ch API.
        [Default: 30]

- api_token
        cloudscale.ch API token.
        This can also be passed in the `CLOUDSCALE_API_TOKEN' environment variable.
        [Default: (null)]

- name
        Name of the volume. Either name or UUID must be present to change an existing volume.
        [Default: (null)]

- server_uuids
        UUIDs of the servers this volume is attached to. Set this to [] to detach the volume. Currently a volume can only be attached to
        a single server.
        (Aliases: server_uuid)[Default: (null)]

- size_gb
        Size of the volume in GB.
        [Default: (null)]

- state
        State of the volume.
        (Choices: present, absent)[Default: present]

- type
        Type of the volume. Cannot be changed after creating the volume. Defaults to ssd on volume creation.
        (Choices: ssd, bulk)[Default: (null)]

- uuid
        UUID of the volume. Either name or UUID must be present to change an existing volume.
        [Default: (null)]


NOTES:
      * To create a new volume at least the `name' and `size_gb' options are required.
      * A volume can be created and attached to a server in the same task.
      * Instead of the api_token parameter the `CLOUDSCALE_API_TOKEN' environment variable can be used.
      * All operations are performed using the cloudscale.ch public API v1.
      * For details consult the full API documentation: https://www.cloudscale.ch/en/api/v1.
      * A valid API token is required for all operations. You can create as many tokens as you like using the cloudscale.ch control
        panel at https://control.cloudscale.ch.


AUTHOR: Gaudenz Steinlin (@gaudenz)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Create a new SSD volume
- name: Create an SSD volume
  cloudscale_volume:
    name: my_ssd_volume
    size_gb: 50
    api_token: xxxxxx
  register: my_ssd_volume

# Attach an existing volume to a server
- name: Attach volume to server
  cloudscale_volume:
    uuid: my_ssd_volume.uuid
    server_uuids:
      - ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48
    api_token: xxxxxx

# Create and attach a volume to a server
- name: Create and attach volume to server
  cloudscale_volume:
    name: my_ssd_volume
    size_gb: 50
    server_uuids:
      - ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48
    api_token: xxxxxx

# Detach volume from server
- name: Detach volume from server
  cloudscale_volume:
    uuid: my_ssd_volume.uuid
    server_uuids: []
    api_token: xxxxxx

# Delete a volume
- name: Delete volume
  cloudscale_volume:
    name: my_ssd_volume
    state: absent
    api_token: xxxxxx


RETURN VALUES:

href:
  description: The API URL to get details about this volume.
  returned: success when state == present
  type: str
  sample: https://api.cloudscale.ch/v1/volumes/2db69ba3-1864-4608-853a-0771b6885a3a
uuid:
  description: The unique identifier for this volume.
  returned: success when state == present
  type: str
  sample: 2db69ba3-1864-4608-853a-0771b6885a3a
name:
  description: The display name of the volume.
  returned: success when state == present
  type: str
  sample: my_ssd_volume
size_gb:
  description: The size of the volume in GB.
  returned: success when state == present
  type: str
  sample: 50
type:
  description: "The type of the volume. There are currently two options:
                ssd (default) or bulk."
  returned: success when state == present
  type: str
  sample: bulk
server_uuids:
  description: The UUIDs of the servers this volume is attached to.
  returned: success when state == present
  type: list
  sample: ['47cec963-fcd2-482f-bdb6-24461b2d47b1']
state:
  description: The current status of the volume.
  returned: success
  type: str
  sample: present

