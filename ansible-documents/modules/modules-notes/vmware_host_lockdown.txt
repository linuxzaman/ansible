> VMWARE_HOST_LOCKDOWN    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_host_lockdown.py)

        This module can be used to manage administrator permission for the local administrative account for the host when ESXi hostname
        is given. All parameters and VMware objects values are case sensitive. This module is destructive as administrator permission are
        managed using APIs used, please read options carefully and proceed. Please specify `hostname' as vCenter IP or hostname only, as
        lockdown operations are not possible from standalone ESXi server.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- cluster_name
        Name of cluster.
        All host systems from given cluster used to manage lockdown.
        Required parameter, if `esxi_hostname' is not set.
        [Default: (null)]

- esxi_hostname
        List of ESXi hostname to manage lockdown.
        Required parameter, if `cluster_name' is not set.
        See examples for specifications.
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- state
        State of hosts system
        If set to `present', all host systems will be set in lockdown mode.
        If host system is already in lockdown mode and set to `present', no action will be taken.
        If set to `absent', all host systems will be removed from lockdown mode.
        If host system is already out of lockdown mode and set to `absent', no action will be taken.
        (Choices: present, absent)[Default: present]
        version_added: 2.5
        

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Abhijeet Kasurde (@Akasurde)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Enter host system into lockdown mode
  vmware_host_lockdown:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    esxi_hostname: '{{ esxi_hostname }}'
    state: present
  delegate_to: localhost

- name: Exit host systems from lockdown mode
  vmware_host_lockdown:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    esxi_hostname: '{{ esxi_hostname }}'
    state: absent
  delegate_to: localhost

- name: Enter host systems into lockdown mode
  vmware_host_lockdown:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    esxi_hostname:
        - '{{ esxi_hostname_1 }}'
        - '{{ esxi_hostname_2 }}'
    state: present
  delegate_to: localhost

- name: Exit host systems from lockdown mode
  vmware_host_lockdown:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    esxi_hostname:
        - '{{ esxi_hostname_1 }}'
        - '{{ esxi_hostname_2 }}'
    state: absent
  delegate_to: localhost

- name: Enter all host system from cluster into lockdown mode
  vmware_host_lockdown:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    cluster_name: '{{ cluster_name }}'
    state: present
  delegate_to: localhost


RETURN VALUES:

results:
    description: metadata about state of Host system lock down
    returned: always
    type: dict
    sample: {
                "host_lockdown_state": {
                    "DC0_C0": {
                        "current_state": "present",
                        "previous_state": "absent",
                        "desired_state": "present",
                    },
                }
            }

