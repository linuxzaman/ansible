> VMWARE_GUEST_TOOLS_WAIT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py)

        This module can be used to wait for VMware tools to become available on the given VM and return facts.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- folder
        Destination folder, absolute or relative path to find an existing guest.
        This is required only, if multiple VMs with same `name' is found.
        The folder should include the datacenter. ESX's datacenter is `ha-datacenter'.
        Examples:
           folder: /ha-datacenter/vm
           folder: ha-datacenter/vm
           folder: /datacenter1/vm
           folder: datacenter1/vm
           folder: /datacenter1/vm/folder1
           folder: datacenter1/vm/folder1
           folder: /folder1/datacenter1/vm
           folder: folder1/datacenter1/vm
           folder: /folder1/datacenter1/vm/folder2
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- name
        Name of the VM for which to wait until the tools become available.
        This is required if uuid is not supplied.
        [Default: (null)]

- name_match
        If multiple VMs match the name, use the first or last found.
        (Choices: first, last)[Default: first]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- use_instance_uuid
        Whether to use the VMWare instance UUID rather than the BIOS UUID.
        [Default: False]
        type: bool
        version_added: 2.8

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- uuid
        UUID of the VM  for which to wait until the tools become available, if known. This is VMware's unique identifier.
        This is required, if `name' is not supplied.
        [Default: (null)]

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Philippe Dellaert (@pdellaert) <philippe@dellaert.org>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Wait for VMware tools to become available by UUID
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ datacenter }}"
    folder: "/{{datacenter}}/vm"
    name: "{{ vm_name }}"
  delegate_to: localhost
  register: vm_facts

- name: Get UUID from previous task and pass it to this task
  vmware_guest_tools_wait:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    uuid: "{{ vm_facts.instance.hw_product_uuid }}"
  delegate_to: localhost
  register: facts


- name: Wait for VMware tools to become available by name
  vmware_guest_tools_wait:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    name: test-vm
    folder: "/{{datacenter}}/vm"
  delegate_to: localhost
  register: facts


RETURN VALUES:

instance:
    description: metadata about the virtual machine
    returned: always
    type: dict
    sample: None

