> EOS_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/eos/eos_user.py)

        This module provides declarative management of the local usernames configured on Arista EOS devices.  It allows playbooks to
        manage either individual usernames or the collection of usernames in the current running config.  It also supports purging
        usernames from the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- aggregate
        The set of username objects to be configured on the remote Arista EOS device.  The list entries can either be the username or a
        hash of username and properties.  This argument is mutually exclusive with the `username' argument.
        (Aliases: users, collection)[Default: (null)]
        version_added: 2.4

- auth_pass
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes' with `become_pass'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Specifies the password to use if required to enter privileged mode on the remote device.  If `authorize' is false, then this
        argument does nothing. If the value is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS' will
        be used instead.
        [Default: (null)]
        type: str

- authorize
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli' and `become: yes'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device
        will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment
        variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
        [Default: False]
        type: bool

- configured_password
        The password to be configured on the remote Arista EOS device. The password needs to be provided in clear and it will be
        encrypted on the device. Please note that this option is not same as `provider password'.
        [Default: (null)]
        version_added: 2.4

- name
        The username to be configured on the remote Arista EOS device.  This argument accepts a stringv value and is mutually exclusive
        with the `aggregate' argument. Please note that this option is not same as `provider username'.
        [Default: (null)]
        version_added: 2.4

- nopassword
        Defines the username without assigning a password.  This will allow the user to login to the system without being authenticated
        by a password.
        [Default: (null)]
        type: bool

- privilege
        The `privilege' argument configures the privilege level of the user when logged into the system.  This argument accepts integer
        values in the range of 1 to 15.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        This option is only required if you are using eAPI.
        For more information please see the L(EOS Platform Options guide, ../network/user_guide/platform_eos.html).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          auth_pass:
            description:
            - Specifies the password to use if required to enter privileged mode on the remote
              device.  If `authorize' is false, then this argument does nothing. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_AUTH_PASS'
              will be used instead.
            type: str
          authorize:
            default: false
            description:
            - Instructs the module to enter privileged mode on the remote device before sending
              any commands.  If not specified, the device will attempt to execute all commands
              in non-privileged mode. If the value is not specified in the task, the value
              of environment variable `ANSIBLE_NET_AUTHORIZE' will be used instead.
            type: bool
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.  This
              is a common argument used for either `cli' or `eapi' transports. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_PASSWORD'
              will be used instead.
            type: str
          port:
            default: 0 (use common port)
            description:
            - Specifies the port to use when building the connection to the remote device.  This
              value applies to either `cli' or `eapi'.  The port value will default to the
              appropriate transport common port if none is provided in the task.  (cli=22,
              http=80, https=443).
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports. If the value is not
              specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - eapi
            default: cli
            description:
            - Configures the transport connection to use when connecting to the remote device.
            required: true
            type: str
          use_proxy:
            default: true
            description:
            - If `no', the environment variables `http_proxy' and `https_proxy' will be
              ignored.
            type: bool
            version_added: '2.5'
          use_ssl:
            default: true
            description:
            - Configures the `transport' to use SSL if set to `yes' only when the `transport=eapi'.  If
              the transport argument is not eapi, this value is ignored.
            type: bool
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate either the CLI login or the eAPI
              authentication depending on which transport is used. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_USERNAME' will
              be used instead.
            type: str
          validate_certs:
            description:
            - If `no', SSL certificates will not be validated. This should only be used on
              personally controlled sites using self-signed certificates.  If the transport
              argument is not eapi, this value is ignored.
            type: bool
        
        type: dict

- purge
        Instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the
        device with the exception of the `admin` user which cannot be deleted per EOS constraints.
        [Default: False]
        type: bool

- role
        Configures the role for the username in the device running configuration.  The argument accepts a string value defining the role
        name.  This argument does not check if the role has been configured on the device.
        [Default: (null)]

- sshkey
        Specifies the SSH public key to configure for the given username.  This argument accepts a valid SSH key value.
        [Default: (null)]

- state
        Configures the state of the username definition as it relates to the device operational configuration.  When set to `present',
        the username(s) should be configured in the device active configuration and when set to `absent' the username(s) should not be in
        the device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]


NOTES:
      * Tested against EOS 4.15
      * For information on using CLI, eAPI and privileged mode see the :ref:`EOS Platform Options guide <eos_platform_options>`
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`
      * For more information on using Ansible to manage Arista EOS devices see the `Arista integration page
        <https://www.ansible.com/ansible-arista-networks>`_.


AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: create a new user
  eos_user:
    name: ansible
    sshkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    state: present

- name: remove all users except admin
  eos_user:
    purge: yes

- name: set multiple users to privilege level 15
  eos_user:
    aggregate:
      - name: netop
      - name: netend
    privilege: 15
    state: present

- name: Change Password for User netop
  eos_user:
    username: netop
    configured_password: "{{ new_password }}"
    update_password: always
    state: present


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - name ansible secret password
    - name admin secret admin
session_name:
  description: The EOS config session name used to load the configuration
  returned: when changed is True
  type: str
  sample: ansible_1479315771

