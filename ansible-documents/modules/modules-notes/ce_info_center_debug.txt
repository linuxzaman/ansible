> CE_INFO_CENTER_DEBUG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_info_center_debug.py)

        Manages information center debug configurations on HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- channel_id
        Number of a channel. The value is an integer ranging from 0 to 9. The default value is 0.
        [Default: (null)]

- debug_enable
        Whether a device is enabled to output debugging information.
        (Choices: no_use, true, false)[Default: no_use]

- debug_level
        Debug level permitted to output.
        (Choices: emergencies, alert, critical, error, warning, notification, informational, debugging)[Default: (null)]

- debug_time_stamp
        Timestamp type of debugging information.
        (Choices: date_boot, date_second, date_tenthsecond, date_millisecond, shortdate_second, shortdate_tenthsecond,
        shortdate_millisecond, formatdate_second, formatdate_tenthsecond, formatdate_millisecond)[Default: (null)]

- module_name
        Module name of the rule. The value is a string of 1 to 31 case-insensitive characters. The default value is default. Please use
        lower-case letter, such as [aaa, acl, arp, bfd].
        [Default: (null)]

- state
        Specify desired state of the resource.
        (Choices: present, absent)[Default: present]


AUTHOR: wangdezhuang (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: CloudEngine info center debug test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: "Config debug time stamp"
    ce_info_center_debug:
      state: present
      debug_time_stamp: date_boot
      provider: "{{ cli }}"

  - name: "Undo debug time stamp"
    ce_info_center_debug:
      state: absent
      debug_time_stamp: date_boot
      provider: "{{ cli }}"

  - name: "Config debug module log level"
    ce_info_center_debug:
      state: present
      module_name: aaa
      channel_id: 1
      debug_enable: true
      debug_level: error
      provider: "{{ cli }}"

  - name: "Undo debug module log level"
    ce_info_center_debug:
      state: absent
      module_name: aaa
      channel_id: 1
      debug_enable: true
      debug_level: error
      provider: "{{ cli }}"


RETURN VALUES:

changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true
proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {"state": "present", "debug_time_stamp": "date_boot"}
existing:
    description: k/v pairs of existing aaa server
    returned: always
    type: dict
    sample: {"debugTimeStamp": "DATE_MILLISECOND"}
end_state:
    description: k/v pairs of aaa params after module execution
    returned: always
    type: dict
    sample: {"debugTimeStamp": "DATE_BOOT"}
updates:
    description: command sent to the device
    returned: always
    type: list
    sample: ["info-center timestamp debugging boot"]

