> SROS_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/sros/sros_config.py)

        Nokia SR OS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module
        provides an implementation for working with SR OS configuration sections in a deterministic way.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with `before' this
        allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made. f the `backup_options' value is not given, the backup file is written to the `backup' folder in the playbook
        root directory. If the directory does not exist, it is created.
        [Default: no]
        type: bool
        version_added: 2.2

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `yes', if `backup' is set to `no' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exist it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
        
        type: dict
        version_added: 2.8

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the
        opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched
        against the system.
        [Default: (null)]

- config
        The `config' argument allows the playbook designer to supply the base configuration to be used to validate configuration changes
        necessary.  If this argument is provided, the module will not download the running-config from the remote node.
        [Default: (null)]
        version_added: 2.2

- defaults
        This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the
        module will get the current config by issuing the command `show running-config all'.
        (Aliases: detail)[Default: no]
        type: bool
        version_added: 2.2

- force
        The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause
        the module to push the contents of `src' into the device without first checking if already configured.
        Note this argument should be considered deprecated.  To achieve the equivalent, set the `match=none' which is idempotent.  This
        argument will be removed in a future release.
        [Default: (null)]
        type: bool
        version_added: 2.2

- lines
        The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in
        the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the
        device config parser.  The `lines' argument only supports current context lines.  See EXAMPLES
        (Aliases: commands)[Default: (null)]

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is
        set to `line', commands are matched line by line. If match is set to `none', the module will not attempt to compare the source
        configuration with the running configuration on the remote device.
        (Choices: line, none)[Default: line]

- parents
        The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the
        parents argument is omitted, the commands are checked against the set of top level or global commands.
        [Default: (null)]

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- replace
        Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to `line' then the
        modified lines are pushed to the device in configuration mode.  If the replace argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct.
        (Choices: line, block)[Default: line]

- save
        The `save' argument instructs the module to save the running- config to the startup-config at the conclusion of the module
        running.  If check mode is specified, this argument is ignored.
        [Default: no]
        type: bool
        version_added: 2.2

- src
        Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source
        file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This
        argument is mutually exclusive with `lines', `parents'.
        [Default: (null)]
        version_added: 2.2


NOTES:
      * For more information on using Ansible to manage Nokia SR OS Network devices see https://www.ansible.com/ansible-nokia.


AUTHOR: Peter Sprygada (@privateip)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

# Note: examples below use the following provider dict to handle
#       transport and authentication to the node.
---
vars:
  cli:
    host: "{{ inventory_hostname }}"
    username: admin
    password: admin
    transport: cli

---
- name: enable rollback location
  sros_config:
    lines: configure system rollback rollback-location "cf3:/ansible"
    provider: "{{ cli }}"

- name: set system name to {{ inventory_hostname }} using one line
  sros_config:
    lines:
        - configure system name "{{ inventory_hostname }}"
    provider: "{{ cli }}"

- name: set system name to {{ inventory_hostname }} using parents
  sros_config:
    lines:
        - 'name "{{ inventory_hostname }}"'
    parents:
        - configure
        - system
    provider: "{{ cli }}"
    backup: yes

- name: load config from file
  sros_config:
      src: "{{ inventory_hostname }}.cfg"
      provider: "{{ cli }}"
      save: yes

- name: invalid use of lines
  sros_config:
    lines:
      - service
      -     vpls 1000 customer foo 1 create
      -         description "invalid lines example"
    provider: "{{ cli }}"

- name: valid use of lines
  sros_config:
    lines:
      - description "invalid lines example"
    parents:
      - service
      - vpls 1000 customer foo 1 create
    provider: "{{ cli }}"

- name: configurable backup path
  sros_config:
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user


RETURN VALUES:

updates:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['config system name "sros01"']
commands:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['config system name "sros01"']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/sros_config.2016-07-16@22:28:34

