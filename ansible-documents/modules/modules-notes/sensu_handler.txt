> SENSU_HANDLER    (/usr/lib/python2.7/dist-packages/ansible/modules/monitoring/sensu_handler.py)

        Manages Sensu handler configuration For more information, refer to the Sensu documentation:
        https://sensuapp.org/docs/latest/reference/handlers.html

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- command
        The handler command to be executed.
        The event data is passed to the process via STDIN.
        NOTE: the command attribute is only required for Pipe handlers (i.e. handlers configured with "type": "pipe").
        [Default: (null)]

- filter
        The Sensu event filter (name) to use when filtering events for the handler.
        [Default: (null)]

- filters
        An array of Sensu event filters (names) to use when filtering events for the handler.
        Each array item must be a string.
        [Default: (null)]

- handle_flapping
        If events in the flapping state should be handled.
        [Default: no]
        type: bool

- handle_silenced
        If events matching one or more silence entries should be handled.
        [Default: no]
        type: bool

- handlers
        An array of Sensu event handlers (names) to use for events using the handler set.
        Each array item must be a string.
        NOTE: the handlers attribute is only required for handler sets (i.e. handlers configured with "type": "set").
        [Default: (null)]

- mutator
        The Sensu event mutator (name) to use to mutate event data for the handler.
        [Default: (null)]

= name
        A unique name for the handler. The name cannot contain special characters or spaces.


- pipe
        The pipe definition scope, used to configure the Sensu transport pipe.
        NOTE: the pipe attribute is only required for Transport handlers (i.e. handlers configured with "type": "transport").
        [Default: (null)]

- severities
        An array of check result severities the handler will handle.
        NOTE: event resolution bypasses this filtering.
        (Choices: warning, critical, unknown)[Default: (null)]

- socket
        The socket definition scope, used to configure the TCP/UDP handler socket.
        NOTE: the socket attribute is only required for TCP/UDP handlers (i.e. handlers configured with "type": "tcp" or "type": "udp").
        [Default: (null)]

- state
        Whether the handler should be present or not
        (Choices: present, absent)[Default: present]

- timeout
        The handler execution duration timeout in seconds (hard stop).
        Only used by pipe and tcp handler types.
        [Default: 10]

= type
        The handler type
        (Choices: pipe, tcp, udp, transport, set)


NOTES:
      * Check mode is supported


AUTHOR: David Moreau Simard (@dmsimard)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Configure a handler that sends event data as STDIN (pipe)
- name: Configure IRC Sensu handler
  sensu_handler:
    name: "irc_handler"
    type: "pipe"
    command: "/usr/local/bin/notify-irc.sh"
    severities:
      - "ok"
      - "critical"
      - "warning"
      - "unknown"
    timeout: 15
  notify:
    - Restart sensu-client
    - Restart sensu-server

# Delete a handler
- name: Delete IRC Sensu handler
  sensu_handler:
    name: "irc_handler"
    state: "absent"

# Example of a TCP handler
- name: Configure TCP Sensu handler
  sensu_handler:
    name: "tcp_handler"
    type: "tcp"
    timeout: 30
    socket:
      host: "10.0.1.99"
      port: 4444
  register: handler
  notify:
    - Restart sensu-client
    - Restart sensu-server

- name: Secure Sensu handler configuration file
  file:
    path: "{{ handler['file'] }}"
    owner: "sensu"
    group: "sensu"
    mode: "0600"


RETURN VALUES:

config:
  description: Effective handler configuration, when state is present
  returned: success
  type: dict
  sample: {'name': 'irc', 'type': 'pipe', 'command': '/usr/local/bin/notify-irc.sh'}
file:
  description: Path to the handler configuration file
  returned: success
  type: str
  sample: "/etc/sensu/conf.d/handlers/irc.json"
name:
  description: Name of the handler
  returned: success
  type: str
  sample: "irc"

