> OS_IRONIC_INSPECT    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/openstack/os_ironic_inspect.py)

        Requests Ironic to set a node into inspect state in order to collect metadata regarding the node. This command may be out of band
        or in-band depending on the ironic driver configuration. This is only possible on nodes in 'manageable' and 'available' state.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_timeout
        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests
        library.
        [Default: (null)]
        type: int

- auth
        Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password' plugin, this
        would contain `auth_url', `username', `password', `project_name' and any information about domains (for example,
        `os_user_domain_name' or `os_project_domain_name') if the cloud supports them. For other plugins, this param will need to contain
        whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_*
        environment variables are present.
        [Default: (null)]
        type: dict

- auth_type
        Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be
        indicated here and the contents of the `auth' parameter should be updated accordingly.
        [Default: (null)]
        type: str

- availability_zone
        Ignored. Present for backwards compatibility
        [Default: (null)]

- ca_cert
        A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
        (Aliases: cacert)[Default: (null)]
        type: str

- client_cert
        A path to a client certificate to use as part of the SSL transaction.
        (Aliases: cert)[Default: (null)]
        type: str

- client_key
        A path to a client key to use as part of the SSL transaction.
        (Aliases: key)[Default: (null)]
        type: str

- cloud
        Named cloud or cloud config to operate against. If `cloud' is a string, it references a named cloud config as defined in an
        OpenStack clouds.yaml file. Provides default values for `auth' and `auth_type'. This parameter is not needed if `auth' is
        provided or if OpenStack OS_* environment variables are present. If `cloud' is a dict, it contains a complete cloud configuration
        like would be in a section of clouds.yaml.
        [Default: (null)]
        type: raw

- interface
        Endpoint URL type to fetch from the service catalog.
        (Aliases: endpoint_type)(Choices: admin, internal, public)[Default: public]
        type: str
        version_added: 2.3

- ironic_url
        If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API. Use with "auth" and "auth_type"
        settings set to None.
        [Default: (null)]

- mac
        unique mac address that is used to attempt to identify the host.
        [Default: (null)]

- name
        unique name identifier to identify the host in Ironic.
        [Default: (null)]

- region_name
        Name of the region.
        [Default: (null)]
        type: str

- timeout
        A timeout in seconds to tell the role to wait for the node to complete introspection if wait is set to True.
        [Default: 1200]
        type: int

- uuid
        globally unique identifier (UUID) to identify the host.
        [Default: (null)]

- validate_certs
        Whether or not SSL API requests should be verified.
        Before Ansible 2.3 this defaulted to `yes'.
        (Aliases: verify)[Default: False]
        type: bool

- wait
        Should ansible wait until the requested resource is complete.
        [Default: True]
        type: bool


NOTES:
      * The standard OpenStack environment variables, such as `OS_USERNAME' may be used instead of providing explicit values.
      * Auth information is driven by openstacksdk, which means that values can come from a yaml config file in
        /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment
        variables, then finally by explicit parameters in plays. More information can be found at
        https://docs.openstack.org/openstacksdk/


REQUIREMENTS:  openstacksdk, python >= 2.7

AUTHOR: Julia Kreger (@juliakreger)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Invoke node inspection
- os_ironic_inspect:
    name: "testnode1"


RETURN VALUES:

ansible_facts:
    description: Dictionary of new facts representing discovered properties of the node..
    returned: changed
    type: complex
    contains:
        memory_mb:
            description: Amount of node memory as updated in the node properties
            type: str
            sample: "1024"
        cpu_arch:
            description: Detected CPU architecture type
            type: str
            sample: "x86_64"
        local_gb:
            description: Total size of local disk storage as updaed in node properties.
            type: str
            sample: "10"
        cpus:
            description: Count of cpu cores defined in the updated node properties.
            type: str
            sample: "1"

