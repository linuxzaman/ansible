> CE_VRF    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cloudengine/ce_vrf.py)

        Manages VPN instance of HUAWEI CloudEngine switches.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- description
        Description of the vrf, the string length is 1 - 242 .
        [Default: (null)]

- state
        Manage the state of the resource.
        (Choices: present, absent)[Default: present]

= vrf
        VPN instance, the length of vrf name is 1 - 31, i.e. "test", but can not be `_public_'.



NOTES:
      * If `state=absent', the route will be removed, regardless of the non-required options.


AUTHOR: Yang yang (@QijunPan)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: vrf module test
  hosts: cloudengine
  connection: local
  gather_facts: no
  vars:
    cli:
      host: "{{ inventory_hostname }}"
      port: "{{ ansible_ssh_port }}"
      username: "{{ username }}"
      password: "{{ password }}"
      transport: cli

  tasks:

  - name: Config a vpn install named vpna, description is test
    ce_vrf:
      vrf: vpna
      description: test
      state: present
      provider: "{{ cli }}"
  - name: Delete a vpn install named vpna
    ce_vrf:
      vrf: vpna
      state: absent
      provider: "{{ cli }}"


RETURN VALUES:

proposed:
    description: k/v pairs of parameters passed into module
    returned: always
    type: dict
    sample: {"vrf": "vpna",
             "description": "test",
             "state": "present"}
existing:
    description: k/v pairs of existing switchport
    returned: always
    type: dict
    sample:  {}
end_state:
    description: k/v pairs of switchport after module execution
    returned: always
    type: dict
    sample:  {"vrf": "vpna",
              "description": "test",
              "present": "present"}
updates:
    description: command list sent to the device
    returned: always
    type: list
    sample: ["ip vpn-instance vpna",
             "description test"]
changed:
    description: check to see if a change was made on the device
    returned: always
    type: bool
    sample: true

