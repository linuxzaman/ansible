> BIGIP_PROFILE_CLIENT_SSL    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_profile_client_ssl.py)

        Manages client SSL profiles on a BIG-IP.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- advertised_cert_authority
        Specifies that the CAs that the system advertises to clients is being trusted by the profile.
        [Default: (null)]
        type: str
        version_added: 2.8
        

- allow_expired_crl
        Instructs the system to use the specified CRL file even if it has expired.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- allow_non_ssl
        Enables or disables acceptance of non-SSL connections.
        When creating a new profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: bool
        version_added: 2.7
        

- cert_auth_depth
        Specifies the maximum number of certificates to be traversed in a client certificate chain.
        [Default: (null)]
        type: int
        version_added: 2.8
        

- cert_key_chain
        One or more certificates and keys to associate with the SSL profile. This option is always a list. The keys in the list dictate
        the details of the client/key/chain combination. Note that BIG-IPs can only have one of each type of each certificate/key type.
        This means that you can only have one RSA, one DSA, and one ECDSA per profile. If you attempt to assign two RSA, DSA, or ECDSA
        certificate/key combo, the device will reject this.
        This list is a complex list that specifies a number of keys.
        [Default: (null)]
        suboptions:
          cert:
            description:
            - Specifies a cert name for use.
            required: true
            type: str
          chain:
            description:
            - Contains a certificate chain that is relevant to the certificate and key mentioned
              earlier.
            - This key is optional.
            type: str
          key:
            description:
            - Contains a key name.
            required: true
            type: str
          passphrase:
            description:
            - Contains the passphrase of the key file, should it require one.
            - Passphrases are encrypted on the remote BIG-IP device. Therefore, there is no
              way to compare them when updating a client SSL profile. Due to this, if you
              specify a passphrase, this module will always register a `changed' event.
            type: str
        
        type: list

- ciphers
        Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the
        parent profile.
        [Default: (null)]
        type: str

- client_auth_crl
        Specifies the name of a file containing a list of revoked client certificates.
        [Default: (null)]
        type: str
        version_added: 2.8
        

- client_auth_frequency
        Specifies the frequency of client authentication for an SSL session.
        When `once', specifies that the system authenticates the client once for an SSL session.
        When `always', specifies that the system authenticates the client once for an SSL session and also upon reuse of that session.
        (Choices: once, always)[Default: (null)]
        type: str
        version_added: 2.8
        

- client_certificate
        Specifies the way the system handles client certificates.
        When `ignore', specifies that the system ignores certificates from client systems.
        When `require', specifies that the system requires a client to present a valid certificate.
        When `request', specifies that the system requests a valid certificate from a client but always authenticate the client.
        (Choices: ignore, require, request)[Default: (null)]
        type: str
        version_added: 2.8
        

= name
        Specifies the name of the profile.

        type: str

- options
        Options that the system uses for SSL processing in the form of a list. When creating a new profile, the list is provided by the
        parent profile.
        When a `''' or `none' value is provided all options for SSL processing are disabled.
        (Choices: netscape-reuse-cipher-change-bug, microsoft-big-sslv3-buffer, msie-sslv2-rsa-padding, ssleay-080-client-dh-bug,
        tls-d5-bug, tls-block-padding-bug, dont-insert-empty-fragments, no-ssl, no-dtls, no-session-resumption-on-renegotiation, no-
        tlsv1.1, no-tlsv1.2, single-dh-use, ephemeral-rsa, cipher-server-preference, tls-rollback-bug, no-sslv2, no-sslv3, no-tls, no-
        tlsv1, pkcs1-check-1, pkcs1-check-2, netscape-ca-dn-bug, netscape-demo-cipher-change-bug, none)[Default: (null)]
        type: list
        version_added: 2.7
        

- parent
        The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the
        `clientssl' parent on the `Common' partition.
        [Default: /Common/clientssl]
        type: str

- partition
        Device partition to manage resources on.
        [Default: Common]
        type: str
        version_added: 2.5
        

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

- renegotiation
        Enables or disables SSL renegotiation.
        When creating a new profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- retain_certificate
        When `yes', client certificate is retained in SSL session.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- secure_renegotiation
        Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the
        parent profile.
        When `request' is set the system request secure renegotation of SSL connections.
        `require' is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations
        from unpatched clients.
        The `require-strict' setting the system requires strict renegotiation of SSL connections. In this mode the system refuses
        connections to insecure servers, and terminates existing SSL connections to insecure servers.
        (Choices: require, require-strict, request)[Default: (null)]
        type: str
        version_added: 2.7
        

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_name
        Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new
        profile, the setting is provided by the parent profile.
        The server name can also be a wildcard string containing the asterisk `*' character.
        [Default: (null)]
        version_added: 2.8
        

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- sni_default
        Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the
        client provides no SNI extension support.
        When creating a new profile, the setting is provided by the parent profile.
        There can be only one SSL profile with this setting enabled.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- sni_require
        Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default' is set to `true'.
        When creating a new profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- state
        When `present', ensures that the profile exists.
        When `absent', ensures the profile is removed.
        (Choices: present, absent)[Default: present]
        type: str
        version_added: 2.5
        

- strict_resume
        Enables or disables the resumption of SSL sessions after an unclean shutdown.
        When creating a new profile, the setting is provided by the parent profile.
        [Default: (null)]
        type: bool
        version_added: 2.8
        

- trusted_cert_authority
        Specifies a client CA that the system trusts.
        [Default: (null)]
        type: str
        version_added: 2.8
        

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * Requires BIG-IP software version >= 12
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007), Wojciech Wypior (@wojtek0806)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create client SSL profile
  bigip_profile_client_ssl:
    state: present
    name: my_profile
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Create client SSL profile with specific ciphers
  bigip_profile_client_ssl:
    state: present
    name: my_profile
    ciphers: "!SSLv3:!SSLv2:ECDHE+AES-GCM+SHA256:ECDHE-RSA-AES128-CBC-SHA"
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Create client SSL profile with specific SSL options
  bigip_profile_client_ssl:
    state: present
    name: my_profile
    options:
      - no-sslv2
      - no-sslv3
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Create client SSL profile require secure renegotiation
  bigip_profile_client_ssl:
    state: present
    name: my_profile
    secure_renegotiation: request
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost

- name: Create a client SSL profile with a cert/key/chain setting
  bigip_profile_client_ssl:
    state: present
    name: my_profile
    cert_key_chain:
      - cert: bigip_ssl_cert1
        key: bigip_ssl_key1
        chain: bigip_ssl_cert1
    provider:
      server: lb.mydomain.com
      user: admin
      password: secret
  delegate_to: localhost


RETURN VALUES:

ciphers:
  description: The ciphers applied to the profile.
  returned: changed
  type: str
  sample: "!SSLv3:!SSLv2:ECDHE+AES-GCM+SHA256:ECDHE-RSA-AES128-CBC-SHA"
options:
  description: The list of options for SSL processing.
  returned: changed
  type: list
  sample: ['no-sslv2', 'no-sslv3']
secure_renegotiation:
  description: The method of secure SSL renegotiation.
  returned: changed
  type: str
  sample: request
allow_non_ssl:
  description: Acceptance of non-SSL connections.
  returned: changed
  type: bool
  sample: yes
strict_resume:
  description: Resumption of SSL sessions after an unclean shutdown.
  returned: changed
  type: bool
  sample: yes
renegotiation:
  description: Renegotiation of SSL sessions.
  returned: changed
  type: bool
  sample: yes

