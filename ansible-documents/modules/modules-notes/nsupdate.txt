> NSUPDATE    (/usr/lib/python2.7/dist-packages/ansible/modules/net_tools/nsupdate.py)

        Create, update and remove DNS records using DDNS updates DDNS works well with both bind and Microsoft DNS (see
        https://technet.microsoft.com/en-us/library/cc961412.aspx)

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- key_algorithm
        Specify key algorithm used by `key_secret'.
        (Choices: HMAC-MD5.SIG-ALG.REG.INT, hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, hmac-sha512)[Default: hmac-md5]

- key_name
        Use TSIG key name to authenticate against DNS `server'
        [Default: (null)]

- key_secret
        Use TSIG key secret, associated with `key_name', to authenticate against `server'
        [Default: (null)]

- port
        Use this TCP port when connecting to `server'.
        [Default: 53]
        version_added: 2.5
        

- protocol
        Sets the transport protocol (TCP or UDP). TCP is the recommended and a more robust option.
        (Choices: tcp, udp)[Default: tcp]
        version_added: 2.8
        

= record
        Sets the DNS record to modify. When zone is omitted this has to be absolute (ending with a dot).


= server
        Apply DNS modification on this server.


- state
        Manage DNS record.
        (Choices: present, absent)[Default: present]

- ttl
        Sets the record TTL.
        [Default: 3600]

- type
        Sets the record type.
        [Default: A]

- value
        Sets the record value.
        [Default: (null)]

- zone
        DNS record will be modified on this `zone'.
        When omitted DNS will be queried to attempt finding the correct zone.
        Starting with Ansible 2.7 this parameter is optional.
        [Default: (null)]


REQUIREMENTS:  dnspython

AUTHOR: Loic Blot (@nerzhul)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Add or modify ansible.example.org A to 192.168.1.1"
  nsupdate:
    key_name: "nsupdate"
    key_secret: "+bFQtBCta7j2vWkjPkAFtgA=="
    server: "10.1.1.1"
    zone: "example.org"
    record: "ansible"
    value: "192.168.1.1"

- name: Add or modify ansible.example.org A to 192.168.1.1, 192.168.1.2 and 192.168.1.3"
  nsupdate:
    key_name: "nsupdate"
    key_secret: "+bFQtBCta7j2vWkjPkAFtgA=="
    server: "10.1.1.1"
    zone: "example.org"
    record: "ansible"
    value: ["192.168.1.1", "192.168.1.2", "192.168.1.3"]

- name: Remove puppet.example.org CNAME
  nsupdate:
    key_name: "nsupdate"
    key_secret: "+bFQtBCta7j2vWkjPkAFtgA=="
    server: "10.1.1.1"
    zone: "example.org"
    record: "puppet"
    type: "CNAME"
    state: absent


RETURN VALUES:

changed:
    description: If module has modified record
    returned: success
    type: str
record:
    description: DNS record
    returned: success
    type: str
    sample: 'ansible'
ttl:
    description: DNS record TTL
    returned: success
    type: int
    sample: 86400
type:
    description: DNS record type
    returned: success
    type: str
    sample: 'CNAME'
value:
    description: DNS record value(s)
    returned: success
    type: list
    sample: '192.168.1.1'
zone:
    description: DNS record zone
    returned: success
    type: str
    sample: 'example.org.'
dns_rc:
    description: dnspython return code
    returned: always
    type: int
    sample: 4
dns_rc_str:
    description: dnspython return code (string representation)
    returned: always
    type: str
    sample: 'REFUSED'

