> DIGITAL_OCEAN    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/digital_ocean/_digital_ocean.py)

        Create/delete a droplet in DigitalOcean and optionally wait for it to be 'running', or deploy an SSH key.

DEPRECATED: 

	Reason: Updated module to remove external dependency with increased functionality.
	Will be removed in: Ansible 2.12
	Alternatives: Use M(digital_ocean_droplet) instead.


  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_token
        DigitalOcean api token.
        [Default: (null)]
        version_added: 1.9.5

- backups_enabled
        Optional, Boolean, enables backups for your droplet.
        [Default: no]
        type: bool
        version_added: 1.6

- command
        Which target you want to operate on.
        (Choices: droplet, ssh)[Default: droplet]

- id
        Numeric, the droplet id you want to operate on.
        (Aliases: droplet_id)[Default: (null)]

- image_id
        This is the slug of the image you would like the droplet created with.
        [Default: (null)]

- ipv6
        Optional, Boolean, enable IPv6 for your droplet.
        [Default: no]
        type: bool
        version_added: 2.2

- name
        String, this is the name of the droplet - must be formatted by hostname rules, or the name of a SSH key.
        [Default: (null)]

- private_networking
        Bool, add an additional, private network interface to droplet for inter-droplet communication.
        [Default: no]
        type: bool
        version_added: 1.4

- region_id
        This is the slug of the region you would like your server to be created in.
        [Default: (null)]

- size_id
        This is the slug of the size you would like the droplet created with.
        [Default: (null)]

- ssh_key_ids
        Optional, array of SSH key (numeric) ID that you would like to be added to the server.
        [Default: (null)]

- ssh_pub_key
        The public SSH key you want to add to your account.
        [Default: (null)]

- state
        Indicate desired state of the target.
        (Choices: present, active, absent, deleted)[Default: present]

- unique_name
        Bool, require unique hostnames.  By default, DigitalOcean allows multiple hosts with the same name.  Setting this to "yes" allows
        only one host per name.  Useful for idempotence.
        [Default: no]
        type: bool
        version_added: 1.4

- user_data
        opaque blob of data which is made available to the droplet
        [Default: (null)]
        version_added: 2.0

- virtio
        Bool, turn on virtio driver in droplet for improved network and storage I/O.
        [Default: yes]
        type: bool
        version_added: 1.4

- wait
        Wait for the droplet to be in state 'running' before returning.  If wait is "no" an ip_address may not be returned.
        [Default: yes]
        type: bool

- wait_timeout
        How long before wait gives up, in seconds.
        [Default: 300]


NOTES:
      * Two environment variables can be used, DO_API_KEY and DO_API_TOKEN. They both refer to the v2 token.
      * As of Ansible 1.9.5 and 2.0, Version 2 of the DigitalOcean API is used, this removes `client_id' and `api_key' options in
        favor of `api_token'.
      * If you are running Ansible 1.9.4 or earlier you might not be able to use the included version of this module as the API
        version used has been retired. Upgrade Ansible or, if unable to, try downloading the latest version of this module from
        github and putting it into a 'library' directory.


REQUIREMENTS:  python >= 2.6, dopy

AUTHOR: Vincent Viallet (@zbal)
        METADATA:
          status:
          - deprecated
          supported_by: community
        

EXAMPLES:

# Ensure a SSH key is present
# If a key matches this name, will return the ssh key id and changed = False
# If no existing key matches this name, a new key is created, the ssh key id is returned and changed = False

- digital_ocean:
    state: present
    command: ssh
    name: my_ssh_key
    ssh_pub_key: 'ssh-rsa AAAA...'
    api_token: XXX

# Create a new Droplet
# Will return the droplet details including the droplet id (used for idempotence)

- digital_ocean:
    state: present
    command: droplet
    name: mydroplet
    api_token: XXX
    size_id: 2gb
    region_id: ams2
    image_id: fedora-19-x64
    wait_timeout: 500
  register: my_droplet

- debug:
    msg: "ID is {{ my_droplet.droplet.id }}"

- debug:
    msg: "IP is {{ my_droplet.droplet.ip_address }}"

# Ensure a droplet is present
# If droplet id already exist, will return the droplet details and changed = False
# If no droplet matches the id, a new droplet will be created and the droplet details (including the new id) are returned, changed = True.

- digital_ocean:
    state: present
    command: droplet
    id: 123
    name: mydroplet
    api_token: XXX
    size_id: 2gb
    region_id: ams2
    image_id: fedora-19-x64
    wait_timeout: 500

# Create a droplet with ssh key
# The ssh key id can be passed as argument at the creation of a droplet (see ssh_key_ids).
# Several keys can be added to ssh_key_ids as id1,id2,id3
# The keys are used to connect as root to the droplet.

- digital_ocean:
    state: present
    ssh_key_ids: 123,456
    name: mydroplet
    api_token: XXX
    size_id: 2gb
    region_id: ams2
    image_id: fedora-19-x64


