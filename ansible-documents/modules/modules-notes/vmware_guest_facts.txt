> VMWARE_GUEST_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_guest_facts.py)

        Gather facts about a single VM on a VMware ESX cluster.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= datacenter
        Destination datacenter for the deploy operation


- folder
        Destination folder, absolute or relative path to find an existing guest.
        This is required if name is supplied.
        The folder should include the datacenter. ESX's datacenter is ha-datacenter
        Examples:
           folder: /ha-datacenter/vm
           folder: ha-datacenter/vm
           folder: /datacenter1/vm
           folder: datacenter1/vm
           folder: /datacenter1/vm/folder1
           folder: datacenter1/vm/folder1
           folder: /folder1/datacenter1/vm
           folder: folder1/datacenter1/vm
           folder: /folder1/datacenter1/vm/folder2
           folder: vm/folder2
           folder: folder2
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- name
        Name of the VM to work with
        This is required if UUID is not supplied.
        [Default: (null)]

- name_match
        If multiple VMs matching the name, use the first or last found
        (Choices: first, last)[Default: first]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- properties
        Specify the properties to retrieve.
        If not specified, all properties are retrieved (deeply).
        Results are returned in a structure identical to the vsphere API.
        Example:
           properties: [
              "config.hardware.memoryMB",
              "config.hardware.numCPU",
              "guest.disk",
              "overallStatus"
           ]
        Only valid when `schema' is `vsphere'.
        [Default: (null)]
        type: list
        version_added: 2.8

- schema
        Specify the output schema desired.
        The 'summary' output schema is the legacy output from the module
        The 'vsphere' output schema is the vSphere API class definition which requires pyvmomi>6.7.1
        (Choices: summary, vsphere)[Default: summary]
        type: str
        version_added: 2.8

- tags
        Whether to show tags or not.
        If set `True', shows tag facts.
        If set `False', hides tags facts.
        vSphere Automation SDK and vCloud Suite SDK is required.
        [Default: no]
        type: bool
        version_added: 2.8

- use_instance_uuid
        Whether to use the VMWare instance UUID rather than the BIOS UUID.
        [Default: False]
        type: bool
        version_added: 2.8

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- uuid
        UUID of the instance to manage if known, this is VMware's unique identifier.
        This is required if name is not supplied.
        [Default: (null)]

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 5.5, 6.7


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Loic Blot (@nerzhul) <loic.blot@unix-experience.fr>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Gather facts from standalone ESXi server having datacenter as 'ha-datacenter'
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: ha-datacenter
    validate_certs: no
    uuid: 421e4592-c069-924d-ce20-7e7533fab926
  delegate_to: localhost
  register: facts

- name: Gather some facts from a guest using the vSphere API output schema
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ datacenter_name }}"
    name: "{{ vm_name }}"
    schema: "vsphere"
    properties: ["config.hardware.memoryMB", "guest.disk", "overallStatus"]
  delegate_to: localhost
  register: facts


RETURN VALUES:

instance:
    description: metadata about the virtual machine
    returned: always
    type: dict
    sample: {
        "annotation": "",
        "current_snapshot": null,
        "customvalues": {},
        "guest_consolidation_needed": false,
        "guest_question": null,
        "guest_tools_status": "guestToolsNotRunning",
        "guest_tools_version": "10247",
        "hw_cores_per_socket": 1,
        "hw_datastores": [
            "ds_226_3"
        ],
        "hw_esxi_host": "10.76.33.226",
        "hw_eth0": {
            "addresstype": "assigned",
            "ipaddresses": null,
            "label": "Network adapter 1",
            "macaddress": "00:50:56:87:a5:9a",
            "macaddress_dash": "00-50-56-87-a5-9a",
            "portgroup_key": null,
            "portgroup_portkey": null,
            "summary": "VM Network"
        },
        "hw_files": [
            "[ds_226_3] ubuntu_t/ubuntu_t.vmx",
            "[ds_226_3] ubuntu_t/ubuntu_t.nvram",
            "[ds_226_3] ubuntu_t/ubuntu_t.vmsd",
            "[ds_226_3] ubuntu_t/vmware.log",
            "[ds_226_3] u0001/u0001.vmdk"
        ],
        "hw_folder": "/DC0/vm/Discovered virtual machine",
        "hw_guest_full_name": null,
        "hw_guest_ha_state": null,
        "hw_guest_id": null,
        "hw_interfaces": [
            "eth0"
        ],
        "hw_is_template": false,
        "hw_memtotal_mb": 1024,
        "hw_name": "ubuntu_t",
        "hw_power_status": "poweredOff",
        "hw_processor_count": 1,
        "hw_product_uuid": "4207072c-edd8-3bd5-64dc-903fd3a0db04",
        "hw_version": "vmx-13",
        "instance_uuid": "5007769d-add3-1e12-f1fe-225ae2a07caf",
        "ipv4": null,
        "ipv6": null,
        "module_hw": true,
        "snapshots": [],
        "tags": [
            "backup"
        ],
        "vnc": {}
    }

