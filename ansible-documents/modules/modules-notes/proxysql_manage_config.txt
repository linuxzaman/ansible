> PROXYSQL_MANAGE_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/database/proxysql/proxysql_manage_config.py)

        The [proxysql_global_variables] module writes the proxysql configuration settings between layers. Currently this module will
        always report a changed state, so should typically be used with WHEN however this will change in a future version when the
        CHECKSUM table commands are available for all tables in proxysql.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= action
        The supplied `action' combines with the supplied `direction' to provide the semantics of how we want to move the
        `config_settings' between the `config_layers'.
        (Choices: LOAD, SAVE)

- config_file
        Specify a config file from which `login_user' and `login_password' are to be read.
        [Default: ]
        type: path

= config_layer
        RUNTIME - represents the in-memory data structures of ProxySQL used by the threads that are handling the requests. MEMORY -
        (sometimes also referred as main) represents the in-memory SQLite3 database. DISK - represents the on-disk SQLite3 database.
        CONFIG - is the classical config file. You can only LOAD FROM the config file.
        (Choices: MEMORY, DISK, RUNTIME, CONFIG)

= config_settings
        The `config_settings' specifies which configuration we're writing.
        (Choices: MYSQL USERS, MYSQL SERVERS, MYSQL QUERY RULES, MYSQL VARIABLES, ADMIN VARIABLES, SCHEDULER)

= direction
        FROM - denotes we're reading values FROM the supplied `config_layer' and writing to the next layer. TO - denotes we're reading
        from the previous layer and writing TO the supplied `config_layer'."
        (Choices: FROM, TO)

- login_host
        The host used to connect to ProxySQL admin interface.
        [Default: 127.0.0.1]
        type: str

- login_password
        The password used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str

- login_port
        The port used to connect to ProxySQL admin interface.
        [Default: 6032]
        type: int

- login_user
        The username used to authenticate to ProxySQL admin interface.
        [Default: (null)]
        type: str


REQUIREMENTS:  PyMySQL (Python 2.7 and Python 3.X), or, MySQLdb (Python 2.x)

AUTHOR: Ben Mildren (@bmildren)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

---
# This example saves the mysql users config from memory to disk. It uses
# supplied credentials to connect to the proxysql admin interface.

- proxysql_manage_config:
    login_user: 'admin'
    login_password: 'admin'
    action: "SAVE"
    config_settings: "MYSQL USERS"
    direction: "FROM"
    config_layer: "MEMORY"

# This example loads the mysql query rules config from memory to to runtime. It
# uses supplied credentials to connect to the proxysql admin interface.

- proxysql_manage_config:
    config_file: '~/proxysql.cnf'
    action: "LOAD"
    config_settings: "MYSQL QUERY RULES"
    direction: "TO"
    config_layer: "RUNTIME"


RETURN VALUES:

stdout:
    description: Simply reports whether the action reported a change.
    returned: Currently the returned value with always be changed=True.
    type: dict
    "sample": {
        "changed": true
    }

