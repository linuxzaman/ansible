> AZURE_RM_WEBAPP_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/azure/azure_rm_webapp_facts.py)

        Get facts for a specific web app or all web app in a resource group, or all web app in current subscription.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- ad_user
        Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]
        type: str

- adfs_authority_url
        Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
        [Default: (null)]
        type: str
        version_added: 2.6

- api_profile
        Selects an API profile to use when communicating with Azure services. Default value of `latest' is appropriate for public clouds;
        future values will allow use with Azure Stack.
        [Default: latest]
        type: str
        version_added: 2.5

- auth_source
        Controls the source of the credentials to use for authentication.
        If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to `auto' if variable is not defined.
        `auto' will follow the default precedence of module parameters -> environment variables -> default profile in credential file
        `~/.azure/credentials'.
        When set to `cli', the credentials will be sources from the default Azure CLI profile.
        Can also be set via the `ANSIBLE_AZURE_AUTH_SOURCE' environment variable.
        When set to `msi', the host machine must be an azure resource with an enabled MSI extension. `subscription_id' or the environment
        variable `AZURE_SUBSCRIPTION_ID' can be used to identify the subscription ID if the resource is granted access to more than one
        subscription, otherwise the first subscription is chosen.
        The `msi' was added in Ansible 2.6.
        (Choices: auto, cli, credential_file, env, msi)[Default: (null)]
        type: str
        version_added: 2.5

- cert_validation_mode
        Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate,
        but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing `ignore'. Can
        also be set via credential file profile or the `AZURE_CERT_VALIDATION' environment variable.
        (Choices: ignore, validate)[Default: (null)]
        type: str
        version_added: 2.5

- client_id
        Azure client ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- cloud_environment
        For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg,
        `AzureChinaCloud', `AzureUSGovernment'), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via
        credential file profile or the `AZURE_CLOUD_ENVIRONMENT' environment variable.
        [Default: AzureCloud]
        type: str
        version_added: 2.4

- name
        Only show results for a specific web app.
        [Default: (null)]

- password
        Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]

- profile
        Security profile found in ~/.azure/credentials file.
        [Default: (null)]
        type: str

- resource_group
        Limit results by resource group.
        [Default: (null)]

- return_publish_profile
        Indicate whether to return publishing profile of the web app.
        [Default: False]
        type: bool

- secret
        Azure client secret. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- subscription_id
        Your Azure subscription Id.
        [Default: (null)]
        type: str

- tags
        Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
        [Default: (null)]

- tenant
        Azure tenant ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str


NOTES:
      * For authentication with Azure you can pass parameters, set environment variables, use a profile stored in
        ~/.azure/credentials, or log in before you run your tasks or playbook with `az login'.
      * Authentication is also possible using a service principal or Active Directory user.
      * To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables
        AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
      * To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the
        environment.
      * Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and
        the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also
        possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.


SEE ALSO:
      * Sign in with Azure CLI
           How to authenticate using the `az login' command.
           https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest


REQUIREMENTS:  python >= 2.7, azure >= 2.0.0

AUTHOR: Yunge Zhu (@yungezz)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Get facts for web app by name
      azure_rm_webapp_facts:
        resource_group: myResourceGroup
        name: winwebapp1

    - name: Get facts for web apps in resource group
      azure_rm_webapp_facts:
        resource_group: myResourceGroup

    - name: Get facts for web apps with tags
      azure_rm_webapp_facts:
        tags:
          - testtag
          - foo:bar


RETURN VALUES:

webapps:
    description: List of web apps.
    returned: always
    type: complex
    contains:
        id:
            description:
                - Id of the web app.
            returned: always
            type: str
            sample: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Web/sites/xx
        name:
            description:
                - Name of the web app.
            returned: always
            type: str
        resource_group:
            description:
                - Resource group of the web app.
            returned: always
            type: str
            sample: myResourceGroup
        location:
            description:
                - Location of the web app.
            returned: always
            type: str
        plan:
            description:
                - Id of app service plan used by the web app.
            returned: always
            type: str
            sample: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Web/serverfarms/xxx
        app_settings:
            description:
                - App settings of the application. Only returned when web app has app settings.
            type: complex
        frameworks:
            description:
                - Frameworks of the application. Only returned when web app has frameworks.
            type: complex
        availability_state:
            description: Availability of this web app.
            type: str
        default_host_name:
            description: Host name of the web app.
            type: str
        enabled:
            description: Indicates the web app enabled or not.
            type: bool
        enabled_host_names:
            description: Enabled host names of the web app.
            type: list
        host_name_ssl_states:
            description: SSL state per host names of the web app.
            type: list
        host_names:
            description: Host names of the web app.
            type: list
        outbound_ip_addresses:
            description: Outbound ip address of the web app.
            type: str
        ftp_publish_url:
            description: Publishing url of the web app when deployment type is FTP.
            type: str
            sample: ftp://xxxx.ftp.azurewebsites.windows.net
        state:
            description: State of the web app.  eg. running.
            type: str
        publishing_username:
            description: Publishing profile user name.
            returned: only when I(return_publish_profile) is True.
            type: str
        publishing_password:
            description: Publishing profile password.
            returned: only when I(return_publish_profile) is True.
            type: str
        tags:
            description: Tags assigned to the resource. Dictionary of string:string pairs.
            type: dict
            sample: { tag1: abc }

