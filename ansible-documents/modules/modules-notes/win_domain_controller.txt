> WIN_DOMAIN_CONTROLLER    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_domain_controller.py)

        Ensure that a Windows Server 2012+ host is configured as a domain controller or demoted to member server. This module may require
        subsequent use of the [win_reboot] action if changes are made.

  * This module is maintained by The Ansible Core Team
OPTIONS (= is mandatory):

- database_path
        The path to a directory on a fixed disk of the Windows host where the domain database will be created..
        If not set then the default path is `%SYSTEMROOT%\NTDS'.
        [Default: (null)]
        type: path
        version_added: 2.5

- dns_domain_name
        When `state' is `domain_controller', the DNS name of the domain for which the targeted Windows host should be a DC.
        [Default: (null)]
        type: str

= domain_admin_password
        Password for the specified `domain_admin_user'.

        type: str

= domain_admin_user
        Username of a domain admin for the target domain (necessary to promote or demote a domain controller).

        type: str

- local_admin_password
        Password to be assigned to the local `Administrator' user (required when `state' is `member_server').
        [Default: (null)]
        type: str

- read_only
        Whether to install the domain controller as a read only replica for an existing domain.
        [Default: False]
        type: bool
        version_added: 2.5

- safe_mode_password
        Safe mode password for the domain controller (required when `state' is `domain_controller').
        [Default: (null)]
        type: str

- site_name
        Specifies the name of an existing site where you can place the new domain controller.
        This option is required when `read_only' is `yes'.
        [Default: (null)]
        type: str
        version_added: 2.5

- state
        Whether the target host should be a domain controller or a member server.
        (Choices: domain_controller, member_server)[Default: (null)]
        type: str

- sysvol_path
        The path to a directory on a fixed disk of the Windows host where the Sysvol folder will be created.
        If not set then the default path is `%SYSTEMROOT%\SYSVOL'.
        [Default: (null)]
        type: path
        version_added: 2.5


SEE ALSO:
      * Module win_domain
           The official documentation on the win_domain module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_module.html
      * Module win_domain_computer
           The official documentation on the win_domain_computer module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_computer_module.html
      * Module win_domain_group
           The official documentation on the win_domain_group module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_group_module.html
      * Module win_domain_membership
           The official documentation on the win_domain_membership module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_membership_module.html
      * Module win_domain_user
           The official documentation on the win_domain_user module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_user_module.html


AUTHOR: Matt Davis (@nitzmahone)
        METADATA:
          status:
          - preview
          supported_by: core
        

EXAMPLES:

- name: Ensure a server is a domain controller
  win_domain_controller:
    dns_domain_name: ansible.vagrant
    domain_admin_user: testguy@ansible.vagrant
    domain_admin_password: password123!
    safe_mode_password: password123!
    state: domain_controller
    log_path: C:\ansible_win_domain_controller.txt

# ensure a server is not a domain controller
# note that without an action wrapper, in the case where a DC is demoted,
# the task will fail with a 401 Unauthorized, because the domain credential
# becomes invalid to fetch the final output over WinRM. This requires win_async
# with credential switching (or other clever credential-switching
# mechanism to get the output and trigger the required reboot)
- win_domain_controller:
    domain_admin_user: testguy@ansible.vagrant
    domain_admin_password: password123!
    local_admin_password: password123!
    state: member_server
    log_path: C:\ansible_win_domain_controller.txt

- name: Promote server as a read only domain controller
  win_domain_controller:
    dns_domain_name: ansible.vagrant
    domain_admin_user: testguy@ansible.vagrant
    domain_admin_password: password123!
    safe_mode_password: password123!
    state: domain_controller
    read_only: yes
    site_name: London


RETURN VALUES:

reboot_required:
    description: True if changes were made that require a reboot.
    returned: always
    type: bool
    sample: true

