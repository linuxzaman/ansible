> VMWARE_DRS_GROUP_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_drs_group_facts.py)

        This module can be used to gather facts about DRS VM/HOST groups from the given cluster.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- cluster_name
        Cluster to search for VM/Host groups.
        If set, facts of DRS groups belonging this cluster will be returned.
        Not needed if `datacenter' is set.
        [Default: (null)]

= datacenter
        Datacenter to search for DRS VM/Host groups.
        (Aliases: datacenter_name)

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.5 and 6.7


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Karsten Kaj Jakobsen (@karstenjakobsen)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
- name: "Gather DRS facts about given Cluster"
  register: cluster_drs_group_facts
  vmware_drs_group_facts:
    hostname: "{{ vcenter_hostname }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    cluster_name: "{{ cluster_name }}"
    datacenter: "{{ datacenter }}"
  delegate_to: localhost

- name: "Gather DRS group facts about all clusters in given datacenter"
  register: cluster_drs_group_facts
  vmware_drs_group_facts:
    hostname: "{{ vcenter_hostname }}"
    password: "{{ vcenter_password }}"
    username: "{{ vcenter_username }}"
    datacenter: "{{ datacenter }}"
  delegate_to: localhost


RETURN VALUES:

drs_group_facts:
    description: Metadata about DRS group from given cluster / datacenter
    returned: always
    type: dict
    sample:
        "drs_group_facts": {
            "DC0_C0": [
                {
                    "group_name": "GROUP_HOST_S01",
                    "hosts": [
                        "vm-01.zone",
                        "vm-02.zone"
                    ],
                    "type": "host"
                },
                {
                    "group_name": "GROUP_HOST_S02",
                    "hosts": [
                        "vm-03.zone",
                        "vm-04.zone"
                    ],
                    "type": "host"
                },
                {
                    "group_name": "GROUP_VM_S01",
                    "type": "vm",
                    "vms": [
                        "test-node01"
                    ]
                },
                {
                    "group_name": "GROUP_VM_S02",
                    "type": "vm",
                    "vms": [
                        "test-node02"
                    ]
                }
            ],
            "DC0_C1": []
        }

