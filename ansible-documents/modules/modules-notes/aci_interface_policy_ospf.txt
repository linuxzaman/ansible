> ACI_INTERFACE_POLICY_OSPF    (/usr/lib/python2.7/dist-packages/ansible/modules/network/aci/aci_interface_policy_ospf.py)

        Manage OSPF interface policies on Cisco ACI fabrics.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- certificate_name
        The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
        If a `private_key' filename was provided, this defaults to the `private_key' basename, without extension.
        If PEM-formatted content was provided for `private_key', this defaults to the `username' value.
        (Aliases: cert_name)[Default: (null)]
        type: str

- controls
        The interface policy controls.
        This is a list of one or more of the following controls:
        `advert-subnet' -- Advertise IP subnet instead of a host mask in the router LSA.
        `bfd' -- Bidirectional Forwarding Detection
        `mtu-ignore' -- Disables MTU mismatch detection on an interface.
        `passive' -- The interface does not participate in the OSPF protocol and will not establish adjacencies or send routing updates.
        However the interface is announced as part of the routing network.
        (Choices: advert-subnet, bfd, mtu-ignore, passive)[Default: (null)]
        type: list

- cost
        The OSPF cost of the interface.
        The cost (also called metric) of an interface in OSPF is an indication of the overhead required to send packets across a certain
        interface. The cost of an interface is inversely proportional to the bandwidth of that interface. A higher bandwidth indicates a
        lower cost. There is more overhead (higher cost) and time delays involved in crossing a 56k serial line than crossing a 10M
        ethernet line. The formula used to calculate the cost is `cost= 10000 0000/bandwith in bps' For example, it will cost 10 EXP8/10
        EXP7 = 10 to cross a 10M Ethernet line and will cost 10 EXP8/1544000 = 64 to cross a T1 line.
        By default, the cost of an interface is calculated based on the bandwidth; you can force the cost of an interface with the ip
        ospf cost value interface subconfiguration mode command.
        Accepted values range between `1' and `450'.
        The APIC defaults to `0' when unset during creation.
        [Default: (null)]
        type: int

- dead_interval
        The interval between hello packets from a neighbor before the router declares the neighbor as down.
        This value must be the same for all networking devices on a specific network.
        Specifying a smaller dead interval (seconds) will give faster detection of a neighbor being down and improve convergence, but
        might cause more routing instability.
        Accepted values range between `1' and `65535'.
        The APIC defaults to `40' when unset during creation.
        [Default: (null)]
        type: int

- description
        The description for the OSPF interface.
        (Aliases: descr)[Default: (null)]
        type: str

- hello_interval
        The interval between hello packets that OSPF sends on the interface.
        Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue.
        This value must be the same for all routers and access servers on a specific network.
        Accepted values range between `1' and `65535'.
        The APIC defaults to `10' when unset during creation.
        [Default: (null)]
        type: int

= host
        IP Address or hostname of APIC resolvable by Ansible control host.
        (Aliases: hostname)
        type: str

- network_type
        The OSPF interface policy network type.
        OSPF supports broadcast and point-to-point.
        The APIC defaults to `unspecified' when unset during creation.
        (Choices: bcast, p2p)[Default: (null)]
        type: str

= ospf
        The OSPF interface policy name.
        This name can be between 1 and 64 alphanumeric characters.
        Note that you cannot change this name after the object has been saved.
        (Aliases: ospf_interface, name)
        type: str

- output_level
        Influence the output of this ACI module.
        `normal' means the standard output, incl. `current' dict
        `info' adds informational output, incl. `previous', `proposed' and `sent' dicts
        `debug' adds debugging output, incl. `filter_string', `method', `response', `status' and `url' information
        (Choices: debug, info, normal)[Default: normal]
        type: str

= password
        The password to use for authentication.
        This option is mutual exclusive with `private_key'. If `private_key' is provided too, it will be used instead.

        type: str

- port
        Port number to be used for REST connection.
        The default value depends on parameter `use_ssl'.
        [Default: (null)]
        type: int

- prefix_suppression
        Whether prefix suppressions is enabled or disabled.
        The APIC defaults to `inherit' when unset during creation.
        [Default: (null)]
        type: bool

- priority
        The priority for the OSPF interface profile.
        Accepted values ranges between `0' and `255'.
        The APIC defaults to `1' when unset during creation.
        [Default: (null)]
        type: int

= private_key
        Either a PEM-formatted private key file or the private key content used for signature-based authentication.
        This value also influences the default `certificate_name' that is used.
        This option is mutual exclusive with `password'. If `password' is provided too, it will be ignored.
        (Aliases: cert_key)
        type: str

- retransmit_interval
        The interval between LSA retransmissions.
        The retransmit interval occurs while the router is waiting for an acknowledgement from the neighbor router that it received the
        LSA.
        If no acknowlegment is received at the end of the interval, then the LSA is resent.
        Accepted values range between `1' and `65535'.
        The APIC defaults to `5' when unset during creation.
        [Default: (null)]
        type: int

- state
        Use `present' or `absent' for adding or removing.
        Use `query' for listing an object or multiple objects.
        (Choices: absent, present, query)[Default: present]
        type: str

= tenant
        The name of the Tenant the OSPF interface policy should belong to.
        (Aliases: tenant_name)
        type: str

- timeout
        The socket level timeout in seconds.
        [Default: 30]
        type: int

- transmit_delay
        The delay time needed to send an LSA update packet.
        OSPF increments the LSA age time by the transmit delay amount before transmitting the LSA update.
        You should take into account the transmission and propagation delays for the interface when you set this value.
        Accepted values range between `1' and `450'.
        The APIC defaults to `1' when unset during creation.
        [Default: (null)]
        type: int

- use_proxy
        If `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts.
        [Default: True]
        type: bool

- use_ssl
        If `no', an HTTP connection will be used instead of the default HTTPS connection.
        [Default: True]
        type: bool

- username
        The username to use for authentication.
        (Aliases: user)[Default: admin]
        type: str

- validate_certs
        If `no', SSL certificates will not be validated.
        This should only set to `no' when used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool


SEE ALSO:
      * APIC Management Information Model reference
           More information about the internal APIC class *ospf:IfPol*.
           https://developer.cisco.com/docs/apic-mim-ref/
      * Ansible documentation [aci_guide]
           Detailed information on how to manage your ACI infrastructure using Ansible.
           https://docs.ansible.com/ansible/latest/#stq=aci_guide&stp=1
      * Ansible documentation [aci_dev_guide]
           Detailed guide on how to write your own Cisco ACI modules to contribute.
           https://docs.ansible.com/ansible/latest/#stq=aci_dev_guide&stp=1


AUTHOR: Dag Wieers (@dagwieers)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Ensure ospf interface policy exists
  aci_interface_policy_ospf:
    host: apic
    username: admin
    password: SomeSecretPassword
    tenant: production
    ospf: ospf1
    state: present
  delegate_to: localhost

- name: Ensure ospf interface policy does not exist
  aci_interface_policy_ospf:
    host: apic
    username: admin
    password: SomeSecretPassword
    tenant: production
    ospf: ospf1
    state: present
  delegate_to: localhost

- name: Query an ospf interface policy
  aci_interface_policy_ospf:
    host: apic
    username: admin
    password: SomeSecretPassword
    tenant: production
    ospf: ospf1
    state: query
  delegate_to: localhost
  register: query_result

- name: Query all ospf interface policies in tenant production
  aci_interface_policy_ospf:
    host: apic
    username: admin
    password: SomeSecretPassword
    tenant: production
    state: query
  delegate_to: localhost
  register: query_result


RETURN VALUES:

current:
  description: The existing configuration from the APIC after the module has finished
  returned: success
  type: list
  sample:
    [
        {
            "fvTenant": {
                "attributes": {
                    "descr": "Production environment",
                    "dn": "uni/tn-production",
                    "name": "production",
                    "nameAlias": "",
                    "ownerKey": "",
                    "ownerTag": ""
                }
            }
        }
    ]
error:
  description: The error information as returned from the APIC
  returned: failure
  type: dict
  sample:
    {
        "code": "122",
        "text": "unknown managed object class foo"
    }
raw:
  description: The raw output returned by the APIC REST API (xml or json)
  returned: parse error
  type: str
  sample: '<?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>'
sent:
  description: The actual/minimal configuration pushed to the APIC
  returned: info
  type: list
  sample:
    {
        "fvTenant": {
            "attributes": {
                "descr": "Production environment"
            }
        }
    }
previous:
  description: The original configuration from the APIC before the module has started
  returned: info
  type: list
  sample:
    [
        {
            "fvTenant": {
                "attributes": {
                    "descr": "Production",
                    "dn": "uni/tn-production",
                    "name": "production",
                    "nameAlias": "",
                    "ownerKey": "",
                    "ownerTag": ""
                }
            }
        }
    ]
proposed:
  description: The assembled configuration from the user-provided parameters
  returned: info
  type: dict
  sample:
    {
        "fvTenant": {
            "attributes": {
                "descr": "Production environment",
                "name": "production"
            }
        }
    }
filter_string:
  description: The filter string used for the request
  returned: failure or debug
  type: str
  sample: ?rsp-prop-include=config-only
method:
  description: The HTTP method used for the request to the APIC
  returned: failure or debug
  type: str
  sample: POST
response:
  description: The HTTP response from the APIC
  returned: failure or debug
  type: str
  sample: OK (30 bytes)
status:
  description: The HTTP status from the APIC
  returned: failure or debug
  type: int
  sample: 200
url:
  description: The HTTP url used for the request to the APIC
  returned: failure or debug
  type: str
  sample: https://10.11.12.13/api/mo/uni/tn-production.json

