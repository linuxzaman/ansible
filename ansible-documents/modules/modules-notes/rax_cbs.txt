> RAX_CBS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/rackspace/rax_cbs.py)

        Manipulate Rackspace Cloud Block Storage Volumes

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Rackspace API key, overrides `credentials'.
        (Aliases: password)[Default: (null)]

- auth_endpoint
        The URI of the authentication service.
        [Default: https://identity.api.rackspacecloud.com/v2.0/]
        version_added: 1.5

- credentials
        File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided.
        (Aliases: creds_file)[Default: (null)]

- description
        Description to give the volume being created
        [Default: (null)]

- env
        Environment as configured in `~/.pyrax.cfg', see https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-
        configuration.
        [Default: (null)]
        version_added: 1.5

- identity_type
        Authentication mechanism to use, such as rackspace or keystone.
        [Default: rackspace]
        version_added: 1.5

- image
        image to use for bootable volumes. Can be an `id', `human_id' or `name'. This option requires `pyrax>=1.9.3'
        [Default: (null)]
        version_added: 1.9
        

- meta
        A hash of metadata to associate with the volume
        [Default: (null)]

= name
        Name to give the volume being created


- region
        Region to create an instance in.
        [Default: DFW]

= size
        Size of the volume to create in Gigabytes
        [Default: 100]

- snapshot_id
        The id of the snapshot to create the volume from
        [Default: (null)]

= state
        Indicate desired state of the resource
        (Choices: present, absent)[Default: present]

- tenant_id
        The tenant ID used for authentication.
        [Default: (null)]
        version_added: 1.5

- tenant_name
        The tenant name used for authentication.
        [Default: (null)]
        version_added: 1.5

- username
        Rackspace username, overrides `credentials'.
        [Default: (null)]

- validate_certs
        Whether or not to require SSL validation of API endpoints.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool
        version_added: 1.5

= volume_type
        Type of the volume being created
        (Choices: SATA, SSD)[Default: SATA]

- wait
        wait for the volume to be in state 'available' before returning
        [Default: no]
        type: bool

- wait_timeout
        how long before wait gives up, in seconds
        [Default: 300]


NOTES:
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)


REQUIREMENTS:  python >= 2.6, pyrax

AUTHOR: Christopher H. Laco (@claco), Matt Martz (@sivel)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Build a Block Storage Volume
  gather_facts: False
  hosts: local
  connection: local
  tasks:
    - name: Storage volume create request
      local_action:
        module: rax_cbs
        credentials: ~/.raxpub
        name: my-volume
        description: My Volume
        volume_type: SSD
        size: 150
        region: DFW
        wait: yes
        state: present
        meta:
          app: my-cool-app
      register: my_volume


