> AVI_POOL    (/usr/lib/python2.7/dist-packages/ansible/modules/network/avi/avi_pool.py)

        This module is used to configure Pool object more examples at https://github.com/avinetworks/devops

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- a_pool
        Name of container cloud application that constitutes a pool in a a-b pool configuration, if different from vs app.
        [Default: (null)]

- ab_pool
        A/b pool configuration.
        [Default: (null)]

- ab_priority
        Priority of this pool in a a-b pool pair.
        Internally used.
        [Default: (null)]

- api_context
        Avi API context that includes current session ID and CSRF Token.
        This allows user to perform single login and re-use the session.
        [Default: (null)]
        type: dict
        version_added: 2.5

- api_version
        Avi API version of to use for Avi API and objects.
        [Default: 16.4.4]
        type: str

- apic_epg_name
        Synchronize cisco apic epg members with pool servers.
        [Default: (null)]

- application_persistence_profile_ref
        Persistence will ensure the same user sticks to the same server for a desired duration of time.
        It is a reference to an object of type applicationpersistenceprofile.
        [Default: (null)]

- autoscale_launch_config_ref
        If configured then avi will trigger orchestration of pool server creation and deletion.
        It is only supported for container clouds like mesos, opensift, kubernates, docker etc.
        It is a reference to an object of type autoscalelaunchconfig.
        [Default: (null)]

- autoscale_networks
        Network ids for the launch configuration.
        [Default: (null)]

- autoscale_policy_ref
        Reference to server autoscale policy.
        It is a reference to an object of type serverautoscalepolicy.
        [Default: (null)]

- avi_api_patch_op
        Patch operation to use when using avi_api_update_method as patch.
        (Choices: add, replace, delete)[Default: (null)]
        version_added: 2.5

- avi_api_update_method
        Default method for object update is HTTP PUT.
        Setting to patch will override that behavior to use HTTP PATCH.
        (Choices: put, patch)[Default: put]
        version_added: 2.5

- avi_credentials
        Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details.
        [Default: (null)]
        type: dict
        version_added: 2.5

- capacity_estimation
        Inline estimation of capacity of servers.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- capacity_estimation_ttfb_thresh
        The maximum time-to-first-byte of a server.
        Allowed values are 1-5000.
        Special values are 0 - 'automatic'.
        Default value when not specified in API or module is interpreted by Avi Controller as 0.
        Units(MILLISECONDS).
        [Default: (null)]

- cloud_config_cksum
        Checksum of cloud configuration for pool.
        Internally set by cloud connector.
        [Default: (null)]

- cloud_ref
        It is a reference to an object of type cloud.
        [Default: (null)]

- connection_ramp_duration
        Duration for which new connections will be gradually ramped up to a server recently brought online.
        Useful for lb algorithms that are least connection based.
        Allowed values are 1-300.
        Special values are 0 - 'immediate'.
        Default value when not specified in API or module is interpreted by Avi Controller as 10.
        Units(MIN).
        [Default: (null)]

- controller
        IP address or hostname of the controller. The default value is the environment variable `AVI_CONTROLLER'.
        [Default: ]
        type: str

- created_by
        Creator name.
        [Default: (null)]

- default_server_port
        Traffic sent to servers will use this destination server port unless overridden by the server's specific port attribute.
        The ssl checkbox enables avi to server encryption.
        Allowed values are 1-65535.
        Default value when not specified in API or module is interpreted by Avi Controller as 80.
        [Default: (null)]

- description
        A description of the pool.
        [Default: (null)]

- domain_name
        Comma separated list of domain names which will be used to verify the common names or subject alternative names presented by
        server certificates.
        It is performed only when common name check host_check_enabled is enabled.
        [Default: (null)]

- east_west
        Inherited config from virtualservice.
        [Default: (null)]
        type: bool

- enabled
        Enable or disable the pool.
        Disabling will terminate all open connections and pause health monitors.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- external_autoscale_groups
        Names of external auto-scale groups for pool servers.
        Currently available only for aws and azure.
        Field introduced in 17.1.2.
        [Default: (null)]

- fail_action
        Enable an action - close connection, http redirect or local http response - when a pool failure happens.
        By default, a connection will be closed, in case the pool experiences a failure.
        [Default: (null)]

- fewest_tasks_feedback_delay
        Periodicity of feedback for fewest tasks server selection algorithm.
        Allowed values are 1-300.
        Default value when not specified in API or module is interpreted by Avi Controller as 10.
        Units(SEC).
        [Default: (null)]

- graceful_disable_timeout
        Used to gracefully disable a server.
        Virtual service waits for the specified time before terminating the existing connections  to the servers that are disabled.
        Allowed values are 1-7200.
        Special values are 0 - 'immediate', -1 - 'infinite'.
        Default value when not specified in API or module is interpreted by Avi Controller as 1.
        Units(MIN).
        [Default: (null)]

- gslb_sp_enabled
        Indicates if the pool is a site-persistence pool.
        Field introduced in 17.2.1.
        [Default: (null)]
        type: bool
        version_added: 2.5

- health_monitor_refs
        Verify server health by applying one or more health monitors.
        Active monitors generate synthetic traffic from each service engine and mark a server up or down based on the response.
        The passive monitor listens only to client to server communication.
        It raises or lowers the ratio of traffic destined to a server based on successful responses.
        It is a reference to an object of type healthmonitor.
        [Default: (null)]

- host_check_enabled
        Enable common name check for server certificate.
        If enabled and no explicit domain name is specified, avi will use the incoming host header to do the match.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- inline_health_monitor
        The passive monitor will monitor client to server connections and requests and adjust traffic load to servers based on successful
        responses.
        This may alter the expected behavior of the lb method, such as round robin.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- ipaddrgroup_ref
        Use list of servers from ip address group.
        It is a reference to an object of type ipaddrgroup.
        [Default: (null)]

- lb_algorithm
        The load balancing algorithm will pick a server within the pool's list of available servers.
        Enum options - LB_ALGORITHM_LEAST_CONNECTIONS, LB_ALGORITHM_ROUND_ROBIN, LB_ALGORITHM_FASTEST_RESPONSE,
        LB_ALGORITHM_CONSISTENT_HASH,
        LB_ALGORITHM_LEAST_LOAD, LB_ALGORITHM_FEWEST_SERVERS, LB_ALGORITHM_RANDOM, LB_ALGORITHM_FEWEST_TASKS,
        LB_ALGORITHM_NEAREST_SERVER,
        LB_ALGORITHM_CORE_AFFINITY.
        Default value when not specified in API or module is interpreted by Avi Controller as LB_ALGORITHM_LEAST_CONNECTIONS.
        [Default: (null)]

- lb_algorithm_consistent_hash_hdr
        Http header name to be used for the hash key.
        [Default: (null)]

- lb_algorithm_core_nonaffinity
        Degree of non-affinity for core afffinity based server selection.
        Allowed values are 1-65535.
        Field introduced in 17.1.3.
        Default value when not specified in API or module is interpreted by Avi Controller as 2.
        [Default: (null)]
        version_added: 2.4

- lb_algorithm_hash
        Criteria used as a key for determining the hash between the client and  server.
        Enum options - LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS, LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT,
        LB_ALGORITHM_CONSISTENT_HASH_URI, LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_HEADER, LB_ALGORITHM_CONSISTENT_HASH_CUSTOM_STRING.
        Default value when not specified in API or module is interpreted by Avi Controller as
        LB_ALGORITHM_CONSISTENT_HASH_SOURCE_IP_ADDRESS.
        [Default: (null)]

- lookup_server_by_name
        Allow server lookup by name.
        Field introduced in 17.1.11,17.2.4.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool
        version_added: 2.5

- max_concurrent_connections_per_server
        The maximum number of concurrent connections allowed to each server within the pool.
        Note  applied value will be no less than the number of service engines that the pool is placed on.
        If set to 0, no limit is applied.
        Default value when not specified in API or module is interpreted by Avi Controller as 0.
        [Default: (null)]

- max_conn_rate_per_server
        Rate limit connections to each server.
        [Default: (null)]

= name
        The name of the pool.


- networks
        (internal-use) networks designated as containing servers for this pool.
        The servers may be further narrowed down by a filter.
        This field is used internally by avi, not editable by the user.
        [Default: (null)]

- nsx_securitygroup
        A list of nsx service groups where the servers for the pool are created.
        Field introduced in 17.1.1.
        [Default: (null)]

- password
        Password of Avi user in Avi controller. The default value is the environment variable `AVI_PASSWORD'.
        [Default: ]
        type: str

- pki_profile_ref
        Avi will validate the ssl certificate present by a server against the selected pki profile.
        It is a reference to an object of type pkiprofile.
        [Default: (null)]

- placement_networks
        Manually select the networks and subnets used to provide reachability to the pool's servers.
        Specify the subnet using the following syntax  10-1-1-0/24.
        Use static routes in vrf configuration when pool servers are not directly connected butroutable from the service engine.
        [Default: (null)]

- prst_hdr_name
        Header name for custom header persistence.
        [Default: (null)]

- request_queue_depth
        Minimum number of requests to be queued when pool is full.
        Default value when not specified in API or module is interpreted by Avi Controller as 128.
        [Default: (null)]

- request_queue_enabled
        Enable request queue when pool is full.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- rewrite_host_header_to_server_name
        Rewrite incoming host header to server name of the server to which the request is proxied.
        Enabling this feature rewrites host header for requests to all servers in the pool.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- rewrite_host_header_to_sni
        If sni server name is specified, rewrite incoming host header to the sni server name.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- server_auto_scale
        Server autoscale.
        Not used anymore.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- server_count
        Number of server_count.
        Default value when not specified in API or module is interpreted by Avi Controller as 0.
        [Default: (null)]

- server_name
        Fully qualified dns hostname which will be used in the tls sni extension in server connections if sni is enabled.
        If no value is specified, avi will use the incoming host header instead.
        [Default: (null)]

- server_reselect
        Server reselect configuration for http requests.
        [Default: (null)]

- servers
        The pool directs load balanced traffic to this list of destination servers.
        The servers can be configured by ip address, name, network or via ip address group.
        [Default: (null)]

- sni_enabled
        Enable tls sni for server connections.
        If disabled, avi will not send the sni extension as part of the handshake.
        Default value when not specified in API or module is interpreted by Avi Controller as True.
        [Default: (null)]
        type: bool

- ssl_key_and_certificate_ref
        Service engines will present a client ssl certificate to the server.
        It is a reference to an object of type sslkeyandcertificate.
        [Default: (null)]

- ssl_profile_ref
        When enabled, avi re-encrypts traffic to the backend servers.
        The specific ssl profile defines which ciphers and ssl versions will be supported.
        It is a reference to an object of type sslprofile.
        [Default: (null)]

- state
        The state that should be applied on the entity.
        (Choices: absent, present)[Default: present]

- tenant
        Name of tenant used for all Avi API calls and context of object.
        [Default: admin]
        type: str

- tenant_ref
        It is a reference to an object of type tenant.
        [Default: (null)]

- tenant_uuid
        UUID of tenant used for all Avi API calls and context of object.
        [Default: ]
        type: str

- url
        Avi controller URL of the object.
        [Default: (null)]

- use_service_port
        Do not translate the client's destination port when sending the connection to the server.
        The pool or servers specified service port will still be used for health monitoring.
        Default value when not specified in API or module is interpreted by Avi Controller as False.
        [Default: (null)]
        type: bool

- username
        Username used for accessing Avi controller. The default value is the environment variable `AVI_USERNAME'.
        [Default: ]
        type: str

- uuid
        Uuid of the pool.
        [Default: (null)]

- vrf_ref
        Virtual routing context that the pool is bound to.
        This is used to provide the isolation of the set of networks the pool is attached to.
        The pool inherits the virtual routing conext of the virtual service, and this field is used only internally, and is set by pb-
        transform.
        It is a reference to an object of type vrfcontext.
        [Default: (null)]


NOTES:
      * For more information on using Ansible to manage Avi Network devices see https://www.ansible.com/ansible-avi-networks.


REQUIREMENTS:  avisdk

AUTHOR: Gaurav Rastogi (@grastogi23) <grastogi@avinetworks.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a Pool with two servers and HTTP monitor
  avi_pool:
    controller: 10.10.1.20
    username: avi_user
    password: avi_password
    name: testpool1
    description: testpool1
    state: present
    health_monitor_refs:
        - '/api/healthmonitor?name=System-HTTP'
    servers:
        - ip:
            addr: 10.10.2.20
            type: V4
        - ip:
            addr: 10.10.2.21
            type: V4

- name: Patch pool with a single server using patch op and avi_credentials
  avi_pool:
    avi_api_update_method: patch
    avi_api_patch_op: delete
    avi_credentials: "{{avi_credentials}}"
    name: test-pool
    servers:
      - ip:
        addr: 10.90.64.13
        type: 'V4'
  register: pool
  when:
    - state | default("present") == "present"


RETURN VALUES:

obj:
    description: Pool (api/pool) object
    returned: success, changed
    type: dict

