> RAX_MON_CHECK    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/rackspace/rax_mon_check.py)

        Create or delete a Rackspace Cloud Monitoring check associated with an existing rax_mon_entity. A check is a specific test or
        measurement that is performed, possibly from different monitoring zones, on the systems you monitor. Rackspace monitoring module
        flow | rax_mon_entity -> *rax_mon_check* -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_key
        Rackspace API key, overrides `credentials'.
        (Aliases: password)[Default: (null)]

- auth_endpoint
        The URI of the authentication service.
        [Default: https://identity.api.rackspacecloud.com/v2.0/]
        version_added: 1.5

= check_type
        The type of check to create. `remote.' checks may be created on any rax_mon_entity. `agent.' checks may only be created on
        rax_mon_entities that have a non-null `agent_id'.
        (Choices: remote.dns, remote.ftp-banner, remote.http, remote.imap-banner, remote.mssql-banner, remote.mysql-banner, remote.ping,
        remote.pop3-banner, remote.postgresql-banner, remote.smtp-banner, remote.smtp, remote.ssh, remote.tcp, remote.telnet-banner,
        agent.filesystem, agent.memory, agent.load_average, agent.cpu, agent.disk, agent.network, agent.plugin)

- credentials
        File to find the Rackspace credentials in. Ignored if `api_key' and `username' are provided.
        (Aliases: creds_file)[Default: (null)]

- details
        Additional details specific to the check type. Must be a hash of strings between 1 and 255 characters long, or an array or object
        containing 0 to 256 items.
        [Default: (null)]

- disabled
        If "yes", ensure the check is created, but don't actually use it yet.
        [Default: (null)]
        type: bool

= entity_id
        ID of the rax_mon_entity to target with this check.


- env
        Environment as configured in `~/.pyrax.cfg', see https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-
        configuration.
        [Default: (null)]
        version_added: 1.5

- identity_type
        Authentication mechanism to use, such as rackspace or keystone.
        [Default: rackspace]
        version_added: 1.5

= label
        Defines a label for this check, between 1 and 64 characters long.


- metadata
        Hash of arbitrary key-value pairs to accompany this check if it fires. Keys and values must be strings between 1 and 255
        characters long.
        [Default: (null)]

- monitoring_zones_poll
        Comma-separated list of the names of the monitoring zones the check should run from. Available monitoring zones include mzdfw,
        mzhkg, mziad, mzlon, mzord and mzsyd. Required for remote.* checks; prohibited for agent.* checks.
        [Default: (null)]

- period
        The number of seconds between each time the check is performed. Must be greater than the minimum period set on your account.
        [Default: (null)]

- region
        Region to create an instance in.
        [Default: DFW]

- state
        Ensure that a check with this `label' exists or does not exist.
        (Choices: present, absent)[Default: (null)]

- target_alias
        One of `target_alias` and `target_hostname` is required for remote.* checks, but prohibited for agent.* checks. Use the
        corresponding key in the entity's `ip_addresses` hash to resolve an IP address to target.
        [Default: (null)]

- target_hostname
        One of `target_hostname` and `target_alias` is required for remote.* checks, but prohibited for agent.* checks. The hostname this
        check should target. Must be a valid IPv4, IPv6, or FQDN.
        [Default: (null)]

- tenant_id
        The tenant ID used for authentication.
        [Default: (null)]
        version_added: 1.5

- tenant_name
        The tenant name used for authentication.
        [Default: (null)]
        version_added: 1.5

- timeout
        The number of seconds this check will wait when attempting to collect results. Must be less than the period.
        [Default: (null)]

- username
        Rackspace username, overrides `credentials'.
        [Default: (null)]

- validate_certs
        Whether or not to require SSL validation of API endpoints.
        (Aliases: verify_ssl)[Default: (null)]
        type: bool
        version_added: 1.5


NOTES:
      * The following environment variables can be used, `RAX_USERNAME', `RAX_API_KEY', `RAX_CREDS_FILE', `RAX_CREDENTIALS',
        `RAX_REGION'.
      * `RAX_CREDENTIALS' and `RAX_CREDS_FILE' points to a credentials file appropriate for pyrax. See
        https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating
      * `RAX_USERNAME' and `RAX_API_KEY' obviate the use of a credentials file
      * `RAX_REGION' defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)


REQUIREMENTS:  python >= 2.6, pyrax

AUTHOR: Ash Wilson (@smashwilson)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create a monitoring check
  gather_facts: False
  hosts: local
  connection: local
  tasks:
  - name: Associate a check with an existing entity.
    rax_mon_check:
      credentials: ~/.rax_pub
      state: present
      entity_id: "{{ the_entity['entity']['id'] }}"
      label: the_check
      check_type: remote.ping
      monitoring_zones_poll: mziad,mzord,mzdfw
      details:
        count: 10
      meta:
        hurf: durf
    register: the_check


