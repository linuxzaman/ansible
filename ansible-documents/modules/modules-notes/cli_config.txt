> CLI_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/cli/cli_config.py)

        This module provides platform agnostic way of pushing text based configuration to network devices over network_cli connection
        plugin.

  * This module is maintained by The Ansible Network Team
  * note: This module has a corresponding action plugin.

OPTIONS (= is mandatory):

- backup
        This argument will cause the module to create a full backup of the current running config from the remote device before any
        changes are made. If the `backup_options' value is not given, the backup file is written to the `backup' folder in the playbook
        root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.
        [Default: no]
        type: bool
        version_added: 2.8

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `yes', if `backup' is set to `no' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exist it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
        
        type: dict
        version_added: 2.8

- commit
        The `commit' argument instructs the module to push the configuration to the device. This is mapped to module check mode.
        [Default: (null)]
        type: bool

- commit_comment
        The `commit_comment' argument specifies a text string to be used when committing the configuration. If the `commit' argument is
        set to False, this argument is silently ignored. This argument is only valid for the platforms that support commit operation with
        comment.
        [Default: (null)]
        type: str

- config
        The config to be pushed to the network device. This argument is mutually exclusive with `rollback' and either one of the option
        should be given as input. The config should have indentation that the device uses.
        [Default: (null)]
        type: str

- defaults
        The `defaults' argument will influence how the running-config is collected from the device.  When the value is set to true, the
        command used to collect the running-config is append with the all keyword.  When the value is set to false, the command is issued
        without the all keyword.
        [Default: no]
        type: bool

- diff_ignore_lines
        Use this argument to specify one or more lines that should be ignored during the diff. This is used for lines in the
        configuration that are automatically updated by the system. This argument takes a list of regular expressions or exact line
        matches. Note that this parameter will be ignored if the platform has onbox diff support.
        [Default: (null)]

- diff_match
        Instructs the module on the way to perform the matching of the set of commands against the current device config. If `diff_match'
        is set to `line', commands are matched line by line. If `diff_match' is set to `strict', command lines are matched with respect
        to position. If `diff_match' is set to `exact', command lines must be an equal match. Finally, if `diff_match' is set to `none',
        the module will not attempt to compare the source configuration with the running configuration on the remote device. Note that
        this parameter will be ignored if the platform has onbox diff support.
        (Choices: line, strict, exact, none)[Default: (null)]

- diff_replace
        Instructs the module on the way to perform the configuration on the device. If the `diff_replace' argument is set to `line' then
        the modified lines are pushed to the device in configuration mode. If the argument is set to `block' then the entire command
        block is pushed to the device in configuration mode if any line is not correct. Note that this parameter will be ignored if the
        platform has onbox diff support.
        (Choices: line, block, config)[Default: (null)]

- multiline_delimiter
        This argument is used when pushing a multiline configuration element to the device. It specifies the character to use as the
        delimiting character. This only applies to the configuration action.
        [Default: (null)]
        type: str

- replace
        If the `replace' argument is set to `yes', it will replace the entire running-config of the device with the `config' argument
        value. For NXOS devices, `replace' argument takes path to the file on the device that will be used for replacing the entire
        running-config. Nexus 9K devices only support replace. Use `net_put' or `nxos_file_copy' module to copy the flat file to remote
        device and then use set the fullpath to this argument.
        [Default: (null)]
        type: str

- rollback
        The `rollback' argument instructs the module to rollback the current configuration to the identifier specified in the argument.
        If the specified rollback identifier does not exist on the remote device, the module will fail. To rollback to the most recent
        commit, set the `rollback' argument to 0. This option is mutually exclusive with `config'.
        [Default: (null)]


NOTES:
      * This module is supported on `ansible_network_os' network platforms. See the :ref:`Network Platform Options
        <platform_options>` for details.


AUTHOR: Trishna Guha (@trishnaguha)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: configure device with config
  cli_config:
    config: "{{ lookup('template', 'basic/config.j2') }}"

- name: multiline config
  cli_config:
    config: |
      hostname foo
      feature nxapi

- name: configure device with config with defaults enabled
  cli_config:
    config: "{{ lookup('template', 'basic/config.j2') }}"
    defaults: yes

- name: Use diff_match
  cli_config:
    config: "{{ lookup('file', 'interface_config') }}"
    diff_match: none

- name: nxos replace config
  cli_config:
    replace: 'bootflash:nxoscfg'

- name: commit with comment
  cli_config:
    config: set system host-name foo
    commit_comment: this is a test

- name: configurable backup path
  cli_config:
    config: "{{ lookup('template', 'basic/config.j2') }}"
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user


RETURN VALUES:

commands:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['interface Loopback999', 'no shutdown']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/hostname_config.2016-07-16@22:28:34

