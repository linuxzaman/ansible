> GCP_COMPUTE_INSTANCE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/google/gcp_compute_instance.py)

        An instance is a virtual machine (VM) hosted on Google's infrastructure.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= auth_kind
        The type of credential used.
        (Choices: application, machineaccount, serviceaccount)
        type: str

- can_ip_forward
        Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use
        this instance to forward routes.
        (Aliases: ip_forward)[Default: (null)]
        type: bool

- disks
        An array of disks that are associated with the instances that are created from this template.
        [Default: (null)]
        suboptions:
          auto_delete:
            description:
            - Specifies whether the disk will be auto-deleted when the instance is deleted
              (but not when the disk is detached from the instance).
            - 'Tip: Disks should be set to autoDelete=true so that leftover disks are not
              left behind on machine deletion.'
            required: false
            type: bool
          boot:
            description:
            - Indicates that this is a boot disk. The virtual machine will use the first partition
              of the disk for its root filesystem.
            required: false
            type: bool
          device_name:
            description:
            - Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-*
              tree of a Linux operating system running within the instance. This name can
              be used to reference the device for mounting, resizing, and so on, from within
              the instance.
            required: false
          disk_encryption_key:
            description:
            - Encrypts or decrypts a disk using a customer-supplied encryption key.
            required: false
            suboptions:
              raw_key:
                description:
                - Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648
                  base64 to either encrypt or decrypt this resource.
                required: false
              rsa_encrypted_key:
                description:
                - Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied
                  encryption key to either encrypt or decrypt this resource.
                required: false
          index:
            description:
            - Assigns a zero-based index to this disk, where 0 is reserved for the boot disk.
              For example, if you have many disks attached to an instance, each disk would
              have a unique index number. If not specified, the server will choose an appropriate
              value.
            required: false
          initialize_params:
            description:
            - Specifies the parameters for a new disk that will be created alongside the new
              instance. Use initialization parameters to create boot disks or local SSDs attached
              to the new instance.
            required: false
            suboptions:
              disk_name:
                description:
                - Specifies the disk name. If not specified, the default is to use the name
                  of the instance.
                required: false
              disk_size_gb:
                description:
                - Specifies the size of the disk in base-2 GB.
                required: false
              disk_type:
                description:
                - Reference to a disk type.
                - Specifies the disk type to use to create the instance.
                - If not specified, the default is pd-standard.
                required: false
              source_image:
                aliases:
                - image
                - image_family
                description:
                - The source image to create this disk. When creating a new instance, one
                  of initializeParams.sourceImage or disks.source is required. To create a
                  disk with one of the public operating system images, specify the image by
                  its family name.
                required: false
              source_image_encryption_key:
                description:
                - The customer-supplied encryption key of the source image. Required if the
                  source image is protected by a customer-supplied encryption key.
                - Instance templates do not store customer-supplied encryption keys, so you
                  cannot create disks for instances in a managed instance group if the source
                  images are encrypted with your own keys.
                required: false
                suboptions:
                  raw_key:
                    description:
                    - Specifies a 256-bit customer-supplied encryption key, encoded in RFC
                      4648 base64 to either encrypt or decrypt this resource.
                    required: false
          interface:
            choices:
            - SCSI
            - NVME
            description:
            - Specifies the disk interface to use for attaching this disk, which is either
              SCSI or NVME. The default is SCSI.
            - Persistent disks must always use SCSI and the request will fail if you attempt
              to attach a persistent disk in any other format than SCSI.
            required: false
          mode:
            choices:
            - READ_WRITE
            - READ_ONLY
            description:
            - The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not
              specified, the default is to attach the disk in READ_WRITE mode.
            required: false
          source:
            description:
            - Reference to a disk. When creating a new instance, one of initializeParams.sourceImage
              or disks.source is required.
            - If desired, you can also attach existing non-root persistent disks using this
              property. This field is only applicable for persistent disks.
            - 'This field represents a link to a Disk resource in GCP. It can be specified
              in two ways. First, you can place a dictionary with key ''selfLink'' and value
              of your resource''s selfLink Alternatively, you can add `register: name-of-resource`
              to a gcp_compute_disk task and then set this source field to "{{ name-of-resource
              }}"'
            required: false
          type:
            choices:
            - SCRATCH
            - PERSISTENT
            description:
            - Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified,
              the default is PERSISTENT.
            required: false
        

- guest_accelerators
        List of the type and count of accelerator cards attached to the instance .
        [Default: (null)]
        suboptions:
          accelerator_count:
            description:
            - The number of the guest accelerator cards exposed to this instance.
            required: false
          accelerator_type:
            description:
            - Full or partial URL of the accelerator type resource to expose to this instance.
            required: false
        

- label_fingerprint
        A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The
        fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must
        always provide an up-to-date fingerprint hash in order to update or change metadata.
        [Default: (null)]

- machine_type
        A reference to a machine type which defines VM kind.
        [Default: (null)]

- metadata
        The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom
        metadata or predefined keys.
        [Default: (null)]

- min_cpu_platform
        Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms .
        [Default: (null)]

- name
        The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters
        long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
        `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a
        dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        [Default: (null)]

- network_interfaces
        An array of configurations for this interface. This specifies how this interface is configured to interact with other network
        services, such as connecting to the internet. Only one network interface is supported per instance.
        [Default: (null)]
        suboptions:
          access_configs:
            description:
            - An array of configurations for this interface. Currently, only one access config,
              ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then
              this instance will have no external internet access.
            required: false
            suboptions:
              name:
                description:
                - The name of this access configuration. The default and recommended name
                  is External NAT but you can use any arbitrary string you would like. For
                  example, My external IP or Network Access.
                required: true
              nat_ip:
                description:
                - Reference to an address.
                - An external IP address associated with this instance.
                - Specify an unused static external IP address available to the project or
                  leave this field undefined to use an IP from a shared ephemeral IP address
                  pool. If you specify a static external IP address, it must live in the same
                  region as the zone of the instance.
                - 'This field represents a link to a Address resource in GCP. It can be specified
                  in two ways. First, you can place a dictionary with key ''address'' and
                  value of your resource''s address Alternatively, you can add `register:
                  name-of-resource` to a gcp_compute_address task and then set this nat_ip
                  field to "{{ name-of-resource }}"'
                required: false
              type:
                choices:
                - ONE_TO_ONE_NAT
                description:
                - The type of configuration. The default and only option is ONE_TO_ONE_NAT.
                required: true
          alias_ip_ranges:
            description:
            - An array of alias IP ranges for this network interface. Can only be specified
              for network interfaces on subnet-mode networks.
            required: false
            suboptions:
              ip_cidr_range:
                description:
                - The IP CIDR range represented by this alias IP range.
                - This IP CIDR range must belong to the specified subnetwork and cannot contain
                  IP addresses reserved by system or used by other network interfaces. This
                  range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or
                  a CIDR format string (e.g. 10.1.2.0/24).
                required: false
              subnetwork_range_name:
                description:
                - Optional subnetwork secondary range name specifying the secondary range
                  from which to allocate the IP CIDR range for this alias IP range. If left
                  unspecified, the primary range of the subnetwork will be used.
                required: false
          network:
            description:
            - Specifies the title of an existing network. When creating an instance, if neither
              the network nor the subnetwork is specified, the default network global/networks/default
              is used; if the network is not specified but the subnetwork is specified, the
              network is inferred.
            - 'This field represents a link to a Network resource in GCP. It can be specified
              in two ways. First, you can place a dictionary with key ''selfLink'' and value
              of your resource''s selfLink Alternatively, you can add `register: name-of-resource`
              to a gcp_compute_network task and then set this network field to "{{ name-of-resource
              }}"'
            required: false
          network_ip:
            description:
            - An IPv4 internal network address to assign to the instance for this network
              interface. If not specified by the user, an unused internal IP is assigned by
              the system.
            required: false
          subnetwork:
            description:
            - Reference to a VPC network.
            - If the network resource is in legacy mode, do not provide this property. If
              the network is in auto subnet mode, providing the subnetwork is optional. If
              the network is in custom subnet mode, then this field should be specified.
            - 'This field represents a link to a Subnetwork resource in GCP. It can be specified
              in two ways. First, you can place a dictionary with key ''selfLink'' and value
              of your resource''s selfLink Alternatively, you can add `register: name-of-resource`
              to a gcp_compute_subnetwork task and then set this subnetwork field to "{{ name-of-resource
              }}"'
            required: false
        

- project
        The Google Cloud Platform project to use.
        [Default: (null)]
        type: str

- scheduling
        Sets the scheduling options for this instance.
        [Default: (null)]
        suboptions:
          automatic_restart:
            description:
            - Specifies whether the instance should be automatically restarted if it is terminated
              by Compute Engine (not terminated by a user).
            - You can only set the automatic restart option for standard instances. Preemptible
              instances cannot be automatically restarted.
            required: false
            type: bool
          on_host_maintenance:
            description:
            - Defines the maintenance behavior for this instance. For standard instances,
              the default behavior is MIGRATE. For preemptible instances, the default and
              only possible behavior is TERMINATE.
            - For more information, see Setting Instance Scheduling Options.
            required: false
          preemptible:
            description:
            - Defines whether the instance is preemptible. This can only be set during instance
              creation, it cannot be set or changed after the instance has been created.
            required: false
            type: bool
        

- scopes
        Array of scopes to be used.
        [Default: (null)]
        type: list

- service_account_contents
        A string representing the contents of a Service Account JSON file.
        This should not be passed in as a dictionary, but a string that has the exact contents of a service account json file (valid
        JSON)
        [Default: (null)]
        type: str

- service_account_email
        An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
        [Default: (null)]
        type: str

- service_account_file
        The path of a Service Account JSON file if serviceaccount is selected as type.
        [Default: (null)]
        type: path

- service_accounts
        A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance
        is supported.
        [Default: (null)]
        suboptions:
          email:
            description:
            - Email address of the service account.
            required: false
          scopes:
            description:
            - The list of scopes to be made available for this service account.
            required: false
        

- state
        Whether the given object should exist in GCP
        (Choices: present, absent)[Default: present]

- status
        The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, and
        TERMINATED.
        As a user, use RUNNING to keep a machine "on" and TERMINATED to turn a machine off .
        (Choices: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, TERMINATED)[Default: (null)]
        version_added: 2.8
        

- tags
        A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are
        specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list
        must comply with RFC1035.
        [Default: (null)]
        suboptions:
          fingerprint:
            description:
            - Specifies a fingerprint for this request, which is essentially a hash of the
              metadata's contents and used for optimistic locking.
            - The fingerprint is initially generated by Compute Engine and changes after every
              request to modify or update metadata. You must always provide an up-to-date
              fingerprint hash in order to update or change metadata.
            required: false
          items:
            description:
            - An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
            required: false
        

= zone
        A reference to the zone where the machine resides.



NOTES:
      * For authentication, you can set service_account_file using the `GCP_SERVICE_ACCOUNT_FILE' env variable.
      * For authentication, you can set service_account_email using the `GCP_SERVICE_ACCOUNT_EMAIL' env variable.
      * For authentication, you can set service_account_contents using the `GCP_SERVICE_ACCOUNT_CONTENTS' env variable.
      * For authentication, you can set auth_kind using the `GCP_AUTH_KIND' env variable.
      * For authentication, you can set scopes using the `GCP_SCOPES' env variable.
      * Environment variables values will only be used if the playbook values are not set.
      * The `service_account_email' and `service_account_file' options are mutually exclusive.


REQUIREMENTS:  python >= 2.6, requests >= 2.18.4, google-auth >= 1.3.0

AUTHOR: Google Inc. (@googlecloudplatform)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: create a disk
  gcp_compute_disk:
    name: disk-instance
    size_gb: 50
    source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk

- name: create a network
  gcp_compute_network:
    name: network-instance
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: create a address
  gcp_compute_address:
    name: address-instance
    region: us-central1
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address

- name: create a instance
  gcp_compute_instance:
    name: test_object
    machine_type: n1-standard-1
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    metadata:
      startup-script-url: gs:://graphite-playground/bootstrap.sh
      cost-center: '12345'
    network_interfaces:
    - network: "{{ network }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    zone: us-central1-a
    project: test_project
    auth_kind: serviceaccount
    service_account_file: "/tmp/auth.pem"
    state: present


RETURN VALUES:

canIpForward:
  description:
  - Allows this instance to send and receive packets with non-matching destination
    or source IPs. This is required if you plan to use this instance to forward routes.
  returned: success
  type: bool
cpuPlatform:
  description:
  - The CPU platform used by this instance.
  returned: success
  type: str
creationTimestamp:
  description:
  - Creation timestamp in RFC3339 text format.
  returned: success
  type: str
disks:
  description:
  - An array of disks that are associated with the instances that are created from
    this template.
  returned: success
  type: complex
  contains:
    autoDelete:
      description:
      - Specifies whether the disk will be auto-deleted when the instance is deleted
        (but not when the disk is detached from the instance).
      - 'Tip: Disks should be set to autoDelete=true so that leftover disks are not
        left behind on machine deletion.'
      returned: success
      type: bool
    boot:
      description:
      - Indicates that this is a boot disk. The virtual machine will use the first
        partition of the disk for its root filesystem.
      returned: success
      type: bool
    deviceName:
      description:
      - Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-*
        tree of a Linux operating system running within the instance. This name can
        be used to reference the device for mounting, resizing, and so on, from within
        the instance.
      returned: success
      type: str
    diskEncryptionKey:
      description:
      - Encrypts or decrypts a disk using a customer-supplied encryption key.
      returned: success
      type: complex
      contains:
        rawKey:
          description:
          - Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648
            base64 to either encrypt or decrypt this resource.
          returned: success
          type: str
        rsaEncryptedKey:
          description:
          - Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied
            encryption key to either encrypt or decrypt this resource.
          returned: success
          type: str
        sha256:
          description:
          - The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption
            key that protects this resource.
          returned: success
          type: str
    index:
      description:
      - Assigns a zero-based index to this disk, where 0 is reserved for the boot
        disk. For example, if you have many disks attached to an instance, each disk
        would have a unique index number. If not specified, the server will choose
        an appropriate value.
      returned: success
      type: int
    initializeParams:
      description:
      - Specifies the parameters for a new disk that will be created alongside the
        new instance. Use initialization parameters to create boot disks or local
        SSDs attached to the new instance.
      returned: success
      type: complex
      contains:
        diskName:
          description:
          - Specifies the disk name. If not specified, the default is to use the name
            of the instance.
          returned: success
          type: str
        diskSizeGb:
          description:
          - Specifies the size of the disk in base-2 GB.
          returned: success
          type: int
        diskType:
          description:
          - Reference to a disk type.
          - Specifies the disk type to use to create the instance.
          - If not specified, the default is pd-standard.
          returned: success
          type: str
        sourceImage:
          description:
          - The source image to create this disk. When creating a new instance, one
            of initializeParams.sourceImage or disks.source is required. To create
            a disk with one of the public operating system images, specify the image
            by its family name.
          returned: success
          type: str
        sourceImageEncryptionKey:
          description:
          - The customer-supplied encryption key of the source image. Required if
            the source image is protected by a customer-supplied encryption key.
          - Instance templates do not store customer-supplied encryption keys, so
            you cannot create disks for instances in a managed instance group if the
            source images are encrypted with your own keys.
          returned: success
          type: complex
          contains:
            rawKey:
              description:
              - Specifies a 256-bit customer-supplied encryption key, encoded in RFC
                4648 base64 to either encrypt or decrypt this resource.
              returned: success
              type: str
            sha256:
              description:
              - The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
                encryption key that protects this resource.
              returned: success
              type: str
    interface:
      description:
      - Specifies the disk interface to use for attaching this disk, which is either
        SCSI or NVME. The default is SCSI.
      - Persistent disks must always use SCSI and the request will fail if you attempt
        to attach a persistent disk in any other format than SCSI.
      returned: success
      type: str
    mode:
      description:
      - The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
        not specified, the default is to attach the disk in READ_WRITE mode.
      returned: success
      type: str
    source:
      description:
      - Reference to a disk. When creating a new instance, one of initializeParams.sourceImage
        or disks.source is required.
      - If desired, you can also attach existing non-root persistent disks using this
        property. This field is only applicable for persistent disks.
      returned: success
      type: dict
    type:
      description:
      - Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified,
        the default is PERSISTENT.
      returned: success
      type: str
guestAccelerators:
  description:
  - List of the type and count of accelerator cards attached to the instance .
  returned: success
  type: complex
  contains:
    acceleratorCount:
      description:
      - The number of the guest accelerator cards exposed to this instance.
      returned: success
      type: int
    acceleratorType:
      description:
      - Full or partial URL of the accelerator type resource to expose to this instance.
      returned: success
      type: str
id:
  description:
  - The unique identifier for the resource. This identifier is defined by the server.
  returned: success
  type: int
labelFingerprint:
  description:
  - A fingerprint for this request, which is essentially a hash of the metadata's
    contents and used for optimistic locking. The fingerprint is initially generated
    by Compute Engine and changes after every request to modify or update metadata.
    You must always provide an up-to-date fingerprint hash in order to update or change
    metadata.
  returned: success
  type: str
metadata:
  description:
  - The metadata key/value pairs to assign to instances that are created from this
    template. These pairs can consist of custom metadata or predefined keys.
  returned: success
  type: dict
machineType:
  description:
  - A reference to a machine type which defines VM kind.
  returned: success
  type: str
minCpuPlatform:
  description:
  - Specifies a minimum CPU platform for the VM instance. Applicable values are the
    friendly names of CPU platforms .
  returned: success
  type: str
name:
  description:
  - The name of the resource, provided by the client when initially creating the resource.
    The resource name must be 1-63 characters long, and comply with RFC1035. Specifically,
    the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
    which means the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last character,
    which cannot be a dash.
  returned: success
  type: str
networkInterfaces:
  description:
  - An array of configurations for this interface. This specifies how this interface
    is configured to interact with other network services, such as connecting to the
    internet. Only one network interface is supported per instance.
  returned: success
  type: complex
  contains:
    accessConfigs:
      description:
      - An array of configurations for this interface. Currently, only one access
        config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified,
        then this instance will have no external internet access.
      returned: success
      type: complex
      contains:
        name:
          description:
          - The name of this access configuration. The default and recommended name
            is External NAT but you can use any arbitrary string you would like. For
            example, My external IP or Network Access.
          returned: success
          type: str
        natIP:
          description:
          - Reference to an address.
          - An external IP address associated with this instance.
          - Specify an unused static external IP address available to the project
            or leave this field undefined to use an IP from a shared ephemeral IP
            address pool. If you specify a static external IP address, it must live
            in the same region as the zone of the instance.
          returned: success
          type: dict
        type:
          description:
          - The type of configuration. The default and only option is ONE_TO_ONE_NAT.
          returned: success
          type: str
    aliasIpRanges:
      description:
      - An array of alias IP ranges for this network interface. Can only be specified
        for network interfaces on subnet-mode networks.
      returned: success
      type: complex
      contains:
        ipCidrRange:
          description:
          - The IP CIDR range represented by this alias IP range.
          - This IP CIDR range must belong to the specified subnetwork and cannot
            contain IP addresses reserved by system or used by other network interfaces.
            This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g.
            /24) or a CIDR format string (e.g. 10.1.2.0/24).
          returned: success
          type: str
        subnetworkRangeName:
          description:
          - Optional subnetwork secondary range name specifying the secondary range
            from which to allocate the IP CIDR range for this alias IP range. If left
            unspecified, the primary range of the subnetwork will be used.
          returned: success
          type: str
    name:
      description:
      - The name of the network interface, generated by the server. For network devices,
        these are eth0, eth1, etc .
      returned: success
      type: str
    network:
      description:
      - Specifies the title of an existing network. When creating an instance, if
        neither the network nor the subnetwork is specified, the default network global/networks/default
        is used; if the network is not specified but the subnetwork is specified,
        the network is inferred.
      returned: success
      type: dict
    networkIP:
      description:
      - An IPv4 internal network address to assign to the instance for this network
        interface. If not specified by the user, an unused internal IP is assigned
        by the system.
      returned: success
      type: str
    subnetwork:
      description:
      - Reference to a VPC network.
      - If the network resource is in legacy mode, do not provide this property. If
        the network is in auto subnet mode, providing the subnetwork is optional.
        If the network is in custom subnet mode, then this field should be specified.
      returned: success
      type: dict
scheduling:
  description:
  - Sets the scheduling options for this instance.
  returned: success
  type: complex
  contains:
    automaticRestart:
      description:
      - Specifies whether the instance should be automatically restarted if it is
        terminated by Compute Engine (not terminated by a user).
      - You can only set the automatic restart option for standard instances. Preemptible
        instances cannot be automatically restarted.
      returned: success
      type: bool
    onHostMaintenance:
      description:
      - Defines the maintenance behavior for this instance. For standard instances,
        the default behavior is MIGRATE. For preemptible instances, the default and
        only possible behavior is TERMINATE.
      - For more information, see Setting Instance Scheduling Options.
      returned: success
      type: str
    preemptible:
      description:
      - Defines whether the instance is preemptible. This can only be set during instance
        creation, it cannot be set or changed after the instance has been created.
      returned: success
      type: bool
serviceAccounts:
  description:
  - A list of service accounts, with their specified scopes, authorized for this instance.
    Only one service account per VM instance is supported.
  returned: success
  type: complex
  contains:
    email:
      description:
      - Email address of the service account.
      returned: success
      type: str
    scopes:
      description:
      - The list of scopes to be made available for this service account.
      returned: success
      type: list
status:
  description:
  - 'The status of the instance. One of the following values: PROVISIONING, STAGING,
    RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.'
  - As a user, use RUNNING to keep a machine "on" and TERMINATED to turn a machine
    off .
  returned: success
  type: str
statusMessage:
  description:
  - An optional, human-readable explanation of the status.
  returned: success
  type: str
tags:
  description:
  - A list of tags to apply to this instance. Tags are used to identify valid sources
    or targets for network firewalls and are specified by the client during instance
    creation. The tags can be later modified by the setTags method. Each tag within
    the list must comply with RFC1035.
  returned: success
  type: complex
  contains:
    fingerprint:
      description:
      - Specifies a fingerprint for this request, which is essentially a hash of the
        metadata's contents and used for optimistic locking.
      - The fingerprint is initially generated by Compute Engine and changes after
        every request to modify or update metadata. You must always provide an up-to-date
        fingerprint hash in order to update or change metadata.
      returned: success
      type: str
    items:
      description:
      - An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
      returned: success
      type: list
zone:
  description:
  - A reference to the zone where the machine resides.
  returned: success
  type: str

