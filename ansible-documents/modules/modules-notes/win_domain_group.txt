> WIN_DOMAIN_GROUP    (/usr/lib/python2.7/dist-packages/ansible/modules/windows/win_domain_group.py)

        Creates, modifies or removes groups in Active Directory. For local groups, use the [win_group] module instead.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- attributes
        A dict of custom LDAP attributes to set on the group.
        This can be used to set custom attributes that are not exposed as module parameters, e.g. `mail'.
        See the examples on how to format this parameter.
        [Default: (null)]
        type: dict

- category
        The category of the group, this is the value to assign to the LDAP `groupType' attribute.
        If a new group is created then `security' will be used by default.
        (Choices: distribution, security)[Default: (null)]
        type: str

- description
        The value to be assigned to the LDAP `description' attribute.
        [Default: (null)]
        type: str

- display_name
        The value to assign to the LDAP `displayName' attribute.
        [Default: (null)]
        type: str

- domain_password
        The password for `username'.
        [Default: (null)]
        type: str

- domain_server
        Specifies the Active Directory Domain Services instance to connect to.
        Can be in the form of an FQDN or NetBIOS name.
        If not specified then the value is based on the domain of the computer running PowerShell.
        [Default: (null)]
        type: str
        version_added: 2.5

- domain_username
        The username to use when interacting with AD.
        If this is not set then the user Ansible used to log in with will be used instead.
        [Default: (null)]
        type: str

- ignore_protection
        Will ignore the `ProtectedFromAccidentalDeletion' flag when deleting or moving a group.
        The module will fail if one of these actions need to occur and this value is set to `no'.
        [Default: False]
        type: bool

- managed_by
        The value to be assigned to the LDAP `managedBy' attribute.
        This value can be in the forms `Distinguished Name', `objectGUID', `objectSid' or `sAMAccountName', see examples for more
        details.
        [Default: (null)]
        type: str

= name
        The name of the group to create, modify or remove.
        This value can be in the forms `Distinguished Name', `objectGUID', `objectSid' or `sAMAccountName', see examples for more
        details.

        type: str

- organizational_unit
        The full LDAP path to create or move the group to.
        This should be the path to the parent object to create or move the group to.
        See examples for details of how this path is formed.
        (Aliases: ou, path)[Default: (null)]
        type: str

- protect
        Will set the `ProtectedFromAccidentalDeletion' flag based on this value.
        This flag stops a user from deleting or moving a group to a different path.
        [Default: (null)]
        type: bool

- scope
        The scope of the group.
        If `state=present' and the group doesn't exist then this must be set.
        (Choices: domainlocal, global, universal)[Default: (null)]
        type: str

- state
        If `state=present' this module will ensure the group is created and is configured accordingly.
        If `state=absent' this module will delete the group if it exists
        (Choices: absent, present)[Default: present]
        type: str


NOTES:
      * This must be run on a host that has the ActiveDirectory powershell module installed.


SEE ALSO:
      * Module win_domain
           The official documentation on the win_domain module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_module.html
      * Module win_domain_controller
           The official documentation on the win_domain_controller module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_controller_module.html
      * Module win_domain_computer
           The official documentation on the win_domain_computer module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_computer_module.html
      * Module win_domain_membership
           The official documentation on the win_domain_membership module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_membership_module.html
      * Module win_domain_user
           The official documentation on the win_domain_user module.
           https://docs.ansible.com/ansible/latest/modules/win_domain_user_module.html
      * Module win_group
           The official documentation on the win_group module.
           https://docs.ansible.com/ansible/latest/modules/win_group_module.html
      * Module win_group_membership
           The official documentation on the win_group_membership module.
           https://docs.ansible.com/ansible/latest/modules/win_group_membership_module.html


AUTHOR: Jordan Borean (@jborean93)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Ensure the group Cow exists using sAMAccountName
  win_domain_group:
    name: Cow
    scope: global
    path: OU=groups,DC=ansible,DC=local

- name: Ensure the group Cow does't exist using the Distinguished Name
  win_domain_group:
    name: CN=Cow,OU=groups,DC=ansible,DC=local
    state: absent

- name: Delete group ignoring the protection flag
  win_domain_group:
    name: Cow
    state: absent
    ignore_protection: yes

- name: Create group with delete protection enabled and custom attributes
  win_domain_group:
    name: Ansible Users
    scope: domainlocal
    category: security
    attributes:
      mail: helpdesk@ansible.com
      wWWHomePage: www.ansible.com
    ignore_protection: yes

- name: Change the OU of a group using the SID and ignore the protection flag
  win_domain_group:
    name: S-1-5-21-2171456218-3732823212-122182344-1189
    scope: global
    organizational_unit: OU=groups,DC=ansible,DC=local
    ignore_protection: yes

- name: Add managed_by user
  win_domain_group:
    name: Group Name Here
    managed_by: Domain Admins

- name: Add group and specify the AD domain services to use for the create
  win_domain_group:
    name: Test Group
    domain_username: user@CORP.ANSIBLE.COM
    domain_password: Password01!
    domain_server: corp-DC12.corp.ansible.com
    scope: domainlocal


RETURN VALUES:

attributes:
  description: Custom attributes that were set by the module. This does not
    show all the custom attributes rather just the ones that were set by the
    module.
  returned: group exists and attributes are set on the module invocation
  type: dict
  sample:
    mail: 'helpdesk@ansible.com'
    wWWHomePage: 'www.ansible.com'
canonical_name:
  description: The canonical name of the group.
  returned: group exists
  type: str
  sample: ansible.local/groups/Cow
category:
  description: The Group type value of the group, i.e. Security or Distribution.
  returned: group exists
  type: str
  sample: Security
description:
  description: The Description of the group.
  returned: group exists
  type: str
  sample: Group Description
display_name:
  description: The Display name of the group.
  returned: group exists
  type: str
  sample: Users who connect through RDP
distinguished_name:
  description: The full Distinguished Name of the group.
  returned: group exists
  type: str
  sample: CN=Cow,OU=groups,DC=ansible,DC=local
group_scope:
  description: The Group scope value of the group.
  returned: group exists
  type: str
  sample: Universal
guid:
  description: The guid of the group.
  returned: group exists
  type: str
  sample: 512a9adb-3fc0-4a26-9df0-e6ea1740cf45
managed_by:
  description: The full Distinguished Name of the AD object that is set on the
    managedBy attribute.
  returned: group exists
  type: str
  sample: CN=Domain Admins,CN=Users,DC=ansible,DC=local
name:
  description: The name of the group.
  returned: group exists
  type: str
  sample: Cow
protected_from_accidental_deletion:
  description: Whether the group is protected from accidental deletion.
  returned: group exists
  type: bool
  sample: true
sid:
  description: The Security ID of the group.
  returned: group exists
  type: str
  sample: S-1-5-21-2171456218-3732823212-122182344-1189

