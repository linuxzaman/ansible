> VYOS_USER    (/usr/lib/python2.7/dist-packages/ansible/modules/network/vyos/vyos_user.py)

        This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage
        either individual usernames or the collection of usernames in the current running config. It also supports purging usernames from
        the configuration that are not explicitly defined.

  * This module is maintained by The Ansible Network Team
OPTIONS (= is mandatory):

- aggregate
        The set of username objects to be configured on the remote VyOS device. The list entries can either be the username or a hash of
        username and properties. This argument is mutually exclusive with the `name' argument.
        (Aliases: users, collection)[Default: (null)]

- configured_password
        The password to be configured on the VyOS device. The password needs to be provided in clear and it will be encrypted on the
        device. Please note that this option is not same as `provider password'.
        [Default: (null)]

- full_name
        The `full_name' argument provides the full name of the user account to be created on the remote device. This argument accepts any
        text string value.
        [Default: (null)]

- level
        The `level' argument configures the level of the user when logged into the system. This argument accepts string values admin or
        operator.
        (Aliases: role)[Default: (null)]

- name
        The username to be configured on the VyOS device. This argument accepts a string value and is mutually exclusive with the
        `aggregate' argument. Please note that this option is not same as `provider username'.
        [Default: (null)]

- provider
        *Deprecated*
        Starting with Ansible 2.5 we recommend using `connection: network_cli'.
        For more information please see the L(Network Guide, ../network/getting_started/network_differences.html#multiple-communication-
        protocols).
        HORIZONTALLINE
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote device over
              the specified transport.  The value of host is used as the destination address
              for the transport.
            required: true
            type: str
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote device.   This
              value is used to authenticate the SSH session. If the value is not specified
              in the task, the value of environment variable `ANSIBLE_NET_PASSWORD' will
              be used instead.
            type: str
          port:
            default: 22
            description:
            - Specifies the port to use when building the connection to the remote device.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH key to use to authenticate the connection to the remote device.   This
              value is the path to the key used to authenticate the SSH session. If the value
              is not specified in the task, the value of environment variable `ANSIBLE_NET_SSH_KEYFILE'
              will be used instead.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              device.  This value is used to authenticate the SSH session. If the value is
              not specified in the task, the value of environment variable `ANSIBLE_NET_USERNAME'
              will be used instead.
            type: str
        
        type: dict

- purge
        Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the
        device with the exception of the `admin` user (the current defined set of users).
        [Default: False]
        type: bool

- state
        Configures the state of the username definition as it relates to the device operational configuration. When set to `present', the
        username(s) should be configured in the device active configuration and when set to `absent' the username(s) should not be in the
        device active configuration
        (Choices: present, absent)[Default: present]

- update_password
        Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.
        When set to `always', the password will always be updated in the device and when set to `on_create' the password will be updated
        only if the username is created.
        (Choices: on_create, always)[Default: always]


NOTES:
      * Tested against VYOS 1.1.7
      * For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`


AUTHOR: Trishna Guha (@trishnaguha)
        METADATA:
          status:
          - preview
          supported_by: network
        

EXAMPLES:

- name: create a new user
  vyos_user:
    name: ansible
    configured_password: password
    state: present
- name: remove all users except admin
  vyos_user:
    purge: yes
- name: set multiple users to level operator
  vyos_user:
    aggregate:
      - name: netop
      - name: netend
    level: operator
    state: present
- name: Change Password for User netop
  vyos_user:
    name: netop
    configured_password: "{{ new_password }}"
    update_password: always
    state: present


RETURN VALUES:

commands:
  description: The list of configuration mode commands to send to the device
  returned: always
  type: list
  sample:
    - set system login user test level operator
    - set system login user authentication plaintext-password password

