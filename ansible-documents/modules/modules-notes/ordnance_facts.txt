> ORDNANCE_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/network/ordnance/ordnance_facts.py)

        Collects a base set of device facts from an Ordnance Virtual router over SSH. This module prepends all of the base network fact
        keys with `ansible_net_<fact>'.  The facts module will always collect a base set of facts from the device and can enable or
        disable collection of additional facts.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- gather_subset
        When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all,
        hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an
        initial `[!]' to specify that a specific subset should not be collected.
        [Default: !config]


AUTHOR: Alexander Turner (@alexanderturner) <alex.turner@ordnance.io>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
# Note: examples below use the following provider dict to handle
#       transport and authentication to the node.
vars:
  cli:
    host: "{{ inventory_hostname }}"
    username: RouterName
    password: ordnance
    transport: cli

---
# Collect all facts from the device
- ordnance_facts:
    gather_subset: all
    provider: "{{ cli }}"

# Collect only the config and default facts
- ordnance_facts:
    gather_subset:
      - config
    provider: "{{ cli }}"

# Do not collect hardware facts
- ordnance_facts:
    gather_subset:
      - "!hardware"
    provider: "{{ cli }}"


RETURN VALUES:

ansible_net_gather_subset:
  description: The list of fact subsets collected from the virtual router
  returned: always
  type: list

# config
ansible_net_config:
  description: The current active config from the virtual router
  returned: when config is configured
  type: str

# interfaces
ansible_net_all_ipv4_addresses:
  description: All IPv4 addresses configured on the virtual router
  returned: when interfaces is configured
  type: list
ansible_net_all_ipv6_addresses:
  description: All IPv6 addresses configured on the virtual router
  returned: when interfaces is configured
  type: list
ansible_net_interfaces:
  description: A hash of all interfaces running on the virtual router
  returned: when interfaces is configured
  type: dict

