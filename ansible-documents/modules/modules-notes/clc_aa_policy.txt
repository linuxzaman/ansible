> CLC_AA_POLICY    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/centurylink/clc_aa_policy.py)

        An Ansible module to Create or Delete Anti Affinity Policies at CenturyLink Cloud.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= location
        Datacenter in which the policy lives/should live.


= name
        The name of the Anti Affinity Policy.


- state
        Whether to create or delete the policy.
        (Choices: present, absent)[Default: present]

- wait
        Whether to wait for the tasks to finish before returning.
        [Default: True]
        type: bool


NOTES:
      * To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud -
        CLC_V2_API_USERNAME, the account login id for the centurylink cloud - CLC_V2_API_PASSWORD, the account password for the
        centurylink cloud
      * Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account
        login and password via the HTTP api call @ https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token
        generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the
        centurylink cloud
      * Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment.


REQUIREMENTS:  python = 2.7, requests >= 2.5.0, clc-sdk

AUTHOR: CLC Runner (@clc-runner)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples

---
- name: Create AA Policy
  hosts: localhost
  gather_facts: False
  connection: local
  tasks:
    - name: Create an Anti Affinity Policy
      clc_aa_policy:
        name: Hammer Time
        location: UK3
        state: present
      register: policy

    - name: debug
      debug:
        var: policy

---
- name: Delete AA Policy
  hosts: localhost
  gather_facts: False
  connection: local
  tasks:
    - name: Delete an Anti Affinity Policy
      clc_aa_policy:
        name: Hammer Time
        location: UK3
        state: absent
      register: policy

    - name: debug
      debug:
        var: policy


RETURN VALUES:

policy:
    description: The anti affinity policy information
    returned: success
    type: dict
    sample:
        {
           "id":"1a28dd0988984d87b9cd61fa8da15424",
           "name":"test_aa_policy",
           "location":"UC1",
           "links":[
              {
                 "rel":"self",
                 "href":"/v2/antiAffinityPolicies/wfad/1a28dd0988984d87b9cd61fa8da15424",
                 "verbs":[
                    "GET",
                    "DELETE",
                    "PUT"
                 ]
              },
              {
                 "rel":"location",
                 "href":"/v2/datacenters/wfad/UC1",
                 "id":"uc1",
                 "name":"UC1 - US West (Santa Clara)"
              }
           ]
        }

