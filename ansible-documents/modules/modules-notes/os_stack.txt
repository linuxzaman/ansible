> OS_STACK    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/openstack/os_stack.py)

        Add or Remove a Stack to an OpenStack Heat

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_timeout
        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests
        library.
        [Default: (null)]
        type: int

- auth
        Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password' plugin, this
        would contain `auth_url', `username', `password', `project_name' and any information about domains (for example,
        `os_user_domain_name' or `os_project_domain_name') if the cloud supports them. For other plugins, this param will need to contain
        whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_*
        environment variables are present.
        [Default: (null)]
        type: dict

- auth_type
        Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be
        indicated here and the contents of the `auth' parameter should be updated accordingly.
        [Default: (null)]
        type: str

- availability_zone
        Ignored. Present for backwards compatibility
        [Default: (null)]

- ca_cert
        A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
        (Aliases: cacert)[Default: (null)]
        type: str

- client_cert
        A path to a client certificate to use as part of the SSL transaction.
        (Aliases: cert)[Default: (null)]
        type: str

- client_key
        A path to a client key to use as part of the SSL transaction.
        (Aliases: key)[Default: (null)]
        type: str

- cloud
        Named cloud or cloud config to operate against. If `cloud' is a string, it references a named cloud config as defined in an
        OpenStack clouds.yaml file. Provides default values for `auth' and `auth_type'. This parameter is not needed if `auth' is
        provided or if OpenStack OS_* environment variables are present. If `cloud' is a dict, it contains a complete cloud configuration
        like would be in a section of clouds.yaml.
        [Default: (null)]
        type: raw

- environment
        List of environment files that should be used for the stack creation
        [Default: (null)]

- interface
        Endpoint URL type to fetch from the service catalog.
        (Aliases: endpoint_type)(Choices: admin, internal, public)[Default: public]
        type: str
        version_added: 2.3

= name
        Name of the stack that should be created, name could be char and digit, no space


- parameters
        Dictionary of parameters for the stack creation
        [Default: (null)]

- region_name
        Name of the region.
        [Default: (null)]
        type: str

- rollback
        Rollback stack creation
        [Default: yes]
        type: bool

- state
        Indicate desired state of the resource
        (Choices: present, absent)[Default: present]

- tag
        Tag for the stack that should be created, name could be char and digit, no space
        [Default: (null)]
        version_added: 2.5

- template
        Path of the template file to use for the stack creation
        [Default: (null)]

- timeout
        Maximum number of seconds to wait for the stack creation
        [Default: 3600]
        type: int

- validate_certs
        Whether or not SSL API requests should be verified.
        Before Ansible 2.3 this defaulted to `yes'.
        (Aliases: verify)[Default: False]
        type: bool

- wait
        Should ansible wait until the requested resource is complete.
        [Default: True]
        type: bool


NOTES:
      * The standard OpenStack environment variables, such as `OS_USERNAME' may be used instead of providing explicit values.
      * Auth information is driven by openstacksdk, which means that values can come from a yaml config file in
        /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment
        variables, then finally by explicit parameters in plays. More information can be found at
        https://docs.openstack.org/openstacksdk/


REQUIREMENTS:  openstacksdk, python >= 2.7

AUTHOR: Mathieu Bultel (@matbu), Steve Baker (@steveb)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

---
- name: create stack
  ignore_errors: True
  register: stack_create
  os_stack:
    name: "{{ stack_name }}"
    tag: "{{ tag_name }}"
    state: present
    template: "/path/to/my_stack.yaml"
    environment:
    - /path/to/resource-registry.yaml
    - /path/to/environment.yaml
    parameters:
        bmc_flavor: m1.medium
        bmc_image: CentOS
        key_name: default
        private_net: "{{ private_net_param }}"
        node_count: 2
        name: undercloud
        image: CentOS
        my_flavor: m1.large
        external_net: "{{ external_net_param }}"


RETURN VALUES:

id:
    description: Stack ID.
    type: str
    sample: "97a3f543-8136-4570-920e-fd7605c989d6"
    returned: always

stack:
    description: stack info
    type: complex
    returned: always
    contains:
        action:
            description: Action, could be Create or Update.
            type: str
            sample: "CREATE"
        creation_time:
            description: Time when the action has been made.
            type: str
            sample: "2016-07-05T17:38:12Z"
        description:
            description: Description of the Stack provided in the heat template.
            type: str
            sample: "HOT template to create a new instance and networks"
        id:
            description: Stack ID.
            type: str
            sample: "97a3f543-8136-4570-920e-fd7605c989d6"
        name:
            description: Name of the Stack
            type: str
            sample: "test-stack"
        identifier:
            description: Identifier of the current Stack action.
            type: str
            sample: "test-stack/97a3f543-8136-4570-920e-fd7605c989d6"
        links:
            description: Links to the current Stack.
            type: list of dict
            sample: "[{'href': 'http://foo:8004/v1/7f6a/stacks/test-stack/97a3f543-8136-4570-920e-fd7605c989d6']"
        outputs:
            description: Output returned by the Stack.
            type: list of dict
            sample: "{'description': 'IP address of server1 in private network',
                        'output_key': 'server1_private_ip',
                        'output_value': '10.1.10.103'}"
        parameters:
            description: Parameters of the current Stack
            type: dict
            sample: "{'OS::project_id': '7f6a3a3e01164a4eb4eecb2ab7742101',
                        'OS::stack_id': '97a3f543-8136-4570-920e-fd7605c989d6',
                        'OS::stack_name': 'test-stack',
                        'stack_status': 'CREATE_COMPLETE',
                        'stack_status_reason': 'Stack CREATE completed successfully',
                        'status': 'COMPLETE',
                        'template_description': 'HOT template to create a new instance and networks',
                        'timeout_mins': 60,
                        'updated_time': null}"

