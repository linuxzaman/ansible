> BIGIP_IMISH_CONFIG    (/usr/lib/python2.7/dist-packages/ansible/modules/network/f5/bigip_imish_config.py)

        This module provides an implementation for working with advanced routing configuration sections in a deterministic way.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- after
        The ordered set of commands to append to the end of the command stack if a change needs to be made.
        Just like with `before' this allows the playbook designer to append a set of commands to be executed after the command set.
        [Default: (null)]
        type: list

- backup
        This argument will cause the module to create a full backup of the current `running-config' from the remote device before any
        changes are made.
        The backup file is written to the `backup' folder in the playbook root directory or role root directory, if playbook is part of
        an ansible role. If the directory does not exist, it is created.
        [Default: no]
        type: bool

- backup_options
        This is a dict object containing configurable options related to backup file path. The value of this option is read only when
        `backup' is set to `yes', if `backup' is set to `no' this option will be silently ignored.
        [Default: (null)]
        suboptions:
          dir_path:
            description:
            - This option provides the path ending with directory name in which the backup
              configuration file will be stored. If the directory does not exist it will be
              first created and the filename is either the value of `filename' or default
              filename as described in `filename' options description. If the path value
              is not given in that case a `backup' directory will be created in the current
              working directory and backup configuration will be copied in `filename' within
              `backup' directory.
            type: path
          filename:
            description:
            - The filename to be used to store the backup configuration. If the the filename
              is not given it will be generated based on the hostname, current time and date
              in format defined by <hostname>_config.<current-date>@<current-time>
            type: str
        
        type: dict
        version_added: 2.8

- before
        The ordered set of commands to push on to the command stack if a change needs to be made.
        This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without
        affecting how the set of commands are matched against the system.
        [Default: (null)]
        type: list

- diff_against
        When using the `ansible-playbook --diff' command line argument the module can generate diffs against different sources.
        When this option is configure as `startup', the module will return the diff of the running-config against the startup-config.
        When this option is configured as `intended', the module will return the diff of the running-config against the configuration
        provided in the `intended_config' argument.
        When this option is configured as `running', the module will return the before and after diff of the running-config with respect
        to any changes made to the device configuration.
        (Choices: startup, intended, running)[Default: startup]
        type: str

- diff_ignore_lines
        Use this argument to specify one or more lines that should be ignored during the diff.
        This is used for lines in the configuration that are automatically updated by the system.
        This argument takes a list of regular expressions or exact line matches.
        [Default: (null)]
        type: list

- intended_config
        The `intended_config' provides the master configuration that the node should conform to and is used to check the final running-
        config against.
        This argument will not modify any settings on the remote device and is strictly used to check the compliance of the current
        device's configuration against.
        When specifying this argument, the task should also modify the `diff_against' value and set it to `intended'.
        [Default: (null)]
        type: str

- lines
        The ordered set of commands that should be configured in the section.
        The commands must be the exact same commands as found in the device running-config.
        Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser.
        (Aliases: commands)[Default: (null)]
        type: list

- match
        Instructs the module on the way to perform the matching of the set of commands against the current device config.
        If match is set to `line', commands are matched line by line.
        If match is set to `strict', command lines are matched with respect to position.
        If match is set to `exact', command lines must be an equal match.
        Finally, if match is set to `none', the module will not attempt to compare the source configuration with the running
        configuration on the remote device.
        (Choices: line, strict, exact, none)[Default: line]
        type: str

- parents
        The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.
        If the `parents' argument is omitted, the commands are checked against the set of top level or global commands.
        [Default: (null)]
        type: list

= password
        The password for the user account used to connect to the BIG-IP.
        You may omit this option by setting the environment variable `F5_PASSWORD'.
        (Aliases: pass, pwd)
        type: str

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          password:
            aliases:
            - pass
            - pwd
            description:
            - The password for the user account used to connect to the BIG-IP.
            - You may omit this option by setting the environment variable `F5_PASSWORD'.
            required: true
            type: str
          server:
            description:
            - The BIG-IP host.
            - You may omit this option by setting the environment variable `F5_SERVER'.
            required: true
            type: str
          server_port:
            default: 443
            description:
            - The BIG-IP server port.
            - You may omit this option by setting the environment variable `F5_SERVER_PORT'.
            type: int
          ssh_keyfile:
            description:
            - Specifies the SSH keyfile to use to authenticate the connection to the remote
              device.  This argument is only used for `cli' transports.
            - You may omit this option by setting the environment variable `ANSIBLE_NET_SSH_KEYFILE'.
            type: path
          timeout:
            default: 10
            description:
            - Specifies the timeout in seconds for communicating with the network device for
              either connecting or sending commands.  If the timeout is exceeded before the
              operation is completed, the module will error.
            type: int
          transport:
            choices:
            - cli
            - rest
            default: rest
            description:
            - Configures the transport connection to use when connecting to the remote device.
            type: str
          user:
            description:
            - The username to connect to the BIG-IP with. This user must have administrative
              privileges on the device.
            - You may omit this option by setting the environment variable `F5_USER'.
            required: true
            type: str
          validate_certs:
            default: true
            description:
            - If `no', SSL certificates are not validated. Use this only on personally controlled
              sites using self-signed certificates.
            - You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
            type: bool
        
        type: dict
        version_added: 2.5

- replace
        Instructs the module on the way to perform the configuration on the device.
        If the replace argument is set to `line' then the modified lines are pushed to the device in configuration mode.
        If the replace argument is set to `block' then the entire command block is pushed to the device in configuration mode if any line
        is not correct.
        (Choices: line, block)[Default: line]
        type: str

- route_domain
        Route domain to manage BGP configuration on.
        [Default: 0]
        type: str

- running_config
        The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing
        against the contents of source.
        There are times when it is not desirable to have the task get the current running-config for every task in a playbook.
        The `running_config' argument allows the implementer to pass in the configuration to use as the base config for comparison.
        (Aliases: config)[Default: (null)]
        type: str

- save_when
        When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.
        If the argument is set to `always', then the running-config will always be copied to the startup-config and the `modified' flag
        will always be set to `True'.
        If the argument is set to `modified', then the running-config will only be copied to the startup-config if it has changed since
        the last save to startup-config.
        If the argument is set to `never', the running-config will never be copied to the startup-config.
        If the argument is set to `changed', then the running-config will only be copied to the startup-config if the task has made a
        change.
        (Choices: always, never, modified, changed)[Default: never]
        type: str

= server
        The BIG-IP host.
        You may omit this option by setting the environment variable `F5_SERVER'.

        type: str

- server_port
        The BIG-IP server port.
        You may omit this option by setting the environment variable `F5_SERVER_PORT'.
        [Default: 443]
        type: int
        version_added: 2.2

- src
        The `src' argument provides a path to the configuration file to load into the remote system.
        The path can either be a full system path to the configuration file if the value starts with / or relative to the root of the
        implemented role or playbook.
        This argument is mutually exclusive with the `lines' and `parents' arguments.
        [Default: (null)]
        type: path

= user
        The username to connect to the BIG-IP with. This user must have administrative privileges on the device.
        You may omit this option by setting the environment variable `F5_USER'.

        type: str

- validate_certs
        If `no', SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.
        You may omit this option by setting the environment variable `F5_VALIDATE_CERTS'.
        [Default: True]
        type: bool
        version_added: 2.0


NOTES:
      * Abbreviated commands are NOT idempotent, see L(Network FAQ,../network/user_guide/faq.html#why-do-the-config-modules-always-
        return-changed-true-with-abbreviated-commands).
      * For more information on using Ansible to manage F5 Networks devices see https://www.ansible.com/integrations/networks/f5.
      * Requires BIG-IP software version >= 12.
      * The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration
        persists to disk, be sure to include at least one task that uses the [bigip_config] module to save the running
        configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.


AUTHOR: Tim Rupp (@caphrim007)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: configure top level configuration and save it
  bigip_imish_config:
    lines: bfd slow-timer 2000
    save_when: modified
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: diff the running-config against a provided config
  bigip_imish_config:
    diff_against: intended
    intended_config: "{{ lookup('file', 'master.cfg') }}"
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Add config to a parent block
  bigip_imish_config:
    lines:
      - bgp graceful-restart restart-time 120
      - redistribute kernel route-map rhi
      - neighbor 10.10.10.11 remote-as 65000
      - neighbor 10.10.10.11 fall-over bfd
      - neighbor 10.10.10.11 remote-as 65000
      - neighbor 10.10.10.11 fall-over bfd
    parents: router bgp 64664
    match: exact
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: Remove an existing acl before writing it
  bigip_imish_config:
    lines:
      - access-list 10 permit 20.20.20.20
      - access-list 10 permit 20.20.20.21
      - access-list 10 deny any
    before: no access-list 10
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: for idempotency, use full-form commands
  bigip_imish_config:
    lines:
      # - desc My interface
      - description My Interface
    # parents: int ANYCAST-P2P-2
    parents: interface ANYCAST-P2P-2
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
  delegate_to: localhost

- name: configurable backup path
  bigip_imish_config:
    lines: bfd slow-timer 2000
    backup: yes
    provider:
      user: admin
      password: secret
      server: lb.mydomain.com
    backup_options:
      filename: backup.cfg
      dir_path: /home/user
  delegate_to: localhost


RETURN VALUES:

commands:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['interface ANYCAST-P2P-2', 'neighbor 20.20.20.21 remote-as 65000', 'neighbor 20.20.20.21 fall-over bfd']
updates:
  description: The set of commands that will be pushed to the remote device
  returned: always
  type: list
  sample: ['interface ANYCAST-P2P-2', 'neighbor 20.20.20.21 remote-as 65000', 'neighbor 20.20.20.21 fall-over bfd']
backup_path:
  description: The full path to the backup file
  returned: when backup is yes
  type: str
  sample: /playbooks/ansible/backup/bigip_imish_config.2016-07-16@22:28:34

