> ACI_CONFIG_ROLLBACK    (/usr/lib/python2.7/dist-packages/ansible/modules/network/aci/aci_config_rollback.py)

        Provides rollback and rollback preview functionality for Cisco ACI fabrics. Config Rollbacks are done using snapshots
        `aci_snapshot' with the configImportP class.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- certificate_name
        The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
        If a `private_key' filename was provided, this defaults to the `private_key' basename, without extension.
        If PEM-formatted content was provided for `private_key', this defaults to the `username' value.
        (Aliases: cert_name)[Default: (null)]
        type: str

- compare_export_policy
        The export policy that the `compare_snapshot' is associated to.
        [Default: (null)]
        type: str

- compare_snapshot
        The name of the snapshot to compare with `snapshot'.
        [Default: (null)]
        type: str

- description
        The description for the Import Policy.
        (Aliases: descr)[Default: (null)]
        type: str

= export_policy
        The export policy that the `snapshot' is associated to.

        type: str

- fail_on_decrypt
        Determines if the APIC should fail the rollback if unable to decrypt secured data.
        The APIC defaults to `yes' when unset.
        [Default: (null)]
        type: bool

= host
        IP Address or hostname of APIC resolvable by Ansible control host.
        (Aliases: hostname)
        type: str

- import_mode
        Determines how the import should be handled by the APIC.
        The APIC defaults to `atomic' when unset.
        (Choices: atomic, best-effort)[Default: (null)]
        type: str

- import_policy
        The name of the Import Policy to use for config rollback.
        [Default: (null)]
        type: str

- import_type
        Determines how the current and snapshot configuration should be compared for replacement.
        The APIC defaults to `replace' when unset.
        (Choices: merge, replace)[Default: (null)]
        type: str

- output_level
        Influence the output of this ACI module.
        `normal' means the standard output, incl. `current' dict
        `info' adds informational output, incl. `previous', `proposed' and `sent' dicts
        `debug' adds debugging output, incl. `filter_string', `method', `response', `status' and `url' information
        (Choices: debug, info, normal)[Default: normal]
        type: str

= password
        The password to use for authentication.
        This option is mutual exclusive with `private_key'. If `private_key' is provided too, it will be used instead.

        type: str

- port
        Port number to be used for REST connection.
        The default value depends on parameter `use_ssl'.
        [Default: (null)]
        type: int

= private_key
        Either a PEM-formatted private key file or the private key content used for signature-based authentication.
        This value also influences the default `certificate_name' that is used.
        This option is mutual exclusive with `password'. If `password' is provided too, it will be ignored.
        (Aliases: cert_key)
        type: str

= snapshot
        The name of the snapshot to rollback to, or the base snapshot to use for comparison.
        The `aci_snapshot' module can be used to query the list of available snapshots.

        type: str

- state
        Use `preview' for previewing the diff between two snapshots.
        Use `rollback' for reverting the configuration to a previous snapshot.
        (Choices: preview, rollback)[Default: rollback]
        type: str

- timeout
        The socket level timeout in seconds.
        [Default: 30]
        type: int

- use_proxy
        If `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts.
        [Default: True]
        type: bool

- use_ssl
        If `no', an HTTP connection will be used instead of the default HTTPS connection.
        [Default: True]
        type: bool

- username
        The username to use for authentication.
        (Aliases: user)[Default: admin]
        type: str

- validate_certs
        If `no', SSL certificates will not be validated.
        This should only set to `no' when used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool


SEE ALSO:
      * Module aci_config_snapshot
           The official documentation on the aci_config_snapshot module.
           https://docs.ansible.com/ansible/latest/modules/aci_config_snapshot_module.html
      * APIC Management Information Model reference
           More information about the internal APIC class *config:ImportP*.
           https://developer.cisco.com/docs/apic-mim-ref/
      * Ansible documentation [aci_guide]
           Detailed information on how to manage your ACI infrastructure using Ansible.
           https://docs.ansible.com/ansible/latest/#stq=aci_guide&stp=1
      * Ansible documentation [aci_dev_guide]
           Detailed guide on how to write your own Cisco ACI modules to contribute.
           https://docs.ansible.com/ansible/latest/#stq=aci_dev_guide&stp=1


AUTHOR: Jacob McGill (@jmcgill298)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

---
- name: Create a Snapshot
  aci_config_snapshot:
    host: apic
    username: admin
    password: SomeSecretPassword
    export_policy: config_backup
    state: present
  delegate_to: localhost

- name: Query Existing Snapshots
  aci_config_snapshot:
    host: apic
    username: admin
    password: SomeSecretPassword
    export_policy: config_backup
    state: query
  delegate_to: localhost

- name: Compare Snapshot Files
  aci_config_rollback:
    host: apic
    username: admin
    password: SomeSecretPassword
    export_policy: config_backup
    snapshot: run-2017-08-28T06-24-01
    compare_export_policy: config_backup
    compare_snapshot: run-2017-08-27T23-43-56
    state: preview
  delegate_to: localhost

- name: Rollback Configuration
  aci_config_rollback:
    host: apic
    username: admin
    password: SomeSecretPassword
    import_policy: rollback_config
    export_policy: config_backup
    snapshot: run-2017-08-28T06-24-01
    state: rollback
  delegate_to: localhost

- name: Rollback Configuration
  aci_config_rollback:
    host: apic
    username: admin
    password: SomeSecretPassword
    import_policy: rollback_config
    export_policy: config_backup
    snapshot: run-2017-08-28T06-24-01
    description: Rollback 8-27 changes
    import_mode: atomic
    import_type: replace
    fail_on_decrypt: yes
    state: rollback
  delegate_to: localhost


RETURN VALUES:

preview:
  description: A preview between two snapshots
  returned: when state is preview
  type: str
error:
  description: The error information as returned from the APIC
  returned: failure
  type: dict
  sample:
    {
        "code": "122",
        "text": "unknown managed object class foo"
    }
raw:
  description: The raw output returned by the APIC REST API (xml or json)
  returned: parse error
  type: str
  sample: '<?xml version="1.0" encoding="UTF-8"?><imdata totalCount="1"><error code="122" text="unknown managed object class foo"/></imdata>'
filter_string:
  description: The filter string used for the request
  returned: failure or debug
  type: str
  sample: ?rsp-prop-include=config-only
method:
  description: The HTTP method used for the request to the APIC
  returned: failure or debug
  type: str
  sample: POST
response:
  description: The HTTP response from the APIC
  returned: failure or debug
  type: str
  sample: OK (30 bytes)
status:
  description: The HTTP status from the APIC
  returned: failure or debug
  type: int
  sample: 200
url:
  description: The HTTP url used for the request to the APIC
  returned: failure or debug
  type: str
  sample: https://10.11.12.13/api/mo/uni/tn-production.json

