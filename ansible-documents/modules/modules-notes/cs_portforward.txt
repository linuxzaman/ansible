> CS_PORTFORWARD    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/cloudstack/cs_portforward.py)

        Create, update and remove port forwarding rules.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- account
        Account the `vm' is related to.
        [Default: (null)]
        type: str

- api_http_method
        HTTP method used to query the API endpoint.
        If not given, the `CLOUDSTACK_METHOD' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is `get' if not specified.
        (Choices: get, post)[Default: (null)]
        type: str

- api_key
        API key of the CloudStack API.
        If not given, the `CLOUDSTACK_KEY' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_region
        Name of the ini section in the `cloustack.ini' file.
        If not given, the `CLOUDSTACK_REGION' env variable is considered.
        [Default: cloudstack]
        type: str

- api_secret
        Secret key of the CloudStack API.
        If not set, the `CLOUDSTACK_SECRET' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- api_timeout
        HTTP timeout in seconds.
        If not given, the `CLOUDSTACK_TIMEOUT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        Fallback value is 10 seconds if not specified.
        [Default: (null)]
        type: int

- api_url
        URL of the CloudStack API e.g. https://cloud.example.com/client/api.
        If not given, the `CLOUDSTACK_ENDPOINT' env variable is considered.
        As the last option, the value is taken from the ini config file, also see the notes.
        [Default: (null)]
        type: str

- domain
        Domain the `vm' is related to.
        [Default: (null)]
        type: str

= ip_address
        Public IP address the rule is assigned to.

        type: str

- network
        Name of the network.
        [Default: (null)]
        type: str
        version_added: 2.3

- open_firewall
        Whether the firewall rule for public port should be created, while creating the new rule.
        Use [cs_firewall] for managing firewall rules.
        [Default: False]
        type: bool

- poll_async
        Poll async jobs until job has finished.
        [Default: True]
        type: bool

- private_end_port
        End private port for this rule.
        If not specified equal `private_port'.
        [Default: (null)]
        type: int

= private_port
        Start private port for this rule.

        type: int

- project
        Name of the project the `vm' is located in.
        [Default: (null)]
        type: str

- protocol
        Protocol of the port forwarding rule.
        (Choices: tcp, udp)[Default: tcp]
        type: str

- public_end_port
        End public port for this rule.
        If not specified equal `public_port'.
        [Default: (null)]
        type: int

= public_port
        Start public port for this rule.

        type: int

- state
        State of the port forwarding rule.
        (Choices: present, absent)[Default: present]
        type: str

- tags
        List of tags. Tags are a list of dictionaries having keys `key' and `value'.
        To delete all tags, set a empty list e.g. `tags: []'.
        (Aliases: tag)[Default: (null)]
        type: list
        version_added: 2.4

- vm
        Name of virtual machine which we make the port forwarding rule for.
        Required if `state=present'.
        [Default: (null)]
        type: str

- vm_guest_ip
        VM guest NIC secondary IP address for the port forwarding rule.
        [Default: (null)]
        type: str

- vpc
        Name of the VPC.
        [Default: (null)]
        type: str
        version_added: 2.3

- zone
        Name of the zone in which the virtual machine is in.
        If not set, default zone is used.
        [Default: (null)]
        type: str


NOTES:
      * Ansible uses the `cs' library's configuration method if credentials are not provided by the arguments `api_url', `api_key',
        `api_secret'. Configuration is read from several locations, in the following order. The `CLOUDSTACK_ENDPOINT',
        `CLOUDSTACK_KEY', `CLOUDSTACK_SECRET' and `CLOUDSTACK_METHOD'. `CLOUDSTACK_TIMEOUT' environment variables. A
        `CLOUDSTACK_CONFIG' environment variable pointing to an `.ini' file. A `cloudstack.ini' file in the current working
        directory. A `.cloudstack.ini' file in the users home directory. Optionally multiple credentials and endpoints can be
        specified using ini sections in `cloudstack.ini'. Use the argument `api_region' to select the section name, default section
        is `cloudstack'. See https://github.com/exoscale/cs for more information.
      * A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud
        Guide,../scenario_guides/guide_cloudstack.html).
      * This module supports check mode.


REQUIREMENTS:  python >= 2.6, cs >= 0.6.10

AUTHOR: RenÃ© Moser (@resmo)
        METADATA:
          status:
          - stableinterface
          supported_by: community
        

EXAMPLES:

- name: 1.2.3.4:80 -> web01:8080
  cs_portforward:
    ip_address: 1.2.3.4
    vm: web01
    public_port: 80
    private_port: 8080
  delegate_to: localhost

- name: forward SSH and open firewall
  cs_portforward:
    ip_address: '{{ public_ip }}'
    vm: '{{ inventory_hostname }}'
    public_port: '{{ ansible_ssh_port }}'
    private_port: 22
    open_firewall: true
  delegate_to: localhost

- name: forward DNS traffic, but do not open firewall
  cs_portforward:
    ip_address: 1.2.3.4
    vm: '{{ inventory_hostname }}'
    public_port: 53
    private_port: 53
    protocol: udp
  delegate_to: localhost

- name: remove ssh port forwarding
  cs_portforward:
    ip_address: 1.2.3.4
    public_port: 22
    private_port: 22
    state: absent
  delegate_to: localhost


RETURN VALUES:

---
id:
  description: UUID of the public IP address.
  returned: success
  type: str
  sample: a6f7a5fc-43f8-11e5-a151-feff819cdc9f
ip_address:
  description: Public IP address.
  returned: success
  type: str
  sample: 1.2.3.4
protocol:
  description: Protocol.
  returned: success
  type: str
  sample: tcp
private_port:
  description: Start port on the virtual machine's IP address.
  returned: success
  type: int
  sample: 80
private_end_port:
  description: End port on the virtual machine's IP address.
  returned: success
  type: int
  sample: 80
public_port:
  description: Start port on the public IP address.
  returned: success
  type: int
  sample: 80
public_end_port:
  description: End port on the public IP address.
  returned: success
  type: int
  sample: 80
tags:
  description: Tags related to the port forwarding.
  returned: success
  type: list
  sample: []
vm_name:
  description: Name of the virtual machine.
  returned: success
  type: str
  sample: web-01
vm_display_name:
  description: Display name of the virtual machine.
  returned: success
  type: str
  sample: web-01
vm_guest_ip:
  description: IP of the virtual machine.
  returned: success
  type: str
  sample: 10.101.65.152
vpc:
  description: Name of the VPC.
  returned: success
  type: str
  sample: my_vpc
network:
  description: Name of the network.
  returned: success
  type: str
  sample: dmz

