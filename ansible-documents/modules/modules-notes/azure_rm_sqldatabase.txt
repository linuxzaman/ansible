> AZURE_RM_SQLDATABASE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/azure/azure_rm_sqldatabase.py)

        Create, update and delete instance of SQL Database.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- ad_user
        Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]
        type: str

- adfs_authority_url
        Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
        [Default: (null)]
        type: str
        version_added: 2.6

- api_profile
        Selects an API profile to use when communicating with Azure services. Default value of `latest' is appropriate for public clouds;
        future values will allow use with Azure Stack.
        [Default: latest]
        type: str
        version_added: 2.5

- append_tags
        Use to control if tags field is canonical or just appends to existing tags.
        When canonical, any tags not found in the tags parameter will be removed from the object's metadata.
        [Default: True]
        type: bool

- auth_source
        Controls the source of the credentials to use for authentication.
        If not specified, ANSIBLE_AZURE_AUTH_SOURCE environment variable will be used and default to `auto' if variable is not defined.
        `auto' will follow the default precedence of module parameters -> environment variables -> default profile in credential file
        `~/.azure/credentials'.
        When set to `cli', the credentials will be sources from the default Azure CLI profile.
        Can also be set via the `ANSIBLE_AZURE_AUTH_SOURCE' environment variable.
        When set to `msi', the host machine must be an azure resource with an enabled MSI extension. `subscription_id' or the environment
        variable `AZURE_SUBSCRIPTION_ID' can be used to identify the subscription ID if the resource is granted access to more than one
        subscription, otherwise the first subscription is chosen.
        The `msi' was added in Ansible 2.6.
        (Choices: auto, cli, credential_file, env, msi)[Default: (null)]
        type: str
        version_added: 2.5

- cert_validation_mode
        Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate,
        but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing `ignore'. Can
        also be set via credential file profile or the `AZURE_CERT_VALIDATION' environment variable.
        (Choices: ignore, validate)[Default: (null)]
        type: str
        version_added: 2.5

- client_id
        Azure client ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- cloud_environment
        For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg,
        `AzureChinaCloud', `AzureUSGovernment'), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via
        credential file profile or the `AZURE_CLOUD_ENVIRONMENT' environment variable.
        [Default: AzureCloud]
        type: str
        version_added: 2.4

- collation
        The collation of the database. If `create_mode' is not `default', this value is ignored.
        [Default: (null)]

- create_mode
        Specifies the mode of database creation.
        `default': regular database creation.
        `copy': creates a database as a copy of an existing database.
        `online_secondary'/`non_readable_secondary': creates a database as a (readable or nonreadable) secondary replica of an existing
        database.
        `point_in_time_restore': Creates a database by restoring a point in time backup of an existing database.
        `recovery': Creates a database by restoring a geo-replicated backup.
        `restore': Creates a database by restoring a backup of a deleted database.
        `restore_long_term_retention_backup': Creates a database by restoring from a long term retention vault.
        `copy', `non_readable_secondary', `online_secondary' and `restore_long_term_retention_backup' are not supported for
        `data_warehouse' edition.
        (Choices: copy, default, non_readable_secondary, online_secondary, point_in_time_restore, recovery, restore,
        restore_long_term_retention_backup)[Default: (null)]

- edition
        The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If `create_mode' is
        `non_readable_secondary' or `online_secondary', this value is ignored. To see possible values, query the capabilities API
        (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId:
        'Capabilities_ListByLocation.'.
        (Choices: web, business, basic, standard, premium, free, stretch, data_warehouse, system, system2)[Default: (null)]

- elastic_pool_name
        The name of the elastic pool the database is in. Not supported for `data_warehouse' edition.
        [Default: (null)]

- force_update
        SQL Database will be updated if given parameters differ from existing resource state.
        To force SQL Database update in any circumstances set this parameter to True.
        [Default: (null)]
        type: bool

- location
        Resource location. If not set, location from the resource group will be used as `default'.
        [Default: (null)]

- max_size_bytes
        The max size of the database expressed in bytes. If `create_mode' is not `default', this value is ignored. To see possible
        values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)
        referred to by operationId: 'Capabilities_ListByLocation.'
        [Default: (null)]

= name
        The name of the database to be operated on (updated or created).


- password
        Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
        [Default: (null)]

- profile
        Security profile found in ~/.azure/credentials file.
        [Default: (null)]
        type: str

- read_scale
        If the database is a geo-secondary, indicates whether read-only connections are allowed to this database or not. Not supported
        for `data_warehouse' edition.
        [Default: False]
        type: bool

- recovery_services_recovery_point_resource_id
        Required if `create_mode' is `restore_long_term_retention_backup', then this value is required. Specifies the resource ID of the
        recovery point to restore from.
        [Default: (null)]

= resource_group
        The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the
        portal.


- restore_point_in_time
        Required if `create_mode' is `point_in_time_restore', this value is required. If `create_mode' is `restore', this value is
        optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.
        Must be greater than or equal to the source database's earliestRestoreDate value.
        [Default: (null)]

- sample_name
        Indicates the name of the sample schema to apply when creating this database. If `create_mode' is not `default', this value is
        ignored. Not supported for `data_warehouse' edition.
        (Choices: adventure_works_lt)[Default: (null)]

- secret
        Azure client secret. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

= server_name
        The name of the server.


- source_database_deletion_date
        Required if `create_mode' is `restore' and `source_database_id' is the deleted database's original resource id when it existed
        (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was
        deleted.
        [Default: (null)]

- source_database_id
        Required unless `create_mode' is `default' or `restore_long_term_retention_backup'.
        Specifies the resource ID of the source database
        [Default: (null)]

- state
        Assert the state of the SQL Database. Use `present' to create or update an SQL Database and `absent' to delete it.
        (Choices: absent, present)[Default: present]

- subscription_id
        Your Azure subscription Id.
        [Default: (null)]
        type: str

- tags
        Dictionary of string:string pairs to assign as metadata to the object.
        Metadata tags on the object will be updated with any provided values.
        To remove tags set append_tags option to false.
        [Default: (null)]
        type: dict

- tenant
        Azure tenant ID. Use when authenticating with a Service Principal.
        [Default: (null)]
        type: str

- zone_redundant
        Is this database is zone redundant? It means the replicas of this database will be spread across multiple availability zones.
        [Default: False]
        type: bool


NOTES:
      * For authentication with Azure you can pass parameters, set environment variables, use a profile stored in
        ~/.azure/credentials, or log in before you run your tasks or playbook with `az login'.
      * Authentication is also possible using a service principal or Active Directory user.
      * To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables
        AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.
      * To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the
        environment.
      * Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and
        the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also
        possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.


SEE ALSO:
      * Sign in with Azure CLI
           How to authenticate using the `az login' command.
           https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest


REQUIREMENTS:  python >= 2.7, azure >= 2.0.0

AUTHOR: Zim Kalinowski (@zikalino)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Create (or update) SQL Database
    azure_rm_sqldatabase:
      resource_group: myResourceGroup
      server_name: sqlcrudtest-5961
      name: testdb
      location: eastus

  - name: Restore SQL Database
    azure_rm_sqldatabase:
      resource_group: myResourceGroup
      server_name: sqlcrudtest-5961
      name: restoreddb
      location: eastus
      create_mode: restore
      restorable_dropped_database_id: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/s
                                       ervers/testsvr/restorableDroppedDatabases/testdb2,131444841315030000"

  - name: Create SQL Database in Copy Mode
    azure_rm_sqldatabase:
      resource_group: myResourceGroup
      server_name: sqlcrudtest-5961
      name: copydb
      location: eastus
      create_mode: copy
      source_database_id: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/servers/tests
                           vr/databases/testdb"


RETURN VALUES:

id:
    description:
        - Resource ID.
    returned: always
    type: str
    sample: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/t
            estdb"
database_id:
    description:
        - The ID of the database.
    returned: always
    type: str
    sample: database_id
status:
    description:
        - The status of the database.
    returned: always
    type: str
    sample: Online

