> VMWARE_GUEST_MOVE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_guest_move.py)

        This module can be used to move virtual machines between folders.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= datacenter
        Destination datacenter for the move operation


= dest_folder
        Absolute path to move an existing guest
        The dest_folder should include the datacenter. ESX's datacenter is ha-datacenter.
        This parameter is case sensitive.
        Examples:
           dest_folder: /ha-datacenter/vm
           dest_folder: ha-datacenter/vm
           dest_folder: /datacenter1/vm
           dest_folder: datacenter1/vm
           dest_folder: /datacenter1/vm/folder1
           dest_folder: datacenter1/vm/folder1
           dest_folder: /folder1/datacenter1/vm
           dest_folder: folder1/datacenter1/vm
           dest_folder: /folder1/datacenter1/vm/folder2


- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- name
        Name of the existing virtual machine to move.
        This is required if `UUID' is not supplied.
        [Default: (null)]

- name_match
        If multiple virtual machines matching the name, use the first or last found.
        (Choices: first, last)[Default: first]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- use_instance_uuid
        Whether to use the VMWare instance UUID rather than the BIOS UUID.
        [Default: False]
        type: bool
        version_added: 2.8

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- uuid
        UUID of the virtual machine to manage if known, this is VMware's unique identifier.
        This is required if `name' is not supplied.
        [Default: (null)]

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 5.5 and vSphere 6.5


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Jose Angel Munoz (@imjoseangel)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Move Virtual Machine
  vmware_guest_move:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: datacenter
    validate_certs: no
    name: testvm-1
    dest_folder: "/{{ datacenter }}/vm"
  delegate_to: localhost

- name: Get VM UUID
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ datacenter }}"
    folder: "/{{datacenter}}/vm"
    name: "{{ vm_name }}"
  delegate_to: localhost
  register: vm_facts

- name: Get UUID from previous task and pass it to this task
  vmware_guest_move:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ datacenter }}"
    uuid: "{{ vm_facts.instance.hw_product_uuid }}"
    dest_folder: "/DataCenter/vm/path/to/new/folder/where/we/want"
  delegate_to: localhost
  register: facts


RETURN VALUES:

instance:
    description: metadata about the virtual machine
    returned: always
    type: dict
    sample: {
        "annotation": null,
        "current_snapshot": null,
        "customvalues": {},
        "guest_consolidation_needed": false,
        "guest_question": null,
        "guest_tools_status": null,
        "guest_tools_version": "0",
        "hw_cores_per_socket": 1,
        "hw_datastores": [
            "LocalDS_0"
        ],
        "hw_esxi_host": "DC0_H0",
        "hw_eth0": {
            "addresstype": "generated",
            "ipaddresses": null,
            "label": "ethernet-0",
            "macaddress": "00:0c:29:6b:34:2c",
            "macaddress_dash": "00-0c-29-6b-34-2c",
            "summary": "DVSwitch: 43cdd1db-1ef7-4016-9bbe-d96395616199"
        },
        "hw_files": [
            "[LocalDS_0] DC0_H0_VM0/DC0_H0_VM0.vmx"
        ],
        "hw_folder": "/F0/DC0/vm/F0",
        "hw_guest_full_name": null,
        "hw_guest_ha_state": null,
        "hw_guest_id": "otherGuest",
        "hw_interfaces": [
            "eth0"
        ],
        "hw_is_template": false,
        "hw_memtotal_mb": 32,
        "hw_name": "DC0_H0_VM0",
        "hw_power_status": "poweredOn",
        "hw_processor_count": 1,
        "hw_product_uuid": "581c2808-64fb-45ee-871f-6a745525cb29",
        "instance_uuid": "8bcb0b6e-3a7d-4513-bf6a-051d15344352",
        "ipv4": null,
        "ipv6": null,
        "module_hw": true,
        "snapshots": []
    }

