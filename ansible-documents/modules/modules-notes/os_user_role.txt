> OS_USER_ROLE    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/openstack/os_user_role.py)

        Grant and revoke roles in either project or domain context for OpenStack Identity Users.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- api_timeout
        How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests
        library.
        [Default: (null)]
        type: int

- auth
        Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default `password' plugin, this
        would contain `auth_url', `username', `password', `project_name' and any information about domains (for example,
        `os_user_domain_name' or `os_project_domain_name') if the cloud supports them. For other plugins, this param will need to contain
        whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_*
        environment variables are present.
        [Default: (null)]
        type: dict

- auth_type
        Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be
        indicated here and the contents of the `auth' parameter should be updated accordingly.
        [Default: (null)]
        type: str

- availability_zone
        Ignored. Present for backwards compatibility
        [Default: (null)]

- ca_cert
        A path to a CA Cert bundle that can be used as part of verifying SSL API requests.
        (Aliases: cacert)[Default: (null)]
        type: str

- client_cert
        A path to a client certificate to use as part of the SSL transaction.
        (Aliases: cert)[Default: (null)]
        type: str

- client_key
        A path to a client key to use as part of the SSL transaction.
        (Aliases: key)[Default: (null)]
        type: str

- cloud
        Named cloud or cloud config to operate against. If `cloud' is a string, it references a named cloud config as defined in an
        OpenStack clouds.yaml file. Provides default values for `auth' and `auth_type'. This parameter is not needed if `auth' is
        provided or if OpenStack OS_* environment variables are present. If `cloud' is a dict, it contains a complete cloud configuration
        like would be in a section of clouds.yaml.
        [Default: (null)]
        type: raw

- domain
        ID of the domain to scope the role association to. Valid only with keystone version 3, and required if `project' is not
        specified.
        [Default: (null)]

- group
        Name or ID for the group. Valid only with keystone version 3. If `group' is not specified, then `user' is required. Both may not
        be specified.
        [Default: (null)]

- interface
        Endpoint URL type to fetch from the service catalog.
        (Aliases: endpoint_type)(Choices: admin, internal, public)[Default: public]
        type: str
        version_added: 2.3

- project
        Name or ID of the project to scope the role association to. If you are using keystone version 2, then this value is required.
        [Default: (null)]

- region_name
        Name of the region.
        [Default: (null)]
        type: str

= role
        Name or ID for the role.


- state
        Should the roles be present or absent on the user.
        (Choices: present, absent)[Default: present]

- timeout
        How long should ansible wait for the requested resource.
        [Default: 180]
        type: int

- user
        Name or ID for the user. If `user' is not specified, then `group' is required. Both may not be specified.
        [Default: (null)]

- validate_certs
        Whether or not SSL API requests should be verified.
        Before Ansible 2.3 this defaulted to `yes'.
        (Aliases: verify)[Default: False]
        type: bool

- wait
        Should ansible wait until the requested resource is complete.
        [Default: True]
        type: bool


NOTES:
      * The standard OpenStack environment variables, such as `OS_USERNAME' may be used instead of providing explicit values.
      * Auth information is driven by openstacksdk, which means that values can come from a yaml config file in
        /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment
        variables, then finally by explicit parameters in plays. More information can be found at
        https://docs.openstack.org/openstacksdk/


REQUIREMENTS:  openstacksdk, python >= 2.7

AUTHOR: Monty Taylor (@emonty), David Shrewsbury (@Shrews)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

# Grant an admin role on the user admin in the project project1
- os_user_role:
    cloud: mycloud
    user: admin
    role: admin
    project: project1

# Revoke the admin role from the user barney in the newyork domain
- os_user_role:
    cloud: mycloud
    state: absent
    user: barney
    role: admin
    domain: newyork


RETURN VALUES:

#

