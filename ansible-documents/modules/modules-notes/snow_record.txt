> SNOW_RECORD    (/usr/lib/python2.7/dist-packages/ansible/modules/notification/snow_record.py)

        Creates/Deletes/Updates a single record in ServiceNow

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

- attachment
        Attach a file to the record
        [Default: (null)]

- data
        key, value pairs of data to load into the record. See Examples. Required for `state:present'
        [Default: (null)]

= instance
        The service now instance name


- lookup_field
        Changes the field that `number' uses to find records
        [Default: number]

- number
        Record number to update. Required for `state:absent'
        [Default: (null)]

= password
        Password for username


= state
        If `present' is supplied with a `number' argument, the module will attempt to update the record with the supplied data.  If no
        such record exists, a new one will be created.  `absent' will delete a record.
        (Choices: present, absent)

- table
        Table to query for records
        [Default: incident]

= username
        User to connect to ServiceNow as



REQUIREMENTS:  python pysnow (pysnow)

AUTHOR: Tim Rightnour (@garbled1)
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Grab a user record
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev99999
    state: present
    number: 62826bf03710200044e0bfc8bcbe5df1
    table: sys_user
    lookup_field: sys_id

- name: Create an incident
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev99999
    state: present
    data:
      short_description: "This is a test incident opened by Ansible"
      severity: 3
      priority: 2
  register: new_incident

- name: Delete the record we just made
  snow_record:
    username: admin
    password: xxxxxxx
    instance: dev99999
    state: absent
    number: "{{new_incident['record']['number']}}"

- name: Delete a non-existant record
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev99999
    state: absent
    number: 9872354
  failed_when: false

- name: Update an incident
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev99999
    state: present
    number: INC0000055
    data:
      work_notes : "Been working all day on this thing."

- name: Attach a file to an incident
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev99999
    state: present
    number: INC0000055
    attachment: README.md
  tags: attach


RETURN VALUES:

record:
   description: Record data from Service Now
   type: dict
   returned: when supported
attached_file:
   description: Details of the file that was attached via C(attachment)
   type: dict
   returned: when supported

