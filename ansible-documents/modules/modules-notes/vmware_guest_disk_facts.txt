> VMWARE_GUEST_DISK_FACTS    (/usr/lib/python2.7/dist-packages/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py)

        This module can be used to gather facts about disks belonging to given virtual machine. All parameters and VMware object names
        are case sensitive.

  * This module is maintained by The Ansible Community
OPTIONS (= is mandatory):

= datacenter
        The datacenter name to which virtual machine belongs to.


- folder
        Destination folder, absolute or relative path to find an existing guest.
        This is required parameter, only if multiple VMs are found with same name.
        The folder should include the datacenter. ESX's datacenter is ha-datacenter
        Examples:
           folder: /ha-datacenter/vm
           folder: ha-datacenter/vm
           folder: /datacenter1/vm
           folder: datacenter1/vm
           folder: /datacenter1/vm/folder1
           folder: datacenter1/vm/folder1
           folder: /folder1/datacenter1/vm
           folder: folder1/datacenter1/vm
           folder: /folder1/datacenter1/vm/folder2
           folder: vm/folder2
           folder: folder2
        [Default: (null)]

- hostname
        The hostname or IP address of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_HOST' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: (null)]
        type: str

- name
        Name of the virtual machine.
        This is required parameter, if parameter `uuid' is not supplied.
        [Default: (null)]

- password
        The password of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PASSWORD' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: pass, pwd)[Default: (null)]
        type: str

- port
        The port number of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_PORT' will be used instead.
        Environment variable support added in Ansible 2.6.
        [Default: 443]
        type: int
        version_added: 2.5

- use_instance_uuid
        Whether to use the VMWare instance UUID rather than the BIOS UUID.
        [Default: False]
        type: bool
        version_added: 2.8

- username
        The username of the vSphere vCenter or ESXi server.
        If the value is not specified in the task, the value of environment variable `VMWARE_USER' will be used instead.
        Environment variable support added in Ansible 2.6.
        (Aliases: admin, user)[Default: (null)]
        type: str

- uuid
        UUID of the instance to gather facts if known, this is VMware's unique identifier.
        This is required parameter, if parameter `name' is not supplied.
        [Default: (null)]

- validate_certs
        Allows connection when SSL certificates are not valid. Set to `false' when certificates are not trusted.
        If the value is not specified in the task, the value of environment variable `VMWARE_VALIDATE_CERTS' will be used instead.
        Environment variable support added in Ansible 2.6.
        If set to `yes', please make sure Python >= 2.7.9 is installed on the given machine.
        [Default: True]
        type: bool


NOTES:
      * Tested on vSphere 6.0 and 6.5.
      * Disk UUID information is added in version 2.8.
      * Additional information about guest disk backings added in version 2.8.


REQUIREMENTS:  python >= 2.6, PyVmomi

AUTHOR: Abhijeet Kasurde (@Akasurde) <akasurde@redhat.com>
        METADATA:
          status:
          - preview
          supported_by: community
        

EXAMPLES:

- name: Gather disk facts from virtual machine using UUID
  vmware_guest_disk_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: ha-datacenter
    validate_certs: no
    uuid: 421e4592-c069-924d-ce20-7e7533fab926
  delegate_to: localhost
  register: disk_facts

- name: Gather disk facts from virtual machine using name
  vmware_guest_disk_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: ha-datacenter
    validate_certs: no
    name: VM_225
  delegate_to: localhost
  register: disk_facts


RETURN VALUES:

guest_disk_facts:
    description: metadata about the virtual machine's disks
    returned: always
    type: dict
    sample: {
        "0": {
            "backing_datastore": "datastore2",
            "backing_disk_mode": "persistent",
            "backing_eagerlyscrub": false,
            "backing_filename": "[datastore2] VM_225/VM_225.vmdk",
            "backing_thinprovisioned": false,
            "backing_type": "FlatVer2",
            "backing_writethrough": false,
            "backing_uuid": "200C3A00-f82a-97af-02ff-62a595f0020a",
            "capacity_in_bytes": 10485760,
            "capacity_in_kb": 10240,
            "controller_key": 1000,
            "key": 2000,
            "label": "Hard disk 1",
            "summary": "10,240 KB",
            "unit_number": 0
        },
        "1": {
            "backing_datastore": "datastore3",
            "backing_devicename": "vml.012345678901234567890123456789012345678901234567890123",
            "backing_disk_mode": "independent_persistent",
            "backing_filename": "[datastore3] VM_226/VM_226.vmdk",
            "backing_lunuuid": "012345678901234567890123456789012345678901234567890123",
            "backing_type": "RawDiskMappingVer1",
            "backing_uuid": null,
            "capacity_in_bytes": 15728640,
            "capacity_in_kb": 15360,
            "controller_key": 1000,
            "key": 2001,
            "label": "Hard disk 3",
            "summary": "15,360 KB",
            "unit_number": 1
        },
    }

