> NA_ONTAP_FIREWALL_POLICY    (/usr/lib/python2.7/dist-packages/ansible/modules/storage/netapp/na_ontap_firewall_policy.py)

        Configure firewall on an ONTAP node and manage firewall policy for an ONTAP SVM

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- allow_list
        A list of IPs and masks to use.
        The host bits of the IP addresses used in this list must be set to 0.
        [Default: (null)]

- enable
        enable firewall on a node
        (Choices: enable, disable)[Default: (null)]

= hostname
        The hostname or IP address of the ONTAP instance.

        type: str

- http_port
        Override the default port (80 or 443) with this port
        [Default: (null)]
        type: int

- https
        Enable and disable https
        [Default: False]
        type: bool

- logging
        enable logging for firewall on a node
        (Choices: enable, disable)[Default: (null)]

- node
        The node to run the firewall configuration on
        [Default: (null)]

- ontapi
        The ontap api version to use
        [Default: (null)]
        type: int

= password
        Password for the specified user.
        (Aliases: pass)
        type: str

- policy
        A policy name for the firewall policy
        [Default: (null)]

- service
        The service to apply the policy to
        (Choices: dns, http, https, ndmp, ndmps, ntp, rsh, snmp, ssh, telnet)[Default: (null)]

- state
        Whether to set up a firewall policy or not
        (Choices: present, absent)[Default: present]

= username
        This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required. For more
        information, please read the documentation https://mysupport.netapp.com/NOW/download/software/nmsdk/9.4/.
        (Aliases: user)
        type: str

- validate_certs
        If set to `no', the SSL certificates will not be validated.
        This should only set to `False' used on personally controlled sites using self-signed certificates.
        [Default: True]
        type: bool

- vserver
        The Vserver to apply the policy to.
        [Default: (null)]


NOTES:
      * The modules prefixed with na\\_ontap are built to support the ONTAP storage platform.


REQUIREMENTS:  A physical or virtual clustered Data ONTAP system. The modules support Data ONTAP 9.1 and onward, Ansible 2.6, Python
        package ipaddress. Install using 'pip install ipaddress', Python2 netapp-lib (2017.10.30) or later. Install using
        'pip install netapp-lib', Python3 netapp-lib (2018.11.13) or later. Install using 'pip install netapp-lib', To
        enable http on the cluster you must run the following commands 'set -privilege advanced;' 'system services web
        modify -http-enabled true;'

AUTHOR: NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: create firewall Policy
      na_ontap_firewall_policy:
        state: present
        allow_list: [1.2.3.0/24,1.3.0.0/16]
        policy: pizza
        service: http
        vserver: ci_dev
        hostname: "{{ netapp hostname }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"

    - name: Modify firewall Policy
      na_ontap_firewall_policy:
        state: present
        allow_list: [1.5.3.0/24]
        policy: pizza
        service: http
        vserver: ci_dev
        hostname: "{{ netapp hostname }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"

    - name: Destory firewall Policy
      na_ontap_firewall_policy:
        state: absent
        policy: pizza
        service: http
        vserver: ci_dev
        hostname: "{{ netapp hostname }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"

    - name: Enable firewall and logging on a node
      na_ontap_firewall_policy:
        node: test-vsim1
        enable: enable
        logging: enable
        hostname: "{{ netapp hostname }}"
        username: "{{ netapp username }}"
        password: "{{ netapp password }}"


RETURN VALUES:


